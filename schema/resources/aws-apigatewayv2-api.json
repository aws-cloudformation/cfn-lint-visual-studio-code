{
  "typeName": "AWS::ApiGatewayV2::Api",
  "description": "Resource Type definition for AWS::ApiGatewayV2::Api",
  "additionalProperties": false,
  "properties": {
    "RouteSelectionExpression": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "BodyS3Location": {
      "$ref": "#/definitions/BodyS3Location",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType:      \n\nUpdate requires: No interruption "
    },
    "Description": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "ApiEndpoint": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "BasePath": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "FailOnWarnings": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: boolean     \n\nUpdate requires: No interruption "
    },
    "DisableExecuteApiEndpoint": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: boolean     \n\nUpdate requires: No interruption "
    },
    "DisableSchemaValidation": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: boolean     \n\nUpdate requires: No interruption "
    },
    "Name": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Target": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "CredentialsArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "CorsConfiguration": {
      "$ref": "#/definitions/Cors",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType:      \n\nUpdate requires: No interruption "
    },
    "Version": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "ProtocolType": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "RouteKey": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "ApiId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Body": {
      "type": "object",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: object     \n\nUpdate requires: No interruption "
    },
    "Tags": {
      "type": "object",
      "description": "This resource type use map for Tags, suggest to use List of Tag",
      "additionalProperties": false,
      "patternProperties": {
        ".*": {
          "type": "string"
        }
      },
      "markdownDescription": "This resource type use map for Tags, suggest to use List of Tag\n\n---\n\nRequired: No\n\nType: object     \n\nUpdate requires: No interruption "
    },
    "ApiKeySelectionExpression": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    }
  },
  "definitions": {
    "BodyS3Location": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Etag": {
          "type": "string"
        },
        "Bucket": {
          "type": "string"
        },
        "Version": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        }
      }
    },
    "Cors": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AllowOrigins": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "type": "string"
          }
        },
        "AllowCredentials": {
          "type": "boolean"
        },
        "ExposeHeaders": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "type": "string"
          }
        },
        "AllowHeaders": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "type": "string"
          }
        },
        "MaxAge": {
          "type": "integer"
        },
        "AllowMethods": {
          "type": "array",
          "uniqueItems": false,
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "createOnlyProperties": [
    "/properties/ProtocolType"
  ],
  "primaryIdentifier": [
    "/properties/ApiId"
  ],
  "readOnlyProperties": [
    "/properties/ApiId",
    "/properties/ApiEndpoint"
  ],
  "writeOnlyProperties": [
    "/properties/BasePath",
    "/properties/Body",
    "/properties/BodyS3Location",
    "/properties/BodyS3Location/Etag",
    "/properties/BodyS3Location/Bucket",
    "/properties/BodyS3Location/Version",
    "/properties/BodyS3Location/Key",
    "/properties/CredentialsArn",
    "/properties/FailOnWarnings",
    "/properties/RouteKey",
    "/properties/Target",
    "/properties/DisableSchemaValidation"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "apigateway:POST",
        "s3:getObject"
      ]
    },
    "update": {
      "permissions": [
        "apigateway:PATCH",
        "apigateway:GET",
        "apigateway:PUT",
        "s3:getObject"
      ]
    },
    "read": {
      "permissions": [
        "apigateway:GET",
        "s3:getObject"
      ]
    },
    "delete": {
      "permissions": [
        "apigateway:GET",
        "apigateway:DELETE",
        "s3:getObject"
      ]
    },
    "list": {
      "permissions": [
        "apigateway:GET",
        "s3:getObject"
      ]
    }
  }
}