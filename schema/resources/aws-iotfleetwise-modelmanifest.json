{
  "typeName": "AWS::IoTFleetWise::ModelManifest",
  "description": "Definition of AWS::IoTFleetWise::ModelManifest Resource Type",
  "definitions": {
    "ManifestStatus": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "DRAFT"
      ],
      "default": "DRAFT"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    }
  },
  "properties": {
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "CreationTime": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Description": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 1,
      "pattern": "^[^\\u0000-\\u001F\\u007F]+$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 1  \n\nMaximum Length: 2048  \n\nPattern: ^[^\\u0000-\\u001F\\u007F]+$  \n\nUpdate requires: No interruption "
    },
    "LastModificationTime": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Name": {
      "type": "string",
      "maxLength": 100,
      "minLength": 1,
      "pattern": "^[a-zA-Z\\d\\-_:]+$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 1  \n\nMaximum Length: 100  \n\nPattern: ^[a-zA-Z\\d\\-_:]+$  \n\nUpdate requires: No interruption "
    },
    "Nodes": {
      "insertionOrder": false,
      "uniqueItems": true,
      "minItems": 1,
      "type": "array",
      "items": {
        "type": "string"
      },
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: array     \n\nUpdate requires: No interruption "
    },
    "SignalCatalogArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Status": {
      "$ref": "#/definitions/ManifestStatus",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType:      \n\nUpdate requires: No interruption "
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "insertionOrder": false,
      "uniqueItems": true,
      "maxItems": 50,
      "minItems": 0,
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: array     \n\nUpdate requires: No interruption "
    }
  },
  "required": [
    "SignalCatalogArn",
    "Name"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreationTime",
    "/properties/LastModificationTime"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "primaryIdentifier": [
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iotfleetwise:CreateModelManifest",
        "iotfleetwise:GetModelManifest",
        "iotfleetwise:UpdateModelManifest"
      ]
    },
    "read": {
      "permissions": [
        "iotfleetwise:GetModelManifest",
        "iotfleetwise:ListModelManifestNodes",
        "iotfleetwise:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iotfleetwise:UpdateModelManifest",
        "iotfleetwise:GetModelManifest",
        "iotfleetwise:ListModelManifestNodes",
        "iotfleetwise:TagResource",
        "iotfleetwise:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "iotfleetwise:DeleteModelManifest",
        "iotfleetwise:GetModelManifest"
      ]
    },
    "list": {
      "permissions": [
        "iotfleetwise:ListModelManifests"
      ]
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  }
}