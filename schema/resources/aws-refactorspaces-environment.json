{
  "typeName": "AWS::RefactorSpaces::Environment",
  "description": "Definition of AWS::RefactorSpaces::Environment Resource Type",
  "definitions": {
    "NetworkFabricType": {
      "type": "string",
      "enum": [
        "TRANSIT_GATEWAY"
      ]
    },
    "Tag": {
      "description": "A label for tagging Environment resource",
      "type": "object",
      "properties": {
        "Key": {
          "description": "A string used to identify this tag",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "pattern": "^(?!aws:).+"
        },
        "Value": {
          "description": "A string containing the value for the tag",
          "type": "string",
          "minLength": 0,
          "maxLength": 256
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    }
  },
  "properties": {
    "Description": {
      "type": "string",
      "maxLength": 256,
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 1  \n\nMaximum Length: 256  \n\nPattern: ^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$  \n\nUpdate requires: No interruption "
    },
    "EnvironmentIdentifier": {
      "type": "string",
      "maxLength": 14,
      "minLength": 14,
      "pattern": "^env-([0-9A-Za-z]{10}$)",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 14  \n\nMaximum Length: 14  \n\nPattern: ^env-([0-9A-Za-z]{10}$)  \n\nUpdate requires: No interruption "
    },
    "Name": {
      "type": "string",
      "maxLength": 63,
      "minLength": 3,
      "pattern": "^(?!env-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 3  \n\nMaximum Length: 63  \n\nPattern: ^(?!env-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$  \n\nUpdate requires: No interruption "
    },
    "NetworkFabricType": {
      "$ref": "#/definitions/NetworkFabricType",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType:      \n\nUpdate requires: No interruption "
    },
    "Arn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "pattern": "^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\-_/]+$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 20  \n\nMaximum Length: 2048  \n\nPattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\-_/]+$  \n\nUpdate requires: No interruption "
    },
    "TransitGatewayId": {
      "type": "string",
      "maxLength": 21,
      "minLength": 21,
      "pattern": "^tgw-[-a-f0-9]{17}$",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 21  \n\nMaximum Length: 21  \n\nPattern: ^tgw-[-a-f0-9]{17}$  \n\nUpdate requires: No interruption "
    },
    "Tags": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "description": "Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.",
      "markdownDescription": "Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n\n---\n\nRequired: No\n\nType: array     \n\nUpdate requires: No interruption "
    }
  },
  "readOnlyProperties": [
    "/properties/EnvironmentIdentifier",
    "/properties/Arn",
    "/properties/TransitGatewayId"
  ],
  "writeOnlyProperties": [
    "/properties/Description",
    "/properties/Name",
    "/properties/NetworkFabricType"
  ],
  "createOnlyProperties": [
    "/properties/Description",
    "/properties/Name",
    "/properties/NetworkFabricType"
  ],
  "primaryIdentifier": [
    "/properties/EnvironmentIdentifier"
  ],
  "additionalProperties": false,
  "handlers": {
    "create": {
      "permissions": [
        "refactor-spaces:CreateEnvironment",
        "refactor-spaces:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "refactor-spaces:GetEnvironment",
        "refactor-spaces:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "refactor-spaces:DeleteEnvironment",
        "refactor-spaces:UntagResource"
      ]
    },
    "list": {
      "permissions": [
        "refactor-spaces:ListEnvironments",
        "refactor-spaces:ListTagsForResource"
      ]
    }
  },
  "taggable": true
}