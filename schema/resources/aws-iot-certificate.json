{
  "typeName": "AWS::IoT::Certificate",
  "description": "Use the AWS::IoT::Certificate resource to declare an AWS IoT X.509 certificate.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {},
  "properties": {
    "CACertificatePem": {
      "type": "string",
      "minLength": 1,
      "maxLength": 65536,
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 1  \n\nMaximum Length: 65536   \n\nUpdate requires: No interruption "
    },
    "CertificatePem": {
      "type": "string",
      "minLength": 1,
      "maxLength": 65536,
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string  \nMinimum Length: 1  \n\nMaximum Length: 65536   \n\nUpdate requires: No interruption "
    },
    "CertificateSigningRequest": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "CertificateMode": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "SNI_ONLY"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Status": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "REVOKED",
        "PENDING_TRANSFER",
        "PENDING_ACTIVATION"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Id": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    },
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No\n\nType: string     \n\nUpdate requires: No interruption "
    }
  },
  "additionalProperties": false,
  "required": [
    "Status"
  ],
  "createOnlyProperties": [
    "/properties/CertificateSigningRequest",
    "/properties/CACertificatePem",
    "/properties/CertificatePem",
    "/properties/CertificateMode"
  ],
  "writeOnlyProperties": [
    "/properties/CertificateSigningRequest",
    "/properties/CACertificatePem"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/Id"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iot:CreateCertificateFromCsr",
        "iot:RegisterCertificate",
        "iot:RegisterCertificateWithoutCA"
      ]
    },
    "read": {
      "permissions": [
        "iot:DescribeCertificate"
      ]
    },
    "update": {
      "permissions": [
        "iot:UpdateCertificate"
      ]
    },
    "delete": {
      "permissions": [
        "iot:DeleteCertificate"
      ]
    },
    "list": {
      "permissions": [
        "iot:ListCertificates"
      ]
    }
  }
}