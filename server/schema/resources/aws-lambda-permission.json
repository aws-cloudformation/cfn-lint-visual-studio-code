{
  "typeName": "AWS::Lambda::Permission",
  "description": "Resource Type definition for AWS::Lambda::Permission",
  "additionalProperties": false,
  "properties": {
    "Action": {
      "description": "The action that the principal can use on the function.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The action that the principal can use on the function.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^(lambda:[*]|lambda:[a-zA-Z]+|[*])$  \nUpdate requires: Replacement"
    },
    "EventSourceToken": {
      "description": "For Alexa Smart Home functions, a token that must be supplied by the invoker.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "For Alexa Smart Home functions, a token that must be supplied by the invoker.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9._\\-]+$  \nUpdate requires: Replacement"
    },
    "FunctionName": {
      "description": "The name of the Lambda function, version, or alias.",
      "type": "string",
      "minLength": 1,
      "maxLength": 140,
      "markdownDescription": "The name of the Lambda function, version, or alias.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 140  \nPattern: ^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?$  \nUpdate requires: Replacement"
    },
    "FunctionUrlAuthType": {
      "description": "The type of authentication that your function URL uses. Set to AWS_IAM if you want to restrict access to authenticated users only. Set to NONE if you want to bypass IAM authentication to create a public endpoint.",
      "type": "string",
      "enum": [
        "AWS_IAM",
        "NONE"
      ],
      "markdownDescription": "The type of authentication that your function URL uses. Set to AWS_IAM if you want to restrict access to authenticated users only. Set to NONE if you want to bypass IAM authentication to create a public endpoint.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AWS_IAM | NONE  \nUpdate requires: Replacement"
    },
    "Principal": {
      "description": "The AWS service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The AWS service or account that invokes the function. If you specify a service, use SourceArn or SourceAccount to limit who can invoke the function through that service.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^.*$  \nUpdate requires: Replacement"
    },
    "PrincipalOrgID": {
      "description": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.",
      "type": "string",
      "minLength": 12,
      "maxLength": 34,
      "markdownDescription": "The identifier for your organization in AWS Organizations. Use this to grant permissions to all the AWS accounts under this organization.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 34  \nPattern: ^o-[a-z0-9]{10,32}$  \nUpdate requires: Replacement"
    },
    "SourceAccount": {
      "description": "For Amazon S3, the ID of the account that owns the resource. Use this together with SourceArn to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.",
      "type": "string",
      "minLength": 12,
      "maxLength": 12,
      "markdownDescription": "For Amazon S3, the ID of the account that owns the resource. Use this together with SourceArn to ensure that the resource is owned by the specified account. It is possible for an Amazon S3 bucket to be deleted by its owner and recreated by another account.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nPattern: ^\\d{12}$  \nUpdate requires: Replacement"
    },
    "SourceArn": {
      "description": "For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.",
      "type": "string",
      "minLength": 12,
      "maxLength": 1024,
      "markdownDescription": "For AWS services, the ARN of the AWS resource that invokes the function. For example, an Amazon S3 bucket or Amazon SNS topic.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 1024  \nPattern: ^arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)$  \nUpdate requires: Replacement"
    }
  },
  "required": [
    "FunctionName",
    "Action",
    "Principal"
  ],
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "createOnlyProperties": [
    "/properties/FunctionName",
    "/properties/FunctionUrlAuthType",
    "/properties/SourceAccount",
    "/properties/SourceArn",
    "/properties/Principal",
    "/properties/PrincipalOrgID",
    "/properties/Action",
    "/properties/EventSourceToken"
  ],
  "primaryIdentifier": [
    "/properties/FunctionName",
    "/properties/Id"
  ],
  "propertyTransform": {
    "/properties/Principal": "$join([\"^arn:aws[a-zA-Z-]*:iam::\",Principal,\":[a-zA-Z-]*\"]) $OR Principal"
  },
  "readOnlyProperties": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lambda:AddPermission"
      ]
    },
    "read": {
      "permissions": [
        "lambda:GetPolicy"
      ]
    },
    "delete": {
      "permissions": [
        "lambda:RemovePermission"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "FunctionName": {
            "description": "The name of the Lambda function, version, or alias.",
            "type": "string",
            "minLength": 1,
            "maxLength": 140,
            "markdownDescription": "The name of the Lambda function, version, or alias.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 140  \nPattern: ^(arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?$  \nUpdate requires: No interruption"
          }
        },
        "required": [
          "FunctionName"
        ]
      },
      "permissions": [
        "lambda:GetPolicy"
      ]
    }
  },
  "attributes": {
    "Id": {
      "description": "A statement identifier that differentiates the statement from others in the same policy.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "A statement identifier that differentiates the statement from others in the same policy.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^.*$  \nUpdate requires: No interruption"
    }
  }
}