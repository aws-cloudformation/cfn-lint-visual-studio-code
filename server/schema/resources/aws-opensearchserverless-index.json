{
  "typeName": "AWS::OpenSearchServerless::Index",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-opensearchserverless",
  "description": "An OpenSearch Serverless index resource",
  "tagging": {
    "taggable": false
  },
  "definitions": {
    "IndexSettings": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Index": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "RefreshInterval": {
              "type": "string",
              "description": "How often to perform refresh operation (e.g. '1s', '5s')",
              "markdownDescription": "How often to perform refresh operation (e.g. '1s', '5s')\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
            },
            "Knn": {
              "type": "boolean",
              "description": "Enable/disable k-nearest neighbor search capability",
              "markdownDescription": "Enable/disable k-nearest neighbor search capability\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
            },
            "KnnAlgoParamEfSearch": {
              "type": "integer",
              "description": "Size of the dynamic list for the nearest neighbors",
              "markdownDescription": "Size of the dynamic list for the nearest neighbors\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
            }
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PropertyMapping": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Dimension": {
          "type": "integer",
          "description": "Dimension size for vector fields, defines the number of dimensions in the vector",
          "markdownDescription": "Dimension size for vector fields, defines the number of dimensions in the vector\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "Index": {
          "type": "boolean",
          "description": "Whether a field should be indexed",
          "markdownDescription": "Whether a field should be indexed\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Method": {
          "type": "object",
          "description": "Configuration for k-NN search method",
          "additionalProperties": false,
          "properties": {
            "Engine": {
              "type": "string",
              "enum": [
                "nmslib",
                "faiss",
                "lucene"
              ],
              "description": "The k-NN search engine to use",
              "markdownDescription": "The k-NN search engine to use\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: nmslib | faiss | lucene  \nUpdate requires: No interruption\n"
            },
            "Name": {
              "type": "string",
              "description": "The algorithm name for k-NN search",
              "enum": [
                "hnsw",
                "ivf"
              ],
              "markdownDescription": "The algorithm name for k-NN search\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: hnsw | ivf  \nUpdate requires: No interruption\n"
            },
            "SpaceType": {
              "type": "string",
              "description": "The distance function used for k-NN search",
              "enum": [
                "l2",
                "l1",
                "linf",
                "cosinesimil",
                "innerproduct",
                "hamming"
              ],
              "markdownDescription": "The distance function used for k-NN search\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: l2 | l1 | linf | cosinesimil | innerproduct | hamming  \nUpdate requires: No interruption\n"
            },
            "Parameters": {
              "type": "object",
              "description": "Additional parameters for the k-NN algorithm",
              "additionalProperties": false,
              "properties": {
                "EfConstruction": {
                  "type": "integer",
                  "minimum": 1,
                  "description": "The size of the dynamic list used during k-NN graph creation",
                  "markdownDescription": "The size of the dynamic list used during k-NN graph creation\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
                },
                "M": {
                  "type": "integer",
                  "description": "Number of neighbors to consider during k-NN search",
                  "minimum": 2,
                  "maximum": 100,
                  "markdownDescription": "Number of neighbors to consider during k-NN search\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
                }
              },
              "markdownDescription": "Additional parameters for the k-NN algorithm\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
            }
          },
          "required": [
            "Name",
            "Engine"
          ],
          "markdownDescription": "Configuration for k-NN search method\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        },
        "Properties": {
          "type": "object",
          "description": "Nested fields within an object or nested field type",
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z0-9_.-]{1,64}$": {
              "$ref": "#/definitions/PropertyMapping",
              "description": "Nested field name and its mapping configuration",
              "markdownDescription": "Nested field name and its mapping configuration\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
            }
          },
          "markdownDescription": "Nested fields within an object or nested field type\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        },
        "Type": {
          "type": "string",
          "description": "The field data type. Must be a valid OpenSearch field type.",
          "enum": [
            "text",
            "knn_vector"
          ],
          "markdownDescription": "The field data type. Must be a valid OpenSearch field type.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: text | knn_vector  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "Default value for the field when not specified in a document",
          "markdownDescription": "Default value for the field when not specified in a document\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Type"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "CollectionEndpoint": {
      "description": "The endpoint for the collection.",
      "type": "string",
      "markdownDescription": "The endpoint for the collection.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement\n"
    },
    "IndexName": {
      "type": "string",
      "description": "The name of the OpenSearch Serverless index.",
      "markdownDescription": "The name of the OpenSearch Serverless index.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^(?![_-])[a-z][a-z0-9_-]*$  \nUpdate requires: Replacement\n"
    },
    "Settings": {
      "$ref": "#/definitions/IndexSettings",
      "description": "Index settings",
      "markdownDescription": "Index settings\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "Mappings": {
      "type": "object",
      "description": "Index Mappings",
      "additionalProperties": false,
      "properties": {
        "Properties": {
          "type": "object",
          "description": "Defines the fields within the mapping, including their types and configurations",
          "additionalProperties": false,
          "patternProperties": {
            "^[A-Za-z0-9_.-]{1,64}$": {
              "$ref": "#/definitions/PropertyMapping",
              "description": "Field name and its mapping configuration",
              "markdownDescription": "Field name and its mapping configuration\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
            }
          },
          "markdownDescription": "Defines the fields within the mapping, including their types and configurations\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Index Mappings\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Uuid": {
      "description": "The unique identifier for the index.",
      "type": "string",
      "markdownDescription": "The unique identifier for the index.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  },
  "required": [
    "CollectionEndpoint",
    "IndexName"
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/IndexName",
    "/properties/CollectionEndpoint"
  ],
  "readOnlyProperties": [
    "/properties/Uuid"
  ],
  "createOnlyProperties": [
    "/properties/IndexName",
    "/properties/CollectionEndpoint"
  ],
  "writeOnlyProperties": [
    "/properties/Settings/Index/RefreshInterval",
    "/properties/Settings/Index/KnnAlgoParamEfSearch"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "aoss:APIAccessAll"
      ]
    },
    "read": {
      "permissions": [
        "aoss:APIAccessAll"
      ]
    },
    "update": {
      "permissions": [
        "aoss:APIAccessAll"
      ]
    },
    "delete": {
      "permissions": [
        "aoss:APIAccessAll"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "CollectionEndpoint": {
            "$ref": "resource-schema.json#/properties/CollectionEndpoint"
          }
        },
        "required": [
          "CollectionEndpoint"
        ]
      },
      "permissions": [
        "aoss:APIAccessAll"
      ]
    }
  },
  "attributes": {
    "Uuid": {
      "description": "The unique identifier for the index.",
      "type": "string",
      "markdownDescription": "The unique identifier for the index.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}