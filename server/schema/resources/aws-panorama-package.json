{
  "typeName": "AWS::Panorama::Package",
  "description": "Schema for Package CloudFormation Resource",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "NodePackageName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9\\-\\_]+$  \nUpdate requires: No interruption"
    },
    "NodePackageId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: ^[a-zA-Z0-9\\-\\_\\/]+$  \nUpdate requires: No interruption"
    },
    "NodePackageArn": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "Timestamp": {
      "type": "integer",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "StorageLocation": {
      "type": "object",
      "properties": {
        "Bucket": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "RepoPrefixLocation": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "GeneratedPrefixLocation": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "BinaryPrefixLocation": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "ManifestPrefixLocation": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^.+$  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: ^.+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TagList": {
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "PackageName": {
      "$ref": "#/definitions/NodePackageName"
    },
    "StorageLocation": {
      "$ref": "#/definitions/StorageLocation"
    },
    "Tags": {
      "$ref": "#/definitions/TagList"
    }
  },
  "additionalProperties": false,
  "taggable": true,
  "required": [
    "PackageName"
  ],
  "readOnlyProperties": [
    "/properties/PackageId",
    "/properties/Arn",
    "/properties/CreatedTime",
    "/properties/StorageLocation/Bucket",
    "/properties/StorageLocation/RepoPrefixLocation",
    "/properties/StorageLocation/GeneratedPrefixLocation",
    "/properties/StorageLocation/BinaryPrefixLocation",
    "/properties/StorageLocation/ManifestPrefixLocation"
  ],
  "createOnlyProperties": [
    "/properties/PackageName"
  ],
  "primaryIdentifier": [
    "/properties/PackageId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "panorama:CreatePackage",
        "panorama:ListTagsForResource",
        "panorama:TagResource",
        "panorama:DescribePackage",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:GetObject",
        "s3:GetObjectVersion"
      ]
    },
    "read": {
      "permissions": [
        "panorama:DescribePackage",
        "panorama:ListTagsForResource",
        "s3:ListBucket",
        "s3:GetObject",
        "s3:GetObjectVersion"
      ]
    },
    "update": {
      "permissions": [
        "panorama:DescribePackage",
        "panorama:ListTagsForResource",
        "panorama:TagResource",
        "panorama:UntagResource",
        "s3:PutObject",
        "s3:ListBucket",
        "s3:GetObject",
        "s3:GetObjectVersion"
      ]
    },
    "list": {
      "permissions": [
        "panorama:ListPackages",
        "s3:ListBucket",
        "s3:GetObject",
        "s3:GetObjectVersion"
      ]
    },
    "delete": {
      "permissions": [
        "panorama:DeletePackage",
        "panorama:DescribePackage",
        "s3:DeleteObject",
        "s3:DeleteObjectVersion",
        "s3:DeleteObjectVersionTagging",
        "s3:ListObjects",
        "s3:ListObjectsV2",
        "s3:ListBucket",
        "s3:GetObject",
        "s3:GetObjectVersion"
      ]
    }
  },
  "attributes": {
    "PackageId": {
      "$ref": "#/definitions/NodePackageId"
    },
    "Arn": {
      "$ref": "#/definitions/NodePackageArn"
    },
    "CreatedTime": {
      "$ref": "#/definitions/Timestamp"
    }
  }
}