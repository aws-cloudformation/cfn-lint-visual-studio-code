{
  "typeName": "AWS::RefactorSpaces::Service",
  "description": "Definition of AWS::RefactorSpaces::Service Resource Type",
  "definitions": {
    "LambdaEndpointInput": {
      "type": "object",
      "properties": {
        "Arn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:function:[a-zA-Z0-9-_]+(:(\\$LATEST|[a-zA-Z0-9-_]+))?$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Arn"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServiceEndpointType": {
      "type": "string",
      "enum": [
        "LAMBDA",
        "URL"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: LAMBDA | URL  \nUpdate requires: No interruption"
    },
    "UrlEndpointInput": {
      "type": "object",
      "properties": {
        "HealthUrl": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^https?://[-a-zA-Z0-9+\\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\\x38@#/%=~_|]$  \nUpdate requires: No interruption"
        },
        "Url": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^https?://[-a-zA-Z0-9+\\x38@#/%?=~_|!:,.;]*[-a-zA-Z0-9+\\x38@#/%=~_|]$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Url"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A label for tagging Environment resource",
      "type": "object",
      "properties": {
        "Key": {
          "description": "A string used to identify this tag",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "A string used to identify this tag\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^(?!aws:).+  \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "A string containing the value for the tag",
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "A string containing the value for the tag\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A label for tagging Environment resource\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "ApplicationIdentifier": {
      "type": "string",
      "maxLength": 14,
      "minLength": 14,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 14  \nMaximum Length: 14  \nPattern: ^app-([0-9A-Za-z]{10}$)  \nUpdate requires: Replacement"
    },
    "Description": {
      "type": "string",
      "maxLength": 256,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9-_\\s\\.\\!\\*\\#\\@\\']+$  \nUpdate requires: Replacement"
    },
    "EndpointType": {
      "$ref": "#/definitions/ServiceEndpointType"
    },
    "EnvironmentIdentifier": {
      "type": "string",
      "maxLength": 14,
      "minLength": 14,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 14  \nMaximum Length: 14  \nPattern: ^env-([0-9A-Za-z]{10}$)  \nUpdate requires: Replacement"
    },
    "LambdaEndpoint": {
      "$ref": "#/definitions/LambdaEndpointInput"
    },
    "Name": {
      "type": "string",
      "maxLength": 63,
      "minLength": 3,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: ^(?!svc-)[a-zA-Z0-9]+[a-zA-Z0-9-_ ]+$  \nUpdate requires: Replacement"
    },
    "UrlEndpoint": {
      "$ref": "#/definitions/UrlEndpointInput"
    },
    "VpcId": {
      "type": "string",
      "maxLength": 21,
      "minLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 21  \nPattern: ^vpc-[-a-f0-9]{8}([-a-f0-9]{9})?$  \nUpdate requires: Replacement"
    },
    "Tags": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "description": "Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.",
      "markdownDescription": "Metadata that you can assign to help organize the frameworks that you create. Each tag is a key-value pair.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "EnvironmentIdentifier",
    "ApplicationIdentifier"
  ],
  "readOnlyProperties": [
    "/properties/ServiceIdentifier",
    "/properties/Arn"
  ],
  "writeOnlyProperties": [
    "/properties/Description",
    "/properties/EndpointType",
    "/properties/LambdaEndpoint",
    "/properties/Name",
    "/properties/UrlEndpoint",
    "/properties/VpcId"
  ],
  "createOnlyProperties": [
    "/properties/Description",
    "/properties/EndpointType",
    "/properties/EnvironmentIdentifier",
    "/properties/ApplicationIdentifier",
    "/properties/LambdaEndpoint",
    "/properties/Name",
    "/properties/UrlEndpoint",
    "/properties/VpcId"
  ],
  "primaryIdentifier": [
    "/properties/EnvironmentIdentifier",
    "/properties/ApplicationIdentifier",
    "/properties/ServiceIdentifier"
  ],
  "additionalProperties": false,
  "handlers": {
    "create": {
      "permissions": [
        "refactor-spaces:CreateService",
        "refactor-spaces:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "refactor-spacess:GetService",
        "refactor-spaces:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "refactor-spaces:DeleteService",
        "refactor-spaces:UntagResource"
      ]
    },
    "list": {
      "permissions": [
        "refactor-spaces:ListServices",
        "refactor-spaces:ListTagsForResource"
      ]
    }
  },
  "taggable": true,
  "attributes": {
    "Arn": {
      "type": "string",
      "minLength": 20,
      "maxLength": 2048,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:(aws[a-zA-Z-]*)?:refactor-spaces:[a-zA-Z0-9\\-]+:\\w{12}:[a-zA-Z_0-9+=,.@\\-_/]+$  \nUpdate requires: No interruption"
    },
    "ServiceIdentifier": {
      "type": "string",
      "maxLength": 14,
      "minLength": 14,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 14  \nMaximum Length: 14  \nPattern: ^svc-([0-9A-Za-z]{10}$)  \nUpdate requires: No interruption"
    }
  }
}