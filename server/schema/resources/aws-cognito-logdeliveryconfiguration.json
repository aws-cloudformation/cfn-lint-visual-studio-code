{
  "typeName": "AWS::Cognito::LogDeliveryConfiguration",
  "description": "Resource Type definition for AWS::Cognito::LogDeliveryConfiguration",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "CloudWatchLogsConfiguration": {
      "type": "object",
      "properties": {
        "LogGroupArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "S3Configuration": {
      "type": "object",
      "properties": {
        "BucketArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "FirehoseConfiguration": {
      "type": "object",
      "properties": {
        "StreamArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LogConfiguration": {
      "type": "object",
      "properties": {
        "LogLevel": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "EventSource": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "CloudWatchLogsConfiguration": {
          "$ref": "#/definitions/CloudWatchLogsConfiguration"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3Configuration"
        },
        "FirehoseConfiguration": {
          "$ref": "#/definitions/FirehoseConfiguration"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LogConfigurations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LogConfiguration"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Id": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "UserPoolId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement\n"
    },
    "LogConfigurations": {
      "$ref": "#/definitions/LogConfigurations"
    }
  },
  "additionalProperties": false,
  "required": [
    "UserPoolId"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "readOnlyProperties": [
    "/properties/Id"
  ],
  "createOnlyProperties": [
    "/properties/UserPoolId"
  ],
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "handlers": {
    "create": {
      "permissions": [
        "cognito-idp:GetLogDeliveryConfiguration",
        "cognito-idp:SetLogDeliveryConfiguration",
        "logs:CreateLogDelivery",
        "logs:GetLogDelivery",
        "logs:UpdateLogDelivery",
        "logs:DeleteLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutResourcePolicy",
        "logs:DescribeResourcePolicies",
        "logs:DescribeLogGroups",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:GetBucketAcl",
        "firehose:TagDeliveryStream",
        "iam:CreateServiceLinkedRole"
      ],
      "timeoutInMinutes": 2
    },
    "read": {
      "permissions": [
        "cognito-idp:GetLogDeliveryConfiguration"
      ]
    },
    "update": {
      "permissions": [
        "cognito-idp:GetLogDeliveryConfiguration",
        "cognito-idp:SetLogDeliveryConfiguration",
        "logs:CreateLogDelivery",
        "logs:GetLogDelivery",
        "logs:UpdateLogDelivery",
        "logs:DeleteLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutResourcePolicy",
        "logs:DescribeResourcePolicies",
        "logs:DescribeLogGroups",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:GetBucketAcl",
        "firehose:TagDeliveryStream",
        "iam:CreateServiceLinkedRole"
      ],
      "timeoutInMinutes": 2
    },
    "delete": {
      "permissions": [
        "cognito-idp:GetLogDeliveryConfiguration",
        "cognito-idp:SetLogDeliveryConfiguration",
        "logs:CreateLogDelivery",
        "logs:GetLogDelivery",
        "logs:UpdateLogDelivery",
        "logs:DeleteLogDelivery",
        "logs:ListLogDeliveries",
        "logs:PutResourcePolicy",
        "logs:DescribeResourcePolicies",
        "logs:DescribeLogGroups",
        "s3:GetBucketPolicy",
        "s3:PutBucketPolicy",
        "s3:ListBucket",
        "s3:PutObject",
        "s3:GetBucketAcl",
        "firehose:TagDeliveryStream",
        "iam:CreateServiceLinkedRole"
      ],
      "timeoutInMinutes": 2
    }
  },
  "attributes": {
    "Id": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}