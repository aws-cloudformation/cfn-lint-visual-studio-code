{
  "typeName": "AWS::ApiGatewayV2::Route",
  "description": "The ``AWS::ApiGatewayV2::Route`` resource creates a route for an API.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-apigatewayv2",
  "additionalProperties": false,
  "properties": {
    "RouteResponseSelectionExpression": {
      "type": "string",
      "description": "The route response selection expression for the route. Supported only for WebSocket APIs.",
      "markdownDescription": "The route response selection expression for the route. Supported only for WebSocket APIs.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "RequestModels": {
      "type": "object",
      "description": "The request models for the route. Supported only for WebSocket APIs.",
      "markdownDescription": "The request models for the route. Supported only for WebSocket APIs.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OperationName": {
      "type": "string",
      "description": "The operation name for the route.",
      "markdownDescription": "The operation name for the route.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "AuthorizationScopes": {
      "type": "array",
      "uniqueItems": false,
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "description": "The authorization scopes supported by this route.",
      "markdownDescription": "The authorization scopes supported by this route.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ApiKeyRequired": {
      "type": "boolean",
      "description": "Specifies whether an API key is required for the route. Supported only for WebSocket APIs.",
      "markdownDescription": "Specifies whether an API key is required for the route. Supported only for WebSocket APIs.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "RouteKey": {
      "type": "string",
      "description": "The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``.",
      "markdownDescription": "The route key for the route. For HTTP APIs, the route key can be either ``$default``, or a combination of an HTTP method and resource path, for example, ``GET /pets``.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "AuthorizationType": {
      "type": "string",
      "description": "The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer.",
      "markdownDescription": "The authorization type for the route. For WebSocket APIs, valid values are ``NONE`` for open access, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer. For HTTP APIs, valid values are ``NONE`` for open access, ``JWT`` for using JSON Web Tokens, ``AWS_IAM`` for using AWS IAM permissions, and ``CUSTOM`` for using a Lambda authorizer.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ModelSelectionExpression": {
      "type": "string",
      "description": "The model selection expression for the route. Supported only for WebSocket APIs.",
      "markdownDescription": "The model selection expression for the route. Supported only for WebSocket APIs.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ApiId": {
      "type": "string",
      "description": "The API identifier.",
      "markdownDescription": "The API identifier.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "RequestParameters": {
      "type": "object",
      "items": {
        "$ref": "#/definitions/ParameterConstraints"
      },
      "description": "The request parameters for the route. Supported only for WebSocket APIs.",
      "markdownDescription": "The request parameters for the route. Supported only for WebSocket APIs.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Target": {
      "type": "string",
      "description": "The target for the route.",
      "markdownDescription": "The target for the route.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "AuthorizerId": {
      "type": "string",
      "description": "The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.",
      "markdownDescription": "The identifier of the ``Authorizer`` resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  },
  "definitions": {
    "ParameterConstraints": {
      "type": "object",
      "properties": {
        "Required": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Required"
      ],
      "additionalProperties": false,
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "RouteKey",
    "ApiId"
  ],
  "createOnlyProperties": [
    "/properties/ApiId"
  ],
  "primaryIdentifier": [
    "/properties/ApiId",
    "/properties/RouteId"
  ],
  "readOnlyProperties": [
    "/properties/RouteId"
  ],
  "writeOnlyProperties": [
    "/properties/AuthorizerId",
    "/properties/RequestParameters"
  ],
  "tagging": {
    "taggable": false
  },
  "handlers": {
    "create": {
      "permissions": [
        "apigateway:POST"
      ]
    },
    "update": {
      "permissions": [
        "apigateway:PATCH",
        "apigateway:GET",
        "apigateway:PUT"
      ]
    },
    "read": {
      "permissions": [
        "apigateway:GET"
      ]
    },
    "delete": {
      "permissions": [
        "apigateway:GET",
        "apigateway:DELETE"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "ApiId": {
            "$ref": "resource-schema.json#/properties/ApiId"
          }
        },
        "required": [
          "ApiId"
        ]
      },
      "permissions": [
        "apigateway:GET"
      ]
    }
  },
  "attributes": {
    "RouteId": {
      "type": "string",
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}