{
  "typeName": "AWS::Cassandra::Table",
  "description": "Resource schema for AWS::Cassandra::Table",
  "definitions": {
    "Column": {
      "type": "object",
      "properties": {
        "ColumnName": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$  \nUpdate requires: No interruption\n"
        },
        "ColumnType": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "ColumnName",
        "ColumnType"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ClusteringKeyColumn": {
      "type": "object",
      "properties": {
        "Column": {
          "$ref": "#/definitions/Column"
        },
        "OrderBy": {
          "type": "string",
          "enum": [
            "ASC",
            "DESC"
          ],
          "default": "ASC",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ASC | DESC  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "Column"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ProvisionedThroughput": {
      "description": "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits",
      "type": "object",
      "properties": {
        "ReadCapacityUnits": {
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "WriteCapacityUnits": {
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "ReadCapacityUnits",
        "WriteCapacityUnits"
      ],
      "markdownDescription": "Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Mode": {
      "description": "Capacity mode for the specified table",
      "type": "string",
      "enum": [
        "PROVISIONED",
        "ON_DEMAND"
      ],
      "default": "ON_DEMAND",
      "markdownDescription": "Capacity mode for the specified table\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: PROVISIONED | ON_DEMAND  \nUpdate requires: No interruption\n"
    },
    "BillingMode": {
      "type": "object",
      "properties": {
        "Mode": {
          "$ref": "#/definitions/Mode"
        },
        "ProvisionedThroughput": {
          "$ref": "#/definitions/ProvisionedThroughput"
        }
      },
      "required": [
        "Mode"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "description": "A key-value pair to apply to the resource",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "A key-value pair to apply to the resource\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EncryptionSpecification": {
      "description": "Represents the settings used to enable server-side encryption",
      "type": "object",
      "properties": {
        "EncryptionType": {
          "$ref": "#/definitions/EncryptionType"
        },
        "KmsKeyIdentifier": {
          "$ref": "#/definitions/KmsKeyIdentifier"
        }
      },
      "required": [
        "EncryptionType"
      ],
      "additionalProperties": false,
      "markdownDescription": "Represents the settings used to enable server-side encryption\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EncryptionType": {
      "description": "Server-side encryption type",
      "type": "string",
      "enum": [
        "AWS_OWNED_KMS_KEY",
        "CUSTOMER_MANAGED_KMS_KEY"
      ],
      "default": "AWS_OWNED_KMS_KEY",
      "markdownDescription": "Server-side encryption type\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AWS_OWNED_KMS_KEY | CUSTOMER_MANAGED_KMS_KEY  \nUpdate requires: No interruption\n"
    },
    "KmsKeyIdentifier": {
      "description": "The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. ",
      "type": "string",
      "markdownDescription": "The AWS KMS customer master key (CMK) that should be used for the AWS KMS encryption. To specify a CMK, use its key ID, Amazon Resource Name (ARN), alias name, or alias ARN. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "AutoScalingSpecification": {
      "description": "Represents the read and write settings used for AutoScaling.",
      "type": "object",
      "properties": {
        "WriteCapacityAutoScaling": {
          "$ref": "#/definitions/AutoScalingSetting"
        },
        "ReadCapacityAutoScaling": {
          "$ref": "#/definitions/AutoScalingSetting"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Represents the read and write settings used for AutoScaling.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AutoScalingSetting": {
      "description": "Represents configuration for auto scaling.",
      "type": "object",
      "properties": {
        "AutoScalingDisabled": {
          "type": "boolean",
          "default": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "MinimumUnits": {
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MaximumUnits": {
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "ScalingPolicy": {
          "$ref": "#/definitions/ScalingPolicy"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Represents configuration for auto scaling.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ScalingPolicy": {
      "description": "Represents scaling policy.",
      "type": "object",
      "properties": {
        "TargetTrackingScalingPolicyConfiguration": {
          "$ref": "#/definitions/TargetTrackingScalingPolicyConfiguration"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Represents scaling policy.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TargetTrackingScalingPolicyConfiguration": {
      "description": "Represents configuration for target tracking scaling policy.",
      "type": "object",
      "properties": {
        "DisableScaleIn": {
          "type": "boolean",
          "default": "false",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "ScaleInCooldown": {
          "type": "integer",
          "default": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "ScaleOutCooldown": {
          "type": "integer",
          "default": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "TargetValue": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "TargetValue"
      ],
      "additionalProperties": false,
      "markdownDescription": "Represents configuration for target tracking scaling policy.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ReplicaSpecification": {
      "description": "Represents replica specifications.",
      "type": "object",
      "properties": {
        "Region": {
          "type": "string",
          "minLength": 2,
          "maxLength": 25,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 2  \nMaximum Length: 25  \nUpdate requires: No interruption\n"
        },
        "ReadCapacityUnits": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "ReadCapacityAutoScaling": {
          "$ref": "#/definitions/AutoScalingSetting"
        }
      },
      "required": [
        "Region"
      ],
      "additionalProperties": false,
      "markdownDescription": "Represents replica specifications.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "KeyspaceName": {
      "description": "Name for Cassandra keyspace",
      "type": "string",
      "markdownDescription": "Name for Cassandra keyspace\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$  \nUpdate requires: Replacement\n"
    },
    "TableName": {
      "description": "Name for Cassandra table",
      "type": "string",
      "markdownDescription": "Name for Cassandra table\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$  \nUpdate requires: Replacement\n"
    },
    "RegularColumns": {
      "description": "Non-key columns of the table",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Column"
      },
      "markdownDescription": "Non-key columns of the table\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "PartitionKeyColumns": {
      "description": "Partition key columns of the table",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/Column"
      },
      "markdownDescription": "Partition key columns of the table\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: Replacement\n"
    },
    "ClusteringKeyColumns": {
      "description": "Clustering key columns of the table",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/ClusteringKeyColumn"
      },
      "markdownDescription": "Clustering key columns of the table\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: Replacement\n"
    },
    "BillingMode": {
      "$ref": "#/definitions/BillingMode"
    },
    "PointInTimeRecoveryEnabled": {
      "description": "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table",
      "type": "boolean",
      "markdownDescription": "Indicates whether point in time recovery is enabled (true) or disabled (false) on the table\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "ClientSideTimestampsEnabled": {
      "description": "Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.",
      "type": "boolean",
      "markdownDescription": "Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: Replacement\n"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 0,
      "maxItems": 50,
      "markdownDescription": "An array of key-value pairs to apply to this resource\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "DefaultTimeToLive": {
      "description": "Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.",
      "type": "integer",
      "minimum": 0,
      "markdownDescription": "Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "EncryptionSpecification": {
      "$ref": "#/definitions/EncryptionSpecification"
    },
    "AutoScalingSpecifications": {
      "$ref": "#/definitions/AutoScalingSpecification"
    },
    "ReplicaSpecifications": {
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/ReplicaSpecification"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "additionalProperties": false,
  "required": [
    "KeyspaceName",
    "PartitionKeyColumns"
  ],
  "createOnlyProperties": [
    "/properties/KeyspaceName",
    "/properties/TableName",
    "/properties/PartitionKeyColumns",
    "/properties/ClusteringKeyColumns",
    "/properties/ClientSideTimestampsEnabled"
  ],
  "writeOnlyProperties": [
    "/properties/AutoScalingSpecifications",
    "/properties/ReplicaSpecifications"
  ],
  "primaryIdentifier": [
    "/properties/KeyspaceName",
    "/properties/TableName"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "cassandra:TagResource",
      "cassandra:TagMultiRegionResource",
      "cassandra:UntagResource",
      "cassandra:UntagMultiRegionResource"
    ]
  },
  "handlers": {
    "create": {
      "permissions": [
        "cassandra:Create",
        "cassandra:CreateMultiRegionResource",
        "cassandra:Select",
        "cassandra:SelectMultiRegionResource",
        "cassandra:TagResource",
        "cassandra:TagMultiRegionResource",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:Decrypt",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:RegisterScalableTarget",
        "application-autoscaling:PutScalingPolicy",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:PutMetricAlarm"
      ]
    },
    "read": {
      "permissions": [
        "cassandra:Select",
        "cassandra:SelectMultiRegionResource",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:RegisterScalableTarget",
        "application-autoscaling:PutScalingPolicy",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:PutMetricAlarm"
      ]
    },
    "update": {
      "permissions": [
        "cassandra:Alter",
        "cassandra:AlterMultiRegionResource",
        "cassandra:Select",
        "cassandra:SelectMultiRegionResource",
        "cassandra:TagResource",
        "cassandra:TagMultiRegionResource",
        "cassandra:UntagResource",
        "cassandra:UntagMultiRegionResource",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "kms:Encrypt",
        "kms:Decrypt",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:RegisterScalableTarget",
        "application-autoscaling:PutScalingPolicy",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:PutMetricAlarm"
      ]
    },
    "delete": {
      "permissions": [
        "cassandra:Drop",
        "cassandra:DropMultiRegionResource",
        "cassandra:Select",
        "cassandra:SelectMultiRegionResource",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:RegisterScalableTarget",
        "application-autoscaling:PutScalingPolicy",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:PutMetricAlarm"
      ]
    },
    "list": {
      "permissions": [
        "cassandra:Select",
        "cassandra:SelectMultiRegionResource",
        "application-autoscaling:DescribeScalableTargets",
        "application-autoscaling:DescribeScalingPolicies",
        "application-autoscaling:DeregisterScalableTarget",
        "application-autoscaling:RegisterScalableTarget",
        "application-autoscaling:PutScalingPolicy",
        "cloudwatch:DeleteAlarms",
        "cloudwatch:DescribeAlarms",
        "cloudwatch:GetMetricData",
        "cloudwatch:PutMetricAlarm"
      ]
    }
  },
  "propertyTransform": {
    "/properties/ClusteringKeyColumns/*/Column/ColumnType": "$lowercase(ColumnType)",
    "/properties/PartitionKeyColumns/*/ColumnType": "$lowercase(ColumnType)",
    "/properties/RegularColumns/*/ColumnType": "$lowercase(ColumnType)"
  },
  "attributes": {}
}