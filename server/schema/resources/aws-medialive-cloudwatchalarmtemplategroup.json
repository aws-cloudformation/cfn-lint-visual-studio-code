{
  "typeName": "AWS::MediaLive::CloudWatchAlarmTemplateGroup",
  "description": "Definition of AWS::MediaLive::CloudWatchAlarmTemplateGroup Resource Type",
  "definitions": {
    "TagMap": {
      "type": "object",
      "description": "Represents the tags associated with a resource.",
      "patternProperties": {
        ".+": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Represents the tags associated with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Description": {
      "type": "string",
      "maxLength": 1024,
      "minLength": 0,
      "description": "A resource's optional description.",
      "markdownDescription": "A resource's optional description.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
    },
    "Name": {
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "description": "A resource's name. Names must be unique within the scope of a resource type in a specific region.",
      "markdownDescription": "A resource's name. Names must be unique within the scope of a resource type in a specific region.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: ^[^\\s]+$  \nUpdate requires: Replacement"
    },
    "Tags": {
      "$ref": "#/definitions/TagMap"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "medialive:CreateTags",
      "medialive:DeleteTags"
    ]
  },
  "required": [
    "Name"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreatedAt",
    "/properties/Id",
    "/properties/Identifier",
    "/properties/ModifiedAt"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/Identifier"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "medialive:CreateCloudWatchAlarmTemplateGroup",
        "medialive:GetCloudWatchAlarmTemplateGroup",
        "medialive:CreateTags"
      ]
    },
    "read": {
      "permissions": [
        "medialive:GetCloudWatchAlarmTemplateGroup"
      ]
    },
    "update": {
      "permissions": [
        "medialive:UpdateCloudWatchAlarmTemplateGroup",
        "medialive:GetCloudWatchAlarmTemplateGroup",
        "medialive:CreateTags",
        "medialive:DeleteTags"
      ]
    },
    "delete": {
      "permissions": [
        "medialive:DeleteCloudWatchAlarmTemplateGroup"
      ]
    },
    "list": {
      "permissions": [
        "medialive:ListCloudWatchAlarmTemplateGroups"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "Arn": {
      "type": "string",
      "description": "A cloudwatch alarm template group's ARN (Amazon Resource Name)",
      "markdownDescription": "A cloudwatch alarm template group's ARN (Amazon Resource Name)\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:.+:medialive:.+:cloudwatch-alarm-template-group:.+$  \nUpdate requires: No interruption"
    },
    "CreatedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Id": {
      "type": "string",
      "maxLength": 11,
      "minLength": 7,
      "description": "A cloudwatch alarm template group's id. AWS provided template groups have ids that start with `aws-`",
      "markdownDescription": "A cloudwatch alarm template group's id. AWS provided template groups have ids that start with `aws-`\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 7  \nMaximum Length: 11  \nPattern: ^(aws-)?[0-9]{7}$  \nUpdate requires: No interruption"
    },
    "Identifier": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ModifiedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}