{
  "typeName": "AWS::Glue::Schema",
  "description": "This resource represents a schema of Glue Schema Registry.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-glue.git",
  "definitions": {
    "Registry": {
      "type": "object",
      "description": "Identifier for the registry which the schema is part of.",
      "properties": {
        "Name": {
          "description": "Name of the registry in which the schema will be created.",
          "type": "string",
          "maxLength": 255,
          "minLength": 1,
          "markdownDescription": "Name of the registry in which the schema will be created.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "Arn": {
          "description": "Amazon Resource Name for the Registry.",
          "type": "string",
          "markdownDescription": "Amazon Resource Name for the Registry.\n\n---\n\nRequired: No  \nType: String  \nPattern: arn:aws(-(cn|us-gov|iso(-[bef])?))?:glue:.*  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Identifier for the registry which the schema is part of.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SchemaVersion": {
      "type": "object",
      "description": "Specify checkpoint version for update. This is only required to update the Compatibility.",
      "properties": {
        "IsLatest": {
          "description": "Indicates if the latest version needs to be updated.",
          "type": "boolean",
          "markdownDescription": "Indicates if the latest version needs to be updated.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "VersionNumber": {
          "description": "Indicates the version number in the schema to update.",
          "type": "integer",
          "minimum": 1,
          "maximum": 100000,
          "markdownDescription": "Indicates the version number in the schema to update.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specify checkpoint version for update. This is only required to update the Compatibility.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "description": "A key to identify the tag.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "A key to identify the tag.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "Corresponding tag value for the key.",
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "Corresponding tag value for the key.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Registry": {
      "$ref": "#/definitions/Registry"
    },
    "Name": {
      "description": "Name of the schema.",
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "Name of the schema.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "A description of the schema. If description is not provided, there will not be any default value for this.",
      "type": "string",
      "minLength": 0,
      "maxLength": 1000,
      "markdownDescription": "A description of the schema. If description is not provided, there will not be any default value for this.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1000  \nUpdate requires: No interruption"
    },
    "DataFormat": {
      "description": "Data format name to use for the schema. Accepted values: 'AVRO', 'JSON', 'PROTOBUF'",
      "type": "string",
      "enum": [
        "AVRO",
        "JSON",
        "PROTOBUF"
      ],
      "markdownDescription": "Data format name to use for the schema. Accepted values: 'AVRO', 'JSON', 'PROTOBUF'\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: AVRO | JSON | PROTOBUF  \nUpdate requires: Replacement"
    },
    "Compatibility": {
      "description": "Compatibility setting for the schema.",
      "type": "string",
      "enum": [
        "NONE",
        "DISABLED",
        "BACKWARD",
        "BACKWARD_ALL",
        "FORWARD",
        "FORWARD_ALL",
        "FULL",
        "FULL_ALL"
      ],
      "markdownDescription": "Compatibility setting for the schema.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: NONE | DISABLED | BACKWARD | BACKWARD_ALL | FORWARD | FORWARD_ALL | FULL | FULL_ALL  \nUpdate requires: No interruption"
    },
    "SchemaDefinition": {
      "description": "Definition for the initial schema version in plain-text.",
      "type": "string",
      "minLength": 1,
      "maxLength": 170000,
      "markdownDescription": "Definition for the initial schema version in plain-text.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 170000  \nUpdate requires: Replacement"
    },
    "CheckpointVersion": {
      "$ref": "#/definitions/SchemaVersion"
    },
    "Tags": {
      "description": "List of tags to tag the schema",
      "type": "array",
      "minItems": 0,
      "maxItems": 10,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "List of tags to tag the schema\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "Name",
    "DataFormat",
    "SchemaDefinition",
    "Compatibility"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/InitialSchemaVersionId"
  ],
  "createOnlyProperties": [
    "/properties/Registry",
    "/properties/Name",
    "/properties/DataFormat",
    "/properties/SchemaDefinition"
  ],
  "writeOnlyProperties": [
    "/properties/SchemaDefinition"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "glue:CreateSchema"
      ]
    },
    "read": {
      "permissions": [
        "glue:GetSchemaVersion",
        "glue:GetSchema",
        "glue:GetTags"
      ]
    },
    "delete": {
      "permissions": [
        "glue:DeleteSchema",
        "glue:GetSchema"
      ]
    },
    "update": {
      "permissions": [
        "glue:UpdateSchema",
        "glue:GetSchemaVersion",
        "glue:GetSchema",
        "glue:GetTags",
        "glue:TagResource",
        "glue:UntagResource"
      ]
    },
    "list": {
      "permissions": [
        "glue:ListSchemas"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "description": "Amazon Resource Name for the Schema.",
      "type": "string",
      "markdownDescription": "Amazon Resource Name for the Schema.\n\n---\n\nRequired: No  \nType: String  \nPattern: arn:aws(-(cn|us-gov|iso(-[bef])?))?:glue:.*  \nUpdate requires: No interruption"
    },
    "InitialSchemaVersionId": {
      "type": "string",
      "description": "Represents the version ID associated with the initial schema version.",
      "markdownDescription": "Represents the version ID associated with the initial schema version.\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}  \nUpdate requires: No interruption"
    }
  }
}