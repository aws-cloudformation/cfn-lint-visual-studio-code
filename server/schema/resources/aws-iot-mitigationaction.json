{
  "typeName": "AWS::IoT::MitigationAction",
  "description": "Mitigation actions can be used to take actions to mitigate issues that were found in an Audit finding or Detect violation.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-iot.git",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The tag's key.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The tag's key.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The tag's value.",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The tag's value.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ActionParams": {
      "type": "object",
      "description": "The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).",
      "properties": {
        "AddThingsToThingGroupParams": {
          "$ref": "#/definitions/AddThingsToThingGroupParams"
        },
        "EnableIoTLoggingParams": {
          "$ref": "#/definitions/EnableIoTLoggingParams"
        },
        "PublishFindingToSnsParams": {
          "$ref": "#/definitions/PublishFindingToSnsParams"
        },
        "ReplaceDefaultPolicyVersionParams": {
          "$ref": "#/definitions/ReplaceDefaultPolicyVersionParams"
        },
        "UpdateCACertificateParams": {
          "$ref": "#/definitions/UpdateCACertificateParams"
        },
        "UpdateDeviceCertificateParams": {
          "$ref": "#/definitions/UpdateDeviceCertificateParams"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The set of parameters for this mitigation action. You can specify only one type of parameter (in other words, you can apply only one action for each defined mitigation action).\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AddThingsToThingGroupParams": {
      "description": "Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.",
      "type": "object",
      "properties": {
        "OverrideDynamicGroups": {
          "type": "boolean",
          "description": "Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.",
          "markdownDescription": "Specifies if this mitigation action can move the things that triggered the mitigation action out of one or more dynamic thing groups.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ThingGroupNames": {
          "description": "The list of groups to which you want to add the things that triggered the mitigation action.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 128,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
          },
          "minItems": 1,
          "maxItems": 10,
          "insertionOrder": false,
          "markdownDescription": "The list of groups to which you want to add the things that triggered the mitigation action.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ThingGroupNames"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters to define a mitigation action that moves devices associated with a certificate to one or more specified thing groups, typically for quarantine.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "EnableIoTLoggingParams": {
      "description": "Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.",
      "type": "object",
      "properties": {
        "LogLevel": {
          "type": "string",
          "enum": [
            "DEBUG",
            "INFO",
            "ERROR",
            "WARN"
          ],
          "description": " Specifies which types of information are logged.",
          "markdownDescription": " Specifies which types of information are logged.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DEBUG | INFO | ERROR | WARN  \nUpdate requires: No interruption"
        },
        "RoleArnForLogging": {
          "description": " The ARN of the IAM role used for logging.",
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": " The ARN of the IAM role used for logging.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "LogLevel",
        "RoleArnForLogging"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters to define a mitigation action that enables AWS IoT logging at a specified level of detail.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PublishFindingToSnsParams": {
      "type": "object",
      "description": "Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.",
      "properties": {
        "TopicArn": {
          "type": "string",
          "description": "The ARN of the topic to which you want to publish the findings.",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "The ARN of the topic to which you want to publish the findings.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "TopicArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters, to define a mitigation action that publishes findings to Amazon SNS. You can implement your own custom actions in response to the Amazon SNS messages.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplaceDefaultPolicyVersionParams": {
      "type": "object",
      "description": "Parameters to define a mitigation action that adds a blank policy to restrict permissions.",
      "properties": {
        "TemplateName": {
          "type": "string",
          "enum": [
            "BLANK_POLICY"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: BLANK_POLICY  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "TemplateName"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters to define a mitigation action that adds a blank policy to restrict permissions.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "UpdateCACertificateParams": {
      "type": "object",
      "description": "Parameters to define a mitigation action that changes the state of the CA certificate to inactive.",
      "properties": {
        "Action": {
          "type": "string",
          "enum": [
            "DEACTIVATE"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DEACTIVATE  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Action"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters to define a mitigation action that changes the state of the CA certificate to inactive.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "UpdateDeviceCertificateParams": {
      "type": "object",
      "description": "Parameters to define a mitigation action that changes the state of the device certificate to inactive.",
      "properties": {
        "Action": {
          "type": "string",
          "enum": [
            "DEACTIVATE"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DEACTIVATE  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Action"
      ],
      "additionalProperties": false,
      "markdownDescription": "Parameters to define a mitigation action that changes the state of the device certificate to inactive.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "ActionName": {
      "description": "A unique identifier for the mitigation action.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "A unique identifier for the mitigation action.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: [a-zA-Z0-9:_-]+  \nUpdate requires: Replacement"
    },
    "RoleArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "description": "An array of key-value pairs to apply to this resource.",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ActionParams": {
      "$ref": "#/definitions/ActionParams"
    }
  },
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/ActionName"
  ],
  "required": [
    "RoleArn",
    "ActionParams"
  ],
  "createOnlyProperties": [
    "/properties/ActionName"
  ],
  "readOnlyProperties": [
    "/properties/MitigationActionArn",
    "/properties/MitigationActionId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iot:CreateMitigationAction",
        "iam:PassRole"
      ]
    },
    "read": {
      "permissions": [
        "iot:DescribeMitigationAction",
        "iot:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iot:UpdateMitigationAction",
        "iot:ListTagsForResource",
        "iot:UntagResource",
        "iot:TagResource",
        "iam:PassRole"
      ]
    },
    "delete": {
      "permissions": [
        "iot:DescribeMitigationAction",
        "iot:DeleteMitigationAction"
      ]
    },
    "list": {
      "permissions": [
        "iot:ListMitigationActions"
      ]
    }
  },
  "attributes": {
    "MitigationActionArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MitigationActionId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}