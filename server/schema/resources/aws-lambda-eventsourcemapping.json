{
  "typeName": "AWS::Lambda::EventSourceMapping",
  "description": "Resource Type definition for AWS::Lambda::EventSourceMapping",
  "additionalProperties": false,
  "properties": {
    "BatchSize": {
      "description": "The maximum number of items to retrieve in a single batch.",
      "type": "integer",
      "minimum": 1,
      "maximum": 10000,
      "markdownDescription": "The maximum number of items to retrieve in a single batch.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "BisectBatchOnFunctionError": {
      "description": "(Streams) If the function returns an error, split the batch in two and retry.",
      "type": "boolean",
      "markdownDescription": "(Streams) If the function returns an error, split the batch in two and retry.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "DestinationConfig": {
      "description": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.",
      "$ref": "#/definitions/DestinationConfig",
      "markdownDescription": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Enabled": {
      "description": "Disables the event source mapping to pause polling and invocation.",
      "type": "boolean",
      "markdownDescription": "Disables the event source mapping to pause polling and invocation.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "EventSourceArn": {
      "description": "The Amazon Resource Name (ARN) of the event source.",
      "type": "string",
      "minLength": 12,
      "maxLength": 1024,
      "markdownDescription": "The Amazon Resource Name (ARN) of the event source.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 1024  \nPattern: arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)  \nUpdate requires: Replacement"
    },
    "FilterCriteria": {
      "description": "The filter criteria to control event filtering.",
      "$ref": "#/definitions/FilterCriteria",
      "markdownDescription": "The filter criteria to control event filtering.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "FunctionName": {
      "description": "The name of the Lambda function.",
      "type": "string",
      "minLength": 1,
      "maxLength": 140,
      "markdownDescription": "The name of the Lambda function.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 140  \nPattern: (arn:(aws[a-zA-Z-]*)?:lambda:)?([a-z]{2}(-gov)?-[a-z]+-\\d{1}:)?(\\d{12}:)?(function:)?([a-zA-Z0-9-_]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?  \nUpdate requires: No interruption"
    },
    "MaximumBatchingWindowInSeconds": {
      "description": "(Streams) The maximum amount of time to gather records before invoking the function, in seconds.",
      "type": "integer",
      "minimum": 0,
      "maximum": 300,
      "markdownDescription": "(Streams) The maximum amount of time to gather records before invoking the function, in seconds.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "MaximumRecordAgeInSeconds": {
      "description": "(Streams) The maximum age of a record that Lambda sends to a function for processing.",
      "type": "integer",
      "minimum": -1,
      "maximum": 604800,
      "markdownDescription": "(Streams) The maximum age of a record that Lambda sends to a function for processing.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "MaximumRetryAttempts": {
      "description": "(Streams) The maximum number of times to retry when the function returns an error.",
      "type": "integer",
      "minimum": -1,
      "maximum": 10000,
      "markdownDescription": "(Streams) The maximum number of times to retry when the function returns an error.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "ParallelizationFactor": {
      "description": "(Streams) The number of batches to process from each shard concurrently.",
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "markdownDescription": "(Streams) The number of batches to process from each shard concurrently.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "StartingPosition": {
      "description": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources.",
      "type": "string",
      "minLength": 6,
      "maxLength": 12,
      "markdownDescription": "The position in a stream from which to start reading. Required for Amazon Kinesis and Amazon DynamoDB Streams sources.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 6  \nMaximum Length: 12  \nPattern: (LATEST|TRIM_HORIZON|AT_TIMESTAMP)+  \nUpdate requires: Replacement"
    },
    "StartingPositionTimestamp": {
      "description": "With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.",
      "type": "number",
      "markdownDescription": "With StartingPosition set to AT_TIMESTAMP, the time from which to start reading, in Unix time seconds.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: Replacement"
    },
    "Topics": {
      "description": "(Kafka) A list of Kafka topics.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 249,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 249  \nPattern: ^[^.]([a-zA-Z0-9\\-_.]+)  \nUpdate requires: No interruption"
      },
      "minItems": 1,
      "maxItems": 1,
      "markdownDescription": "(Kafka) A list of Kafka topics.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Queues": {
      "description": "(ActiveMQ) A list of ActiveMQ queues.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 1000,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nPattern: [\\s\\S]*  \nUpdate requires: No interruption"
      },
      "minItems": 1,
      "maxItems": 1,
      "markdownDescription": "(ActiveMQ) A list of ActiveMQ queues.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SourceAccessConfigurations": {
      "description": "A list of SourceAccessConfiguration.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/SourceAccessConfiguration"
      },
      "minItems": 1,
      "maxItems": 22,
      "markdownDescription": "A list of SourceAccessConfiguration.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "TumblingWindowInSeconds": {
      "description": "(Streams) Tumbling window (non-overlapping time window) duration to perform aggregations.",
      "type": "integer",
      "minimum": 0,
      "maximum": 900,
      "markdownDescription": "(Streams) Tumbling window (non-overlapping time window) duration to perform aggregations.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "FunctionResponseTypes": {
      "description": "(Streams) A list of response types supported by the function.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "enum": [
          "ReportBatchItemFailures"
        ],
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ReportBatchItemFailures  \nUpdate requires: No interruption"
      },
      "minLength": 0,
      "maxLength": 1,
      "markdownDescription": "(Streams) A list of response types supported by the function.\n\n---\n\nRequired: No  \nType: Array  \nMaximum Length: 1  \nUpdate requires: No interruption"
    },
    "SelfManagedEventSource": {
      "description": "Self-managed event source endpoints.",
      "$ref": "#/definitions/SelfManagedEventSource",
      "markdownDescription": "Self-managed event source endpoints.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "AmazonManagedKafkaEventSourceConfig": {
      "description": "Specific configuration settings for an MSK event source.",
      "$ref": "#/definitions/AmazonManagedKafkaEventSourceConfig",
      "markdownDescription": "Specific configuration settings for an MSK event source.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "SelfManagedKafkaEventSourceConfig": {
      "description": "Specific configuration settings for a Self-Managed Apache Kafka event source.",
      "$ref": "#/definitions/SelfManagedKafkaEventSourceConfig",
      "markdownDescription": "Specific configuration settings for a Self-Managed Apache Kafka event source.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    }
  },
  "definitions": {
    "DestinationConfig": {
      "type": "object",
      "additionalProperties": false,
      "description": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.",
      "properties": {
        "OnFailure": {
          "description": "The destination configuration for failed invocations.",
          "$ref": "#/definitions/OnFailure",
          "markdownDescription": "The destination configuration for failed invocations.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "(Streams) An Amazon SQS queue or Amazon SNS topic destination for discarded records.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FilterCriteria": {
      "type": "object",
      "description": "The filter criteria to control event filtering.",
      "additionalProperties": false,
      "properties": {
        "Filters": {
          "description": "List of filters of this FilterCriteria",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Filter"
          },
          "minItems": 1,
          "maxItems": 20,
          "markdownDescription": "List of filters of this FilterCriteria\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The filter criteria to control event filtering.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Filter": {
      "type": "object",
      "description": "The filter object that defines parameters for ESM filtering.",
      "additionalProperties": false,
      "properties": {
        "Pattern": {
          "type": "string",
          "description": "The filter pattern that defines which events should be passed for invocations.",
          "minLength": 0,
          "maxLength": 4096,
          "markdownDescription": "The filter pattern that defines which events should be passed for invocations.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 4096  \nPattern: .*  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The filter object that defines parameters for ESM filtering.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OnFailure": {
      "type": "object",
      "description": "A destination for events that failed processing.",
      "additionalProperties": false,
      "properties": {
        "Destination": {
          "description": "The Amazon Resource Name (ARN) of the destination resource.",
          "type": "string",
          "minLength": 12,
          "maxLength": 1024,
          "markdownDescription": "The Amazon Resource Name (ARN) of the destination resource.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 1024  \nPattern: arn:(aws[a-zA-Z0-9-]*):([a-zA-Z0-9\\-])+:([a-z]{2}(-gov)?-[a-z]+-\\d{1})?:(\\d{12})?:(.*)  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "A destination for events that failed processing.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SourceAccessConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "description": "The configuration used by AWS Lambda to access event source",
      "properties": {
        "Type": {
          "description": "The type of source access configuration.",
          "enum": [
            "BASIC_AUTH",
            "VPC_SUBNET",
            "VPC_SECURITY_GROUP",
            "SASL_SCRAM_512_AUTH",
            "SASL_SCRAM_256_AUTH",
            "VIRTUAL_HOST",
            "CLIENT_CERTIFICATE_TLS_AUTH",
            "SERVER_ROOT_CA_CERTIFICATE"
          ],
          "type": "string",
          "markdownDescription": "The type of source access configuration.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: BASIC_AUTH | VPC_SUBNET | VPC_SECURITY_GROUP | SASL_SCRAM_512_AUTH | SASL_SCRAM_256_AUTH | VIRTUAL_HOST | CLIENT_CERTIFICATE_TLS_AUTH | SERVER_ROOT_CA_CERTIFICATE  \nUpdate requires: No interruption"
        },
        "URI": {
          "description": "The URI for the source access configuration resource.",
          "type": "string",
          "minLength": 1,
          "maxLength": 200,
          "markdownDescription": "The URI for the source access configuration resource.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nPattern: [a-zA-Z0-9-\\/*:_+=.@-]*  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The configuration used by AWS Lambda to access event source\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SelfManagedEventSource": {
      "type": "object",
      "additionalProperties": false,
      "description": "The configuration used by AWS Lambda to access a self-managed event source.",
      "properties": {
        "Endpoints": {
          "description": "The endpoints for a self-managed event source.",
          "$ref": "#/definitions/Endpoints",
          "markdownDescription": "The endpoints for a self-managed event source.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The configuration used by AWS Lambda to access a self-managed event source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Endpoints": {
      "type": "object",
      "additionalProperties": false,
      "description": "The endpoints used by AWS Lambda to access a self-managed event source.",
      "properties": {
        "KafkaBootstrapServers": {
          "type": "array",
          "description": "A list of Kafka server endpoints.",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "description": "The URL of a Kafka server.",
            "minLength": 1,
            "maxLength": 300,
            "markdownDescription": "The URL of a Kafka server.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 300  \nPattern: ^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9]):[0-9]{1,5}  \nUpdate requires: No interruption"
          },
          "minItems": 1,
          "maxItems": 10,
          "markdownDescription": "A list of Kafka server endpoints.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The endpoints used by AWS Lambda to access a self-managed event source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConsumerGroupId": {
      "description": "The identifier for the Kafka Consumer Group to join.",
      "type": "string",
      "minLength": 1,
      "maxLength": 200,
      "markdownDescription": "The identifier for the Kafka Consumer Group to join.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nPattern: [a-zA-Z0-9-\\/*:_+=.@-]*  \nUpdate requires: No interruption"
    },
    "AmazonManagedKafkaEventSourceConfig": {
      "description": "Specific configuration settings for an MSK event source.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ConsumerGroupId": {
          "description": "The identifier for the Kafka Consumer Group to join.",
          "$ref": "#/definitions/ConsumerGroupId",
          "markdownDescription": "The identifier for the Kafka Consumer Group to join.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Specific configuration settings for an MSK event source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SelfManagedKafkaEventSourceConfig": {
      "description": "Specific configuration settings for a Self-Managed Apache Kafka event source.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ConsumerGroupId": {
          "description": "The identifier for the Kafka Consumer Group to join.",
          "$ref": "#/definitions/ConsumerGroupId",
          "markdownDescription": "The identifier for the Kafka Consumer Group to join.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Specific configuration settings for a Self-Managed Apache Kafka event source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "FunctionName"
  ],
  "createOnlyProperties": [
    "/properties/EventSourceArn",
    "/properties/StartingPosition",
    "/properties/StartingPositionTimestamp",
    "/properties/SelfManagedEventSource",
    "/properties/AmazonManagedKafkaEventSourceConfig",
    "/properties/SelfManagedKafkaEventSourceConfig"
  ],
  "readOnlyProperties": [
    "/properties/Id"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lambda:CreateEventSourceMapping",
        "lambda:GetEventSourceMapping"
      ]
    },
    "delete": {
      "permissions": [
        "lambda:DeleteEventSourceMapping",
        "lambda:GetEventSourceMapping"
      ]
    },
    "list": {
      "permissions": [
        "lambda:ListEventSourceMappings"
      ]
    },
    "read": {
      "permissions": [
        "lambda:GetEventSourceMapping"
      ]
    },
    "update": {
      "permissions": [
        "lambda:UpdateEventSourceMapping",
        "lambda:GetEventSourceMapping"
      ]
    }
  },
  "attributes": {
    "Id": {
      "description": "Event Source Mapping Identifier UUID.",
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "markdownDescription": "Event Source Mapping Identifier UUID.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 36  \nMaximum Length: 36  \nPattern: [a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}  \nUpdate requires: No interruption"
    }
  }
}