{
  "typeName": "AWS::LakeFormation::PrincipalPermissions",
  "description": "The ``AWS::LakeFormation::PrincipalPermissions`` resource represents the permissions that a principal has on a GLUDC resource (such as GLUlong databases or GLUlong tables). When you create a ``PrincipalPermissions`` resource, the permissions are granted via the LFlong ``GrantPermissions`` API operation. When you delete a ``PrincipalPermissions`` resource, the permissions on principal-resource pair are revoked via the LFlong ``RevokePermissions`` API operation.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "CatalogIdString": {
      "type": "string",
      "minLength": 12,
      "maxLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nUpdate requires: No interruption"
    },
    "PathString": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ResourceArnString": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "NameString": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "IAMRoleArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: arn:*:iam::[0-9]*:role/.*  \nUpdate requires: No interruption"
    },
    "LFTag": {
      "type": "object",
      "properties": {
        "TagKey": {
          "$ref": "#/definitions/LFTagKey",
          "description": "The key-name for the LF-tag.",
          "markdownDescription": "The key-name for the LF-tag.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TagValues": {
          "$ref": "#/definitions/TagValueList",
          "description": "A list of possible values of the corresponding ``TagKey`` of an LF-tag key-value pair.",
          "markdownDescription": "A list of possible values of the corresponding ``TagKey`` of an LF-tag key-value pair.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "description": "The LF-tag key and values attached to a resource.",
      "markdownDescription": "The LF-tag key and values attached to a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LFTagPair": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString"
        },
        "TagKey": {
          "$ref": "#/definitions/LFTagKey"
        },
        "TagValues": {
          "$ref": "#/definitions/TagValueList"
        }
      },
      "additionalProperties": false,
      "required": [
        "TagKey",
        "TagValues"
      ],
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LFTagsList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/LFTagPair"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Expression": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/LFTag"
      },
      "minItems": 1,
      "maxItems": 5,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "DataLakePrincipalString": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "DataLakePrincipal": {
      "type": "object",
      "properties": {
        "DataLakePrincipalIdentifier": {
          "$ref": "#/definitions/DataLakePrincipalString",
          "description": "An identifier for the LFlong principal.",
          "markdownDescription": "An identifier for the LFlong principal.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "description": "The LFlong principal.",
      "markdownDescription": "The LFlong principal.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResourceType": {
      "type": "string",
      "enum": [
        "DATABASE",
        "TABLE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DATABASE | TABLE  \nUpdate requires: No interruption"
    },
    "CatalogResource": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatabaseResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the Data Catalog. By default, it is the account ID of the caller.",
          "markdownDescription": "The identifier for the Data Catalog. By default, it is the account ID of the caller.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Name": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the database resource. Unique to the Data Catalog.",
          "markdownDescription": "The name of the database resource. Unique to the Data Catalog.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "Name"
      ],
      "description": "A structure for the database object.",
      "markdownDescription": "A structure for the database object.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TableWildcard": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TableResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the Data Catalog. By default, it is the account ID of the caller.",
          "markdownDescription": "The identifier for the Data Catalog. By default, it is the account ID of the caller.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "DatabaseName": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the database for the table. Unique to a Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal.",
          "markdownDescription": "The name of the database for the table. Unique to a Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Name": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the table.",
          "markdownDescription": "The name of the table.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TableWildcard": {
          "$ref": "#/definitions/TableWildcard",
          "description": "A wildcard object representing every table under a database.\n At least one of ``TableResource$Name`` or ``TableResource$TableWildcard`` is required.",
          "markdownDescription": "A wildcard object representing every table under a database.\n At least one of ``TableResource$Name`` or ``TableResource$TableWildcard`` is required.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "DatabaseName"
      ],
      "description": "A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.",
      "markdownDescription": "A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnNames": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/NameString"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ColumnWildcard": {
      "type": "object",
      "properties": {
        "ExcludedColumnNames": {
          "$ref": "#/definitions/ColumnNames",
          "description": "Excludes column names. Any column with this name will be excluded.",
          "markdownDescription": "Excludes column names. Any column with this name will be excluded.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "description": "A wildcard object, consisting of an optional list of excluded column names or indexes.",
      "markdownDescription": "A wildcard object, consisting of an optional list of excluded column names or indexes.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TableWithColumnsResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the GLUDC where the location is registered with LFlong.",
          "markdownDescription": "The identifier for the GLUDC where the location is registered with LFlong.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "DatabaseName": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the database for the table with columns resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal.",
          "markdownDescription": "The name of the database for the table with columns resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database privileges to a principal.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Name": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the table resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.",
          "markdownDescription": "The name of the table resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ColumnNames": {
          "$ref": "#/definitions/ColumnNames",
          "description": "The list of column names for the table. At least one of ``ColumnNames`` or ``ColumnWildcard`` is required.",
          "markdownDescription": "The list of column names for the table. At least one of ``ColumnNames`` or ``ColumnWildcard`` is required.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ColumnWildcard": {
          "$ref": "#/definitions/ColumnWildcard",
          "description": "A wildcard specified by a ``ColumnWildcard`` object. At least one of ``ColumnNames`` or ``ColumnWildcard`` is required.",
          "markdownDescription": "A wildcard specified by a ``ColumnWildcard`` object. At least one of ``ColumnNames`` or ``ColumnWildcard`` is required.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "DatabaseName",
        "Name"
      ],
      "description": "A structure for a table with columns object. This object is only used when granting a SELECT permission.\n This object must take a value for at least one of ``ColumnsNames``, ``ColumnsIndexes``, or ``ColumnsWildcard``.",
      "markdownDescription": "A structure for a table with columns object. This object is only used when granting a SELECT permission.\n This object must take a value for at least one of ``ColumnsNames``, ``ColumnsIndexes``, or ``ColumnsWildcard``.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataLocationResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the GLUDC where the location is registered with LFlong.",
          "markdownDescription": "The identifier for the GLUDC where the location is registered with LFlong.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ResourceArn": {
          "$ref": "#/definitions/ResourceArnString",
          "description": "The Amazon Resource Name (ARN) that uniquely identifies the data location resource.",
          "markdownDescription": "The Amazon Resource Name (ARN) that uniquely identifies the data location resource.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "ResourceArn"
      ],
      "description": "A structure for a data location object where permissions are granted or revoked.",
      "markdownDescription": "A structure for a data location object where permissions are granted or revoked.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataCellsFilterResource": {
      "type": "object",
      "properties": {
        "TableCatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The ID of the catalog to which the table belongs.",
          "markdownDescription": "The ID of the catalog to which the table belongs.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "DatabaseName": {
          "$ref": "#/definitions/NameString",
          "description": "A database in the GLUDC.",
          "markdownDescription": "A database in the GLUDC.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "TableName": {
          "$ref": "#/definitions/NameString",
          "description": "The name of the table.",
          "markdownDescription": "The name of the table.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Name": {
          "$ref": "#/definitions/NameString",
          "description": "The name given by the user to the data filter cell.",
          "markdownDescription": "The name given by the user to the data filter cell.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "TableCatalogId",
        "DatabaseName",
        "TableName",
        "Name"
      ],
      "description": "A structure that describes certain columns on certain rows.",
      "markdownDescription": "A structure that describes certain columns on certain rows.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LFTagKeyResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the GLUDC where the location is registered with GLUDC.",
          "markdownDescription": "The identifier for the GLUDC where the location is registered with GLUDC.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "TagKey": {
          "$ref": "#/definitions/NameString",
          "description": "The key-name for the LF-tag.",
          "markdownDescription": "The key-name for the LF-tag.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "TagValues": {
          "$ref": "#/definitions/TagValueList",
          "description": "A list of possible values for the corresponding ``TagKey`` of an LF-tag key-value pair.",
          "markdownDescription": "A list of possible values for the corresponding ``TagKey`` of an LF-tag key-value pair.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "TagKey",
        "TagValues"
      ],
      "description": "A structure containing an LF-tag key and values for a resource.",
      "markdownDescription": "A structure containing an LF-tag key and values for a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LFTagPolicyResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString",
          "description": "The identifier for the GLUDC. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your LFlong environment.",
          "markdownDescription": "The identifier for the GLUDC. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your LFlong environment.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ResourceType": {
          "$ref": "#/definitions/ResourceType",
          "description": "The resource type for which the LF-tag policy applies.",
          "markdownDescription": "The resource type for which the LF-tag policy applies.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Expression": {
          "$ref": "#/definitions/Expression",
          "description": "A list of LF-tag conditions that apply to the resource's LF-tag policy.",
          "markdownDescription": "A list of LF-tag conditions that apply to the resource's LF-tag policy.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "CatalogId",
        "ResourceType",
        "Expression"
      ],
      "description": "A list of LF-tag conditions that define a resource's LF-tag policy.\n A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'.",
      "markdownDescription": "A list of LF-tag conditions that define a resource's LF-tag policy.\n A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "Catalog": {
          "$ref": "#/definitions/CatalogResource",
          "description": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your LFlong environment.",
          "markdownDescription": "The identifier for the Data Catalog. By default, the account ID. The Data Catalog is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your LFlong environment.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Database": {
          "$ref": "#/definitions/DatabaseResource",
          "description": "The database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal.",
          "markdownDescription": "The database for the resource. Unique to the Data Catalog. A database is a set of associated table definitions organized into a logical group. You can Grant and Revoke database permissions to a principal.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Table": {
          "$ref": "#/definitions/TableResource",
          "description": "The table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.",
          "markdownDescription": "The table for the resource. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TableWithColumns": {
          "$ref": "#/definitions/TableWithColumnsResource",
          "description": "The table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3.",
          "markdownDescription": "The table with columns for the resource. A principal with permissions to this resource can select metadata from the columns of a table in the Data Catalog and the underlying data in Amazon S3.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DataLocation": {
          "$ref": "#/definitions/DataLocationResource",
          "description": "The location of an Amazon S3 path where permissions are granted or revoked.",
          "markdownDescription": "The location of an Amazon S3 path where permissions are granted or revoked.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DataCellsFilter": {
          "$ref": "#/definitions/DataCellsFilterResource",
          "description": "A data cell filter.",
          "markdownDescription": "A data cell filter.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "LFTag": {
          "$ref": "#/definitions/LFTagKeyResource",
          "description": "The LF-tag key and values attached to a resource.",
          "markdownDescription": "The LF-tag key and values attached to a resource.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "LFTagPolicy": {
          "$ref": "#/definitions/LFTagPolicyResource",
          "description": "A list of LF-tag conditions that define a resource's LF-tag policy.",
          "markdownDescription": "A list of LF-tag conditions that define a resource's LF-tag policy.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "description": "A structure for the resource.",
      "markdownDescription": "A structure for the resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NullableBoolean": {
      "type": [
        "boolean",
        "null"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: ['boolean', 'null']  \nUpdate requires: No interruption"
    },
    "Permission": {
      "type": "string",
      "enum": [
        "ALL",
        "SELECT",
        "ALTER",
        "DROP",
        "DELETE",
        "INSERT",
        "DESCRIBE",
        "CREATE_DATABASE",
        "CREATE_TABLE",
        "DATA_LOCATION_ACCESS",
        "CREATE_TAG",
        "ASSOCIATE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ALL | SELECT | ALTER | DROP | DELETE | INSERT | DESCRIBE | CREATE_DATABASE | CREATE_TABLE | DATA_LOCATION_ACCESS | CREATE_TAG | ASSOCIATE  \nUpdate requires: No interruption"
    },
    "LFTagKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "LFTagValue": {
      "type": "string",
      "minLength": 0,
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
    },
    "DataLakePrincipalList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/DataLakePrincipal"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "PermissionList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Permission"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "TagValueList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/LFTagValue"
      },
      "minItems": 1,
      "maxItems": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "PrincipalResourcePair": {
      "type": "object",
      "properties": {
        "Principal": {
          "$ref": "#/definitions/DataLakePrincipal"
        },
        "Resource": {
          "$ref": "#/definitions/Resource"
        }
      },
      "additionalProperties": false,
      "required": [
        "Principal",
        "Resource"
      ],
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PrincipalPermissions": {
      "type": "object",
      "properties": {
        "DataLakePrincipal": {
          "$ref": "#/definitions/DataLakePrincipal"
        },
        "PermissionList": {
          "$ref": "#/definitions/PermissionList"
        }
      },
      "additionalProperties": false,
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PrincipalPermissionsList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/PrincipalPermissions"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Catalog": {
      "$ref": "#/definitions/CatalogIdString",
      "description": "The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.",
      "markdownDescription": "The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "Principal": {
      "$ref": "#/definitions/DataLakePrincipal",
      "description": "The principal to be granted a permission.",
      "markdownDescription": "The principal to be granted a permission.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Resource": {
      "$ref": "#/definitions/Resource",
      "description": "The resource to be granted or revoked permissions.",
      "markdownDescription": "The resource to be granted or revoked permissions.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Permissions": {
      "$ref": "#/definitions/PermissionList",
      "description": "The permissions granted or revoked.",
      "markdownDescription": "The permissions granted or revoked.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "PermissionsWithGrantOption": {
      "$ref": "#/definitions/PermissionList",
      "description": "Indicates the ability to grant permissions (as a subset of permissions granted).",
      "markdownDescription": "Indicates the ability to grant permissions (as a subset of permissions granted).\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    }
  },
  "additionalProperties": false,
  "required": [
    "Principal",
    "Resource",
    "Permissions",
    "PermissionsWithGrantOption"
  ],
  "createOnlyProperties": [
    "/properties/Catalog",
    "/properties/Principal",
    "/properties/Resource",
    "/properties/Permissions",
    "/properties/PermissionsWithGrantOption"
  ],
  "readOnlyProperties": [
    "/properties/PrincipalIdentifier",
    "/properties/ResourceIdentifier"
  ],
  "replacementStrategy": "delete_then_create",
  "tagging": {
    "taggable": false
  },
  "primaryIdentifier": [
    "/properties/PrincipalIdentifier",
    "/properties/ResourceIdentifier"
  ],
  "propertyTransform": {
    "/properties/Permissions": "Permissions=[] ? null : Permissions",
    "/properties/PermissionsWithGrantOption": "PermissionsWithGrantOption=[] ? null : PermissionsWithGrantOption"
  },
  "handlers": {
    "create": {
      "permissions": [
        "lakeformation:GrantPermissions",
        "lakeformation:ListPermissions",
        "glue:GetTable",
        "glue:GetDatabase"
      ]
    },
    "read": {
      "permissions": [
        "lakeformation:ListPermissions",
        "glue:GetTable",
        "glue:GetDatabase"
      ]
    },
    "delete": {
      "permissions": [
        "lakeformation:RevokePermissions",
        "lakeformation:ListPermissions",
        "glue:GetTable",
        "glue:GetDatabase"
      ]
    }
  },
  "attributes": {
    "PrincipalIdentifier": {
      "type": "string",
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ResourceIdentifier": {
      "type": "string",
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}