{
  "typeName": "AWS::AppSync::GraphQLApi",
  "description": "Resource Type definition for AWS::AppSync::GraphQLApi",
  "additionalProperties": false,
  "properties": {
    "AdditionalAuthenticationProviders": {
      "type": "array",
      "description": "A list of additional authentication providers for the GraphqlApi API.",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/AdditionalAuthenticationProvider"
      },
      "markdownDescription": "A list of additional authentication providers for the GraphqlApi API.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "ApiId": {
      "description": "Unique AWS AppSync GraphQL API identifier.",
      "type": "string",
      "markdownDescription": "Unique AWS AppSync GraphQL API identifier.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ApiType": {
      "description": "The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).",
      "type": "string",
      "markdownDescription": "The value that indicates whether the GraphQL API is a standard API (GRAPHQL) or merged API (MERGED).\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Arn": {
      "description": "The Amazon Resource Name (ARN) of the API key",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the API key\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "AuthenticationType": {
      "description": "Security configuration for your GraphQL API",
      "type": "string",
      "markdownDescription": "Security configuration for your GraphQL API\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
    },
    "EnhancedMetricsConfig": {
      "description": "Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.",
      "$ref": "#/definitions/EnhancedMetricsConfig",
      "markdownDescription": "Enables and controls the enhanced metrics feature. Enhanced metrics emit granular data on API usage and performance such as AppSync request and error counts, latency, and cache hits/misses. All enhanced metric data is sent to your CloudWatch account, and you can configure the types of data that will be sent.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "EnvironmentVariables": {
      "description": "A map containing the list of resources with their properties and environment variables.",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[A-Za-z]+\\w*$": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "A map containing the list of resources with their properties and environment variables.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "GraphQLDns": {
      "description": "The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GraphQLEndpointArn": {
      "description": "The GraphQL endpoint ARN.",
      "type": "string",
      "markdownDescription": "The GraphQL endpoint ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GraphQLUrl": {
      "description": "The Endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The Endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "IntrospectionConfig": {
      "description": "Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.",
      "type": "string",
      "markdownDescription": "Sets the value of the GraphQL API to enable (ENABLED) or disable (DISABLED) introspection. If no value is provided, the introspection configuration will be set to ENABLED by default. This field will produce an error if the operation attempts to use the introspection feature while this field is disabled.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "LambdaAuthorizerConfig": {
      "description": "A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.",
      "$ref": "#/definitions/LambdaAuthorizerConfig",
      "markdownDescription": "A LambdaAuthorizerConfig holds configuration on how to authorize AWS AppSync API access when using the AWS_LAMBDA authorizer mode. Be aware that an AWS AppSync API may have only one Lambda authorizer configured at a time.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "LogConfig": {
      "description": "The Amazon CloudWatch Logs configuration.",
      "$ref": "#/definitions/LogConfig",
      "markdownDescription": "The Amazon CloudWatch Logs configuration.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "MergedApiExecutionRoleArn": {
      "description": "The AWS Identity and Access Management service role ARN for a merged API. ",
      "type": "string",
      "markdownDescription": "The AWS Identity and Access Management service role ARN for a merged API. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Name": {
      "description": "The API name",
      "type": "string",
      "markdownDescription": "The API name\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
    },
    "OpenIDConnectConfig": {
      "description": "The OpenID Connect configuration.",
      "$ref": "#/definitions/OpenIDConnectConfig",
      "markdownDescription": "The OpenID Connect configuration.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "OwnerContact": {
      "description": "The owner contact information for an API resource.",
      "type": "string",
      "markdownDescription": "The owner contact information for an API resource.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "QueryDepthLimit": {
      "description": "The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.",
      "type": "integer",
      "markdownDescription": "The maximum depth a query can have in a single request. Depth refers to the amount of nested levels allowed in the body of query.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "RealtimeDns": {
      "description": "The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "RealtimeUrl": {
      "description": "The GraphQL API real-time endpoint URL.",
      "type": "string",
      "markdownDescription": "The GraphQL API real-time endpoint URL.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ResolverCountLimit": {
      "description": "The maximum number of resolvers that can be invoked in a single request.",
      "type": "integer",
      "markdownDescription": "The maximum number of resolvers that can be invoked in a single request.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "description": "An arbitrary set of tags (key-value pairs) for this GraphQL API.\n\n",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An arbitrary set of tags (key-value pairs) for this GraphQL API.\n\n\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "UserPoolConfig": {
      "description": "Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.\n\n",
      "$ref": "#/definitions/UserPoolConfig",
      "markdownDescription": "Optional authorization configuration for using Amazon Cognito user pools with your GraphQL endpoint.\n\n\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "Visibility": {
      "description": "Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.",
      "type": "string",
      "markdownDescription": "Sets the scope of the GraphQL API to public (GLOBAL) or private (PRIVATE). By default, the scope is set to Global if no value is provided.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "XrayEnabled": {
      "description": "A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.\n\n",
      "type": "boolean",
      "markdownDescription": "A flag indicating whether to use AWS X-Ray tracing for this GraphqlApi.\n\n\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "OpenIDConnectConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ClientId": {
          "description": "The client identifier of the Relying party at the OpenID identity provider.",
          "type": "string",
          "markdownDescription": "The client identifier of the Relying party at the OpenID identity provider.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AuthTTL": {
          "description": "The number of milliseconds that a token is valid after being authenticated.",
          "type": "number",
          "markdownDescription": "The number of milliseconds that a token is valid after being authenticated.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption\n"
        },
        "Issuer": {
          "description": "The issuer for the OIDC configuration. ",
          "type": "string",
          "markdownDescription": "The issuer for the OIDC configuration. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "IatTTL": {
          "description": "The number of milliseconds that a token is valid after it's issued to a user.\n\n",
          "type": "number",
          "markdownDescription": "The number of milliseconds that a token is valid after it's issued to a user.\n\n\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EnhancedMetricsConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "OperationLevelMetricsConfig": {
          "description": "Controls how operation metrics will be emitted to CloudWatch. Operation metrics include:\n\n",
          "type": "string",
          "markdownDescription": "Controls how operation metrics will be emitted to CloudWatch. Operation metrics include:\n\n\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "ResolverLevelMetricsBehavior": {
          "description": "Controls how resolver metrics will be emitted to CloudWatch. Resolver metrics include:\n\n",
          "type": "string",
          "markdownDescription": "Controls how resolver metrics will be emitted to CloudWatch. Resolver metrics include:\n\n\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "DataSourceLevelMetricsBehavior": {
          "description": "Controls how data source metrics will be emitted to CloudWatch. Data source metrics include:\n\n",
          "type": "string",
          "markdownDescription": "Controls how data source metrics will be emitted to CloudWatch. Data source metrics include:\n\n\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "OperationLevelMetricsConfig",
        "ResolverLevelMetricsBehavior",
        "DataSourceLevelMetricsBehavior"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CognitoUserPoolConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AppIdClientRegex": {
          "description": "A regular expression for validating the incoming Amazon Cognito user pool app client ID. ",
          "type": "string",
          "markdownDescription": "A regular expression for validating the incoming Amazon Cognito user pool app client ID. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "UserPoolId": {
          "description": "The user pool ID",
          "type": "string",
          "markdownDescription": "The user pool ID\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AwsRegion": {
          "description": "The AWS Region in which the user pool was created.",
          "type": "string",
          "markdownDescription": "The AWS Region in which the user pool was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LambdaAuthorizerConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IdentityValidationExpression": {
          "description": "A regular expression for validation of tokens before the Lambda function is called.",
          "type": "string",
          "markdownDescription": "A regular expression for validation of tokens before the Lambda function is called.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AuthorizerUri": {
          "description": "The ARN of the Lambda function to be called for authorization.",
          "type": "string",
          "markdownDescription": "The ARN of the Lambda function to be called for authorization.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AuthorizerResultTtlInSeconds": {
          "description": "The number of seconds a response should be cached for.",
          "type": "integer",
          "markdownDescription": "The number of seconds a response should be cached for.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Key": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "UserPoolConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AppIdClientRegex": {
          "description": "A regular expression for validating the incoming Amazon Cognito user pool app client ID.",
          "type": "string",
          "markdownDescription": "A regular expression for validating the incoming Amazon Cognito user pool app client ID.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "UserPoolId": {
          "description": "The user pool ID.",
          "type": "string",
          "markdownDescription": "The user pool ID.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AwsRegion": {
          "description": "The AWS Region in which the user pool was created.",
          "type": "string",
          "markdownDescription": "The AWS Region in which the user pool was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "DefaultAction": {
          "description": "The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.",
          "type": "string",
          "markdownDescription": "The action that you want your GraphQL API to take when a request that uses Amazon Cognito user pool authentication doesn't match the Amazon Cognito user pool configuration.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AdditionalAuthenticationProvider": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LambdaAuthorizerConfig": {
          "$ref": "#/definitions/LambdaAuthorizerConfig"
        },
        "OpenIDConnectConfig": {
          "$ref": "#/definitions/OpenIDConnectConfig"
        },
        "UserPoolConfig": {
          "$ref": "#/definitions/CognitoUserPoolConfig"
        },
        "AuthenticationType": {
          "description": "The authentication type for API key, AWS Identity and Access Management, OIDC, Amazon Cognito user pools, or AWS Lambda.",
          "type": "string",
          "markdownDescription": "The authentication type for API key, AWS Identity and Access Management, OIDC, Amazon Cognito user pools, or AWS Lambda.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "AuthenticationType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LogConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ExcludeVerboseContent": {
          "description": "Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.",
          "type": "boolean",
          "markdownDescription": "Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging level.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "FieldLogLevel": {
          "description": "The field logging level. Values can be NONE, ERROR, INFO, DEBUG, or ALL.",
          "type": "string",
          "markdownDescription": "The field logging level. Values can be NONE, ERROR, INFO, DEBUG, or ALL.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "CloudWatchLogsRoleArn": {
          "description": "The service role that AWS AppSync will assume to publish to Amazon CloudWatch Logs in your account.",
          "type": "string",
          "markdownDescription": "The service role that AWS AppSync will assume to publish to Amazon CloudWatch Logs in your account.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "appsync:TagResource",
      "appsync:UntagResource",
      "appsync:ListTagsForResource"
    ]
  },
  "required": [
    "Name",
    "AuthenticationType"
  ],
  "primaryIdentifier": [
    "/properties/ApiId"
  ],
  "readOnlyProperties": [
    "/properties/ApiId",
    "/properties/Arn",
    "/properties/GraphQLEndpointArn",
    "/properties/GraphQLDns",
    "/properties/GraphQLUrl",
    "/properties/RealtimeDns",
    "/properties/RealtimeUrl"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "appsync:CreateGraphqlApi",
        "appsync:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "appsync:GetGraphqlApi",
        "appsync:GetGraphqlApiEnvironmentVariables",
        "appsync:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "appsync:GetGraphqlApi",
        "appsync:UpdateGraphqlApi",
        "appsync:TagResource",
        "appsync:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "appsync:DeleteGraphqlApi"
      ]
    },
    "list": {
      "permissions": [
        "appsync:ListGraphqlApis"
      ]
    }
  },
  "attributes": {
    "ApiId": {
      "description": "Unique AWS AppSync GraphQL API identifier.",
      "type": "string",
      "markdownDescription": "Unique AWS AppSync GraphQL API identifier.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Arn": {
      "description": "The Amazon Resource Name (ARN) of the API key",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the API key\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GraphQLDns": {
      "description": "The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The fully qualified domain name (FQDN) of the endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GraphQLEndpointArn": {
      "description": "The GraphQL endpoint ARN.",
      "type": "string",
      "markdownDescription": "The GraphQL endpoint ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GraphQLUrl": {
      "description": "The Endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The Endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "RealtimeDns": {
      "description": "The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.",
      "type": "string",
      "markdownDescription": "The fully qualified domain name (FQDN) of the real-time endpoint URL of your GraphQL API.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "RealtimeUrl": {
      "description": "The GraphQL API real-time endpoint URL.",
      "type": "string",
      "markdownDescription": "The GraphQL API real-time endpoint URL.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}