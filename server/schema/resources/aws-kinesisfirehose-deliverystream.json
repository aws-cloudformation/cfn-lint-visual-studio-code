{
  "typeName": "AWS::KinesisFirehose::DeliveryStream",
  "description": "Resource Type definition for AWS::KinesisFirehose::DeliveryStream",
  "additionalProperties": false,
  "properties": {
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "DeliveryStreamEncryptionConfigurationInput": {
      "$ref": "#/definitions/DeliveryStreamEncryptionConfigurationInput"
    },
    "DeliveryStreamName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [a-zA-Z0-9._-]+  \nUpdate requires: Replacement\n"
    },
    "DeliveryStreamType": {
      "type": "string",
      "enum": [
        "DatabaseAsSource",
        "DirectPut",
        "KinesisStreamAsSource",
        "MSKAsSource"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DatabaseAsSource | DirectPut | KinesisStreamAsSource | MSKAsSource  \nUpdate requires: Replacement\n"
    },
    "ElasticsearchDestinationConfiguration": {
      "$ref": "#/definitions/ElasticsearchDestinationConfiguration"
    },
    "AmazonopensearchserviceDestinationConfiguration": {
      "$ref": "#/definitions/AmazonopensearchserviceDestinationConfiguration"
    },
    "AmazonOpenSearchServerlessDestinationConfiguration": {
      "$ref": "#/definitions/AmazonOpenSearchServerlessDestinationConfiguration"
    },
    "ExtendedS3DestinationConfiguration": {
      "$ref": "#/definitions/ExtendedS3DestinationConfiguration"
    },
    "DatabaseSourceConfiguration": {
      "$ref": "#/definitions/DatabaseSourceConfiguration"
    },
    "DirectPutSourceConfiguration": {
      "$ref": "#/definitions/DirectPutSourceConfiguration"
    },
    "KinesisStreamSourceConfiguration": {
      "$ref": "#/definitions/KinesisStreamSourceConfiguration"
    },
    "MSKSourceConfiguration": {
      "$ref": "#/definitions/MSKSourceConfiguration"
    },
    "RedshiftDestinationConfiguration": {
      "$ref": "#/definitions/RedshiftDestinationConfiguration"
    },
    "S3DestinationConfiguration": {
      "$ref": "#/definitions/S3DestinationConfiguration"
    },
    "SplunkDestinationConfiguration": {
      "$ref": "#/definitions/SplunkDestinationConfiguration"
    },
    "HttpEndpointDestinationConfiguration": {
      "$ref": "#/definitions/HttpEndpointDestinationConfiguration"
    },
    "SnowflakeDestinationConfiguration": {
      "$ref": "#/definitions/SnowflakeDestinationConfiguration"
    },
    "IcebergDestinationConfiguration": {
      "$ref": "#/definitions/IcebergDestinationConfiguration"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 1,
      "maxItems": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "DeliveryStreamEncryptionConfigurationInput": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KeyARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::KMS::Key",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "KeyType": {
          "type": "string",
          "enum": [
            "AWS_OWNED_CMK",
            "CUSTOMER_MANAGED_CMK"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: AWS_OWNED_CMK | CUSTOMER_MANAGED_CMK  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "KeyType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SplunkDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "HECAcknowledgmentTimeoutInSeconds": {
          "type": "integer",
          "minimum": 180,
          "maximum": 600,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "HECEndpoint": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2048,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
        },
        "HECEndpointType": {
          "type": "string",
          "enum": [
            "Raw",
            "Event"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Raw | Event  \nUpdate requires: No interruption\n"
        },
        "HECToken": {
          "type": "string",
          "minLength": 0,
          "maxLength": 2048,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/SplunkRetryOptions"
        },
        "S3BackupMode": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/SplunkBufferingHints"
        }
      },
      "required": [
        "HECEndpoint",
        "S3Configuration",
        "HECEndpointType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "HttpEndpointDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "EndpointConfiguration": {
          "$ref": "#/definitions/HttpEndpointConfiguration"
        },
        "RequestConfiguration": {
          "$ref": "#/definitions/HttpEndpointRequestConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        },
        "S3BackupMode": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        }
      },
      "required": [
        "EndpointConfiguration",
        "S3Configuration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DirectPutSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ThroughputHintInMBs": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "KinesisStreamSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KinesisStreamARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::Kinesis::Stream",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "RoleARN",
        "KinesisStreamARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "type": "string",
          "enum": [
            "MySQL",
            "PostgreSQL"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: MySQL | PostgreSQL  \nUpdate requires: No interruption\n"
        },
        "Endpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: ^(?!\\s*$).+  \nUpdate requires: No interruption\n"
        },
        "Port": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SSLMode": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption\n"
        },
        "Databases": {
          "$ref": "#/definitions/Databases"
        },
        "Tables": {
          "$ref": "#/definitions/DatabaseTables"
        },
        "Columns": {
          "$ref": "#/definitions/DatabaseColumns"
        },
        "SurrogateKeys": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nPattern: ^\\S+$  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "SnapshotWatermarkTable": {
          "$ref": "#/definitions/DatabaseTableName"
        },
        "DatabaseSourceAuthenticationConfiguration": {
          "$ref": "#/definitions/DatabaseSourceAuthenticationConfiguration"
        },
        "DatabaseSourceVPCConfiguration": {
          "$ref": "#/definitions/DatabaseSourceVPCConfiguration"
        },
        "Digest": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: .*  \nUpdate requires: No interruption\n"
        },
        "PublicCertificate": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4096,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 4096  \nPattern: .*  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Type",
        "Endpoint",
        "Port",
        "Databases",
        "Tables",
        "SnapshotWatermarkTable",
        "DatabaseSourceAuthenticationConfiguration",
        "DatabaseSourceVPCConfiguration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Databases": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [\\u0001-\\uFFFF]*  \nUpdate requires: No interruption\n"
    },
    "DatabaseTables": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseTableName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseTableName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseTableName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 129,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 129  \nPattern: [\\u0001-\\uFFFF]*  \nUpdate requires: No interruption\n"
    },
    "DatabaseColumns": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Include": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseColumnName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "Exclude": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DatabaseColumnName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseColumnName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 194,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 194  \nPattern: [\\u0001-\\uFFFF]*  \nUpdate requires: No interruption\n"
    },
    "DatabaseSourceAuthenticationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        }
      },
      "required": [
        "SecretsManagerConfiguration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseSourceVPCConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "VpcEndpointServiceName": {
          "$ref": "#/definitions/VpcEndpointServiceName"
        }
      },
      "required": [
        "VpcEndpointServiceName"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "VpcEndpointServiceName": {
      "type": "string",
      "minLength": 47,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 47  \nMaximum Length: 255  \nPattern: ([a-zA-Z0-9\\-\\_]+\\.){2,3}vpce\\.[a-zA-Z0-9\\-]*\\.vpce-svc\\-[a-zA-Z0-9\\-]{17}$  \nUpdate requires: No interruption\n"
    },
    "MSKSourceConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MSKClusterARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::MSK::Cluster",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "TopicName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: [a-zA-Z0-9\\._\\-]+  \nUpdate requires: No interruption\n"
        },
        "ReadFromTimestamp": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AuthenticationConfiguration": {
          "$ref": "#/definitions/AuthenticationConfiguration"
        }
      },
      "required": [
        "MSKClusterARN",
        "TopicName",
        "AuthenticationConfiguration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AuthenticationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "Connectivity": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: PUBLIC | PRIVATE  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "RoleARN",
        "Connectivity"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "VpcConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "SubnetIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "relationshipRef": {
              "typeName": "AWS::EC2::Subnet",
              "propertyPath": "/properties/SubnetId"
            },
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
          },
          "minItems": 1,
          "maxItems": 16,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "SecurityGroupIds": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 1024,
            "relationshipRef": {
              "typeName": "AWS::EC2::SecurityGroup",
              "propertyPath": "/properties/GroupId"
            },
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
          },
          "minItems": 1,
          "maxItems": 5,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "RoleARN",
        "SubnetIds",
        "SecurityGroupIds"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DocumentIdOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DefaultDocumentIdFormat": {
          "type": "string",
          "enum": [
            "FIREHOSE_DEFAULT",
            "NO_DOCUMENT_ID"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: FIREHOSE_DEFAULT | NO_DOCUMENT_ID  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "DefaultDocumentIdFormat"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ExtendedS3DestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "relationshipRef": {
            "typeName": "AWS::S3::Bucket",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CompressionFormat": {
          "type": "string",
          "enum": [
            "UNCOMPRESSED",
            "GZIP",
            "ZIP",
            "Snappy",
            "HADOOP_SNAPPY"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: UNCOMPRESSED | GZIP | ZIP | Snappy | HADOOP_SNAPPY  \nUpdate requires: No interruption\n"
        },
        "CustomTimeZone": {
          "type": "string",
          "minLength": 0,
          "maxLength": 50,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 50  \nUpdate requires: No interruption\n"
        },
        "DataFormatConversionConfiguration": {
          "$ref": "#/definitions/DataFormatConversionConfiguration"
        },
        "DynamicPartitioningConfiguration": {
          "$ref": "#/definitions/DynamicPartitioningConfiguration"
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/EncryptionConfiguration"
        },
        "ErrorOutputPrefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        },
        "FileExtension": {
          "type": "string",
          "minLength": 0,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 128  \nPattern: ^$|\\.[0-9a-z!\\-_.*'()]+  \nUpdate requires: No interruption\n"
        },
        "Prefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "S3BackupConfiguration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "BucketARN",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "S3DestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "relationshipRef": {
            "typeName": "AWS::S3::Bucket",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CompressionFormat": {
          "type": "string",
          "enum": [
            "UNCOMPRESSED",
            "GZIP",
            "ZIP",
            "Snappy",
            "HADOOP_SNAPPY"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: UNCOMPRESSED | GZIP | ZIP | Snappy | HADOOP_SNAPPY  \nUpdate requires: No interruption\n"
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/EncryptionConfiguration"
        },
        "ErrorOutputPrefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        },
        "Prefix": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "BucketARN",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "RedshiftDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ClusterJDBCURL": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        },
        "CopyCommand": {
          "$ref": "#/definitions/CopyCommand"
        },
        "Password": {
          "type": "string",
          "minLength": 6,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 6  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RedshiftRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "S3BackupConfiguration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "Username": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "S3Configuration",
        "ClusterJDBCURL",
        "CopyCommand",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ElasticsearchDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/ElasticsearchBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "DomainARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "anyOf": [
            {
              "relationshipRef": {
                "typeName": "AWS::Elasticsearch::Domain",
                "propertyPath": "/properties/Arn"
              }
            },
            {
              "relationshipRef": {
                "typeName": "AWS::OpenSearchService::Domain",
                "propertyPath": "/properties/Arn"
              }
            }
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 80  \nUpdate requires: No interruption\n"
        },
        "IndexRotationPeriod": {
          "type": "string",
          "enum": [
            "NoRotation",
            "OneHour",
            "OneDay",
            "OneWeek",
            "OneMonth"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NoRotation | OneHour | OneDay | OneWeek | OneMonth  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/ElasticsearchRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "FailedDocumentsOnly",
            "AllDocuments"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FailedDocumentsOnly | AllDocuments  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "ClusterEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: https:.*  \nUpdate requires: No interruption\n"
        },
        "TypeName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 100  \nUpdate requires: No interruption\n"
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        },
        "DocumentIdOptions": {
          "$ref": "#/definitions/DocumentIdOptions"
        }
      },
      "required": [
        "IndexName",
        "S3Configuration",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: Replacement\n"
    },
    "AmazonopensearchserviceDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/AmazonopensearchserviceBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "DomainARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 80  \nUpdate requires: No interruption\n"
        },
        "IndexRotationPeriod": {
          "type": "string",
          "enum": [
            "NoRotation",
            "OneHour",
            "OneDay",
            "OneWeek",
            "OneMonth"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NoRotation | OneHour | OneDay | OneWeek | OneMonth  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/AmazonopensearchserviceRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "FailedDocumentsOnly",
            "AllDocuments"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FailedDocumentsOnly | AllDocuments  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "ClusterEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: https:.*  \nUpdate requires: No interruption\n"
        },
        "TypeName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 100,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 100  \nUpdate requires: No interruption\n"
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        },
        "DocumentIdOptions": {
          "$ref": "#/definitions/DocumentIdOptions"
        }
      },
      "required": [
        "IndexName",
        "S3Configuration",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: Replacement\n"
    },
    "AmazonOpenSearchServerlessDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BufferingHints": {
          "$ref": "#/definitions/AmazonOpenSearchServerlessBufferingHints"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "IndexName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 80,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 80  \nUpdate requires: No interruption\n"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RetryOptions": {
          "$ref": "#/definitions/AmazonOpenSearchServerlessRetryOptions"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "FailedDocumentsOnly",
            "AllDocuments"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FailedDocumentsOnly | AllDocuments  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "CollectionEndpoint": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::OpenSearchServerless::Collection",
            "propertyPath": "/properties/CollectionEndpoint"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: https:.*  \nUpdate requires: No interruption\n"
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        }
      },
      "required": [
        "IndexName",
        "S3Configuration",
        "RoleARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: Replacement\n"
    },
    "SnowflakeDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AccountUrl": {
          "type": "string",
          "minLength": 24,
          "maxLength": 2048,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 24  \nMaximum Length: 2048  \nPattern: .+?\\.snowflakecomputing\\.com  \nUpdate requires: No interruption\n"
        },
        "PrivateKey": {
          "type": "string",
          "minLength": 256,
          "maxLength": 4096,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 256  \nMaximum Length: 4096  \nPattern: ^(?:[A-Za-z0-9+\\/]{4})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$  \nUpdate requires: No interruption\n"
        },
        "KeyPassphrase": {
          "type": "string",
          "minLength": 7,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 7  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "User": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "Database": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "Schema": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "Table": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "SnowflakeRoleConfiguration": {
          "$ref": "#/definitions/SnowflakeRoleConfiguration"
        },
        "DataLoadingOption": {
          "type": "string",
          "enum": [
            "JSON_MAPPING",
            "VARIANT_CONTENT_MAPPING",
            "VARIANT_CONTENT_AND_METADATA_MAPPING"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: JSON_MAPPING | VARIANT_CONTENT_MAPPING | VARIANT_CONTENT_AND_METADATA_MAPPING  \nUpdate requires: No interruption\n"
        },
        "MetaDataColumnName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "ContentColumnName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "SnowflakeVpcConfiguration": {
          "$ref": "#/definitions/SnowflakeVpcConfiguration"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "RetryOptions": {
          "$ref": "#/definitions/SnowflakeRetryOptions"
        },
        "S3BackupMode": {
          "type": "string",
          "enum": [
            "FailedDataOnly",
            "AllData"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FailedDataOnly | AllData  \nUpdate requires: No interruption\n"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        },
        "SecretsManagerConfiguration": {
          "$ref": "#/definitions/SecretsManagerConfiguration"
        },
        "BufferingHints": {
          "$ref": "#/definitions/SnowflakeBufferingHints"
        }
      },
      "required": [
        "AccountUrl",
        "Database",
        "Schema",
        "Table",
        "RoleARN",
        "S3Configuration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: Replacement\n"
    },
    "IcebergDestinationConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DestinationTableConfigurationList": {
          "$ref": "#/definitions/DestinationTableConfigurationList"
        },
        "ProcessingConfiguration": {
          "$ref": "#/definitions/ProcessingConfiguration"
        },
        "CloudWatchLoggingOptions": {
          "$ref": "#/definitions/CloudWatchLoggingOptions"
        },
        "CatalogConfiguration": {
          "$ref": "#/definitions/CatalogConfiguration"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "AppendOnly": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        },
        "s3BackupMode": {
          "type": "string",
          "enum": [
            "AllData",
            "FailedDataOnly"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AllData | FailedDataOnly  \nUpdate requires: No interruption\n"
        },
        "BufferingHints": {
          "$ref": "#/definitions/BufferingHints"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DestinationConfiguration"
        }
      },
      "required": [
        "RoleARN",
        "CatalogConfiguration",
        "S3Configuration"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CatalogConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CatalogArn": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DestinationTableConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DestinationTableName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        },
        "DestinationDatabaseName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        },
        "S3ErrorOutputPrefix": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        },
        "UniqueKeys": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/UniqueKey"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "DestinationDatabaseName",
        "DestinationTableName"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "UniqueKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
    },
    "BufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ProcessingConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Processors": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/Processor"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DestinationTableConfigurationList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DestinationTableConfiguration"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "SplunkRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ElasticsearchRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AmazonopensearchserviceRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AmazonOpenSearchServerlessRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SnowflakeRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "RedshiftRetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "RetryOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DurationInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DataFormatConversionConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "InputFormatConfiguration": {
          "$ref": "#/definitions/InputFormatConfiguration"
        },
        "OutputFormatConfiguration": {
          "$ref": "#/definitions/OutputFormatConfiguration"
        },
        "SchemaConfiguration": {
          "$ref": "#/definitions/SchemaConfiguration"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DynamicPartitioningConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "RetryOptions": {
          "$ref": "#/definitions/RetryOptions"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CopyCommand": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CopyOptions": {
          "type": "string",
          "minLength": 0,
          "maxLength": 204800,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 204800  \nUpdate requires: No interruption\n"
        },
        "DataTableColumns": {
          "type": "string",
          "minLength": 0,
          "maxLength": 204800,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 204800  \nUpdate requires: No interruption\n"
        },
        "DataTableName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "DataTableName"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EncryptionConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KMSEncryptionConfig": {
          "$ref": "#/definitions/KMSEncryptionConfig"
        },
        "NoEncryptionConfig": {
          "type": "string",
          "enum": [
            "NoEncryption"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NoEncryption  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ElasticsearchBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AmazonopensearchserviceBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AmazonOpenSearchServerlessBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SplunkBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SnowflakeBufferingHints": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "IntervalInSeconds": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "SizeInMBs": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CloudWatchLoggingOptions": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "LogGroupName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Logs::LogGroup",
            "propertyPath": "/properties/LogGroupName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "LogStreamName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Logs::LogStream",
            "propertyPath": "/properties/LogStreamName"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "OutputFormatConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Serializer": {
          "$ref": "#/definitions/Serializer"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Processor": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Parameters": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ProcessorParameter"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "Type": {
          "type": "string",
          "enum": [
            "RecordDeAggregation",
            "Decompression",
            "CloudWatchLogProcessing",
            "Lambda",
            "MetadataExtraction",
            "AppendDelimiterToRecord"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: RecordDeAggregation | Decompression | CloudWatchLogProcessing | Lambda | MetadataExtraction | AppendDelimiterToRecord  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Type"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "KMSEncryptionConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AWSKMSKeyARN": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::KMS::Key",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "AWSKMSKeyARN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "InputFormatConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Deserializer": {
          "$ref": "#/definitions/Deserializer"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SchemaConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CatalogId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "DatabaseName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Glue::Database",
            "propertyPath": "/properties/Id"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Region": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*  \nUpdate requires: No interruption\n"
        },
        "TableName": {
          "type": "string",
          "relationshipRef": {
            "typeName": "AWS::Glue::Table",
            "propertyPath": "/properties/Id"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "VersionId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Serializer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "OrcSerDe": {
          "$ref": "#/definitions/OrcSerDe"
        },
        "ParquetSerDe": {
          "$ref": "#/definitions/ParquetSerDe"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ProcessorParameter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ParameterName": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "ParameterValue": {
          "type": "string",
          "anyOf": [
            {
              "relationshipRef": {
                "typeName": "AWS::Lambda::Function",
                "propertyPath": "/properties/Arn"
              }
            },
            {
              "relationshipRef": {
                "typeName": "AWS::IAM::Role",
                "propertyPath": "/properties/Arn"
              }
            },
            {
              "relationshipRef": {
                "typeName": "AWS::Lambda::Alias",
                "propertyPath": "/properties/Id"
              }
            }
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "ParameterValue",
        "ParameterName"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Deserializer": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "HiveJsonSerDe": {
          "$ref": "#/definitions/HiveJsonSerDe"
        },
        "OpenXJsonSerDe": {
          "$ref": "#/definitions/OpenXJsonSerDe"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "HiveJsonSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TimestampFormats": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "OrcSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BlockSizeBytes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "BloomFilterColumns": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "BloomFilterFalsePositiveProbability": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption\n"
        },
        "Compression": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "DictionaryKeyThreshold": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption\n"
        },
        "EnablePadding": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "FormatVersion": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "PaddingTolerance": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption\n"
        },
        "RowIndexStride": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "StripeSizeBytes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ParquetSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BlockSizeBytes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "Compression": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "EnableDictionaryCompression": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "MaxPaddingBytes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "PageSizeBytes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "WriterVersion": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "OpenXJsonSerDe": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CaseInsensitive": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "ColumnToJsonKeyMappings": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "[a-zA-Z0-9]+": {
              "type": "string",
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
            }
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        },
        "ConvertDotsInJsonKeysToUnderscores": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "HttpEndpointRequestConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ContentEncoding": {
          "type": "string",
          "enum": [
            "NONE",
            "GZIP"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NONE | GZIP  \nUpdate requires: No interruption\n"
        },
        "CommonAttributes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/HttpEndpointCommonAttribute"
          },
          "minItems": 0,
          "maxItems": 50,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "HttpEndpointCommonAttribute": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AttributeName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        },
        "AttributeValue": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "AttributeName",
        "AttributeValue"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "HttpEndpointConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Url": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nUpdate requires: No interruption\n"
        },
        "AccessKey": {
          "type": "string",
          "minLength": 0,
          "maxLength": 4096,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 4096  \nUpdate requires: No interruption\n"
        },
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Url"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SnowflakeRoleConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "SnowflakeRole": {
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SnowflakeVpcConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "PrivateLinkVpceId": {
          "type": "string",
          "minLength": 47,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 47  \nMaximum Length: 255  \nPattern: ([a-zA-Z0-9\\-\\_]+\\.){2,3}vpce\\.[a-zA-Z0-9\\-]*\\.vpce-svc\\-[a-zA-Z0-9\\-]{17}$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "PrivateLinkVpceId"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SecretsManagerConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "RoleARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "relationshipRef": {
            "typeName": "AWS::IAM::Role",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: arn:.*:iam::\\d{12}:role/[a-zA-Z_0-9+=,.@\\-_/]+  \nUpdate requires: No interruption\n"
        },
        "SecretARN": {
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "relationshipRef": {
            "typeName": "AWS::SecretsManager::Secret",
            "propertyPath": "/properties/Arn"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: arn:.*:secretsmanager:[a-zA-Z0-9\\-]+:\\d{12}:secret:[a-zA-Z0-9\\-/_+=.@]+  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Enabled"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^(?!aws:)[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^[\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@%]*$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "firehose:CreateDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "iam:GetRole",
        "iam:PassRole",
        "kms:CreateGrant",
        "kms:DescribeKey"
      ]
    },
    "read": {
      "permissions": [
        "firehose:DescribeDeliveryStream",
        "firehose:ListTagsForDeliveryStream"
      ]
    },
    "update": {
      "permissions": [
        "firehose:UpdateDestination",
        "firehose:DescribeDeliveryStream",
        "firehose:StartDeliveryStreamEncryption",
        "firehose:StopDeliveryStreamEncryption",
        "firehose:ListTagsForDeliveryStream",
        "firehose:TagDeliveryStream",
        "firehose:UntagDeliveryStream",
        "kms:CreateGrant",
        "kms:RevokeGrant",
        "kms:DescribeKey"
      ]
    },
    "delete": {
      "permissions": [
        "firehose:DeleteDeliveryStream",
        "firehose:DescribeDeliveryStream",
        "kms:RevokeGrant",
        "kms:DescribeKey"
      ]
    },
    "list": {
      "permissions": [
        "firehose:ListDeliveryStreams"
      ]
    }
  },
  "readOnlyProperties": [
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/DeliveryStreamName",
    "/properties/DeliveryStreamType",
    "/properties/ElasticsearchDestinationConfiguration/VpcConfiguration",
    "/properties/AmazonopensearchserviceDestinationConfiguration/VpcConfiguration",
    "/properties/AmazonOpenSearchServerlessDestinationConfiguration/VpcConfiguration",
    "/properties/DatabaseSourceConfiguration",
    "/properties/KinesisStreamSourceConfiguration",
    "/properties/DirectPutSourceConfiguration",
    "/properties/MSKSourceConfiguration",
    "/properties/IcebergDestinationConfiguration",
    "/properties/SnowflakeDestinationConfiguration/SnowflakeVpcConfiguration"
  ],
  "primaryIdentifier": [
    "/properties/DeliveryStreamName"
  ],
  "attributes": {
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}