{
  "typeName": "AWS::QuickSight::DataSet",
  "description": "Definition of the AWS::QuickSight::DataSet Resource Type.",
  "definitions": {
    "CalculatedColumn": {
      "type": "object",
      "description": "<p>A calculated column for a dataset.</p>",
      "properties": {
        "ColumnId": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.</p>",
          "markdownDescription": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "ColumnName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Column name.</p>",
          "markdownDescription": "<p>Column name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Expression": {
          "type": "string",
          "maxLength": 4096,
          "minLength": 1,
          "description": "<p>An expression that defines the calculated column.</p>",
          "markdownDescription": "<p>An expression that defines the calculated column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 4096  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnId",
        "ColumnName",
        "Expression"
      ],
      "markdownDescription": "<p>A calculated column for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CastColumnTypeOperation": {
      "type": "object",
      "description": "<p>A transform operation that casts a column to a different type.</p>",
      "properties": {
        "ColumnName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Column name.</p>",
          "markdownDescription": "<p>Column name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Format": {
          "type": "string",
          "maxLength": 32,
          "minLength": 0,
          "description": "<p>When casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.</p>",
          "markdownDescription": "<p>When casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 32  \nUpdate requires: No interruption"
        },
        "NewColumnType": {
          "$ref": "#/definitions/ColumnDataType"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnType"
      ],
      "markdownDescription": "<p>A transform operation that casts a column to a different type.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnDataType": {
      "type": "string",
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: STRING | INTEGER | DECIMAL | DATETIME  \nUpdate requires: No interruption"
    },
    "ColumnDescription": {
      "type": "object",
      "description": "<p>Metadata that contains a description for a column.</p>",
      "properties": {
        "Text": {
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "description": "<p>The text of a description for a column.</p>",
          "markdownDescription": "<p>The text of a description for a column.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Metadata that contains a description for a column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnGroup": {
      "type": "object",
      "description": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "properties": {
        "GeoSpatialColumnGroup": {
          "$ref": "#/definitions/GeoSpatialColumnGroup"
        }
      },
      "markdownDescription": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnLevelPermissionRule": {
      "type": "object",
      "properties": {
        "ColumnNames": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "minItems": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Principals": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "maxItems": 100,
          "minItems": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnTag": {
      "type": "object",
      "description": "<p>A tag for a column in a <a>TagColumnOperation</a> structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "properties": {
        "ColumnGeographicRole": {
          "$ref": "#/definitions/GeoSpatialDataRole"
        },
        "ColumnDescription": {
          "$ref": "#/definitions/ColumnDescription"
        }
      },
      "markdownDescription": "<p>A tag for a column in a <a>TagColumnOperation</a> structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CreateColumnsOperation": {
      "type": "object",
      "description": "<p>A transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.</p>",
      "properties": {
        "Columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalculatedColumn"
          },
          "maxItems": 128,
          "minItems": 1,
          "description": "<p>Calculated columns to create.</p>",
          "markdownDescription": "<p>Calculated columns to create.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns"
      ],
      "markdownDescription": "<p>A transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomSql": {
      "type": "object",
      "description": "<p>A physical table type built from the results of the custom SQL query.</p>",
      "properties": {
        "DataSourceArn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "SqlQuery": {
          "type": "string",
          "maxLength": 65536,
          "minLength": 1,
          "description": "<p>The SQL query.</p>",
          "markdownDescription": "<p>The SQL query.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 65536  \nUpdate requires: No interruption"
        },
        "Columns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "description": "<p>The column schema from the SQL query result set.</p>",
          "markdownDescription": "<p>The column schema from the SQL query result set.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Name": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>A display name for the SQL query result.</p>",
          "markdownDescription": "<p>A display name for the SQL query result.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns",
        "DataSourceArn",
        "Name",
        "SqlQuery"
      ],
      "markdownDescription": "<p>A physical table type built from the results of the custom SQL query.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSetImportMode": {
      "type": "string",
      "enum": [
        "SPICE",
        "DIRECT_QUERY"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SPICE | DIRECT_QUERY  \nUpdate requires: No interruption"
    },
    "FieldFolder": {
      "type": "object",
      "properties": {
        "Description": {
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        },
        "Columns": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "maxItems": 5000,
          "minItems": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FieldFolderMap": {
      "type": "object",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/FieldFolder"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FileFormat": {
      "type": "string",
      "enum": [
        "CSV",
        "TSV",
        "CLF",
        "ELF",
        "XLSX",
        "JSON"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CSV | TSV | CLF | ELF | XLSX | JSON  \nUpdate requires: No interruption"
    },
    "FilterOperation": {
      "type": "object",
      "description": "<p>A transform operation that filters rows based on a condition.</p>",
      "properties": {
        "ConditionExpression": {
          "type": "string",
          "maxLength": 4096,
          "minLength": 1,
          "description": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.</p>",
          "markdownDescription": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 4096  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ConditionExpression"
      ],
      "markdownDescription": "<p>A transform operation that filters rows based on a condition.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GeoSpatialColumnGroup": {
      "type": "object",
      "description": "<p>Geospatial column group that denotes a hierarchy.</p>",
      "properties": {
        "Columns": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
          },
          "maxItems": 16,
          "minItems": 1,
          "description": "<p>Columns in this hierarchy.</p>",
          "markdownDescription": "<p>Columns in this hierarchy.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "CountryCode": {
          "$ref": "#/definitions/GeoSpatialCountryCode"
        },
        "Name": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>A display name for the hierarchy.</p>",
          "markdownDescription": "<p>A display name for the hierarchy.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns",
        "Name"
      ],
      "markdownDescription": "<p>Geospatial column group that denotes a hierarchy.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GeoSpatialCountryCode": {
      "type": "string",
      "enum": [
        "US"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: US  \nUpdate requires: No interruption"
    },
    "GeoSpatialDataRole": {
      "type": "string",
      "enum": [
        "COUNTRY",
        "STATE",
        "COUNTY",
        "CITY",
        "POSTCODE",
        "LONGITUDE",
        "LATITUDE",
        "POLITICAL1"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: COUNTRY | STATE | COUNTY | CITY | POSTCODE | LONGITUDE | LATITUDE | POLITICAL1  \nUpdate requires: No interruption"
    },
    "InputColumn": {
      "type": "object",
      "description": "<p>Metadata for a column that is used as the input of a transform operation.</p>",
      "properties": {
        "Type": {
          "$ref": "#/definitions/InputColumnDataType"
        },
        "Name": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The name of this column in the underlying data source.</p>",
          "markdownDescription": "<p>The name of this column in the underlying data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "markdownDescription": "<p>Metadata for a column that is used as the input of a transform operation.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InputColumnDataType": {
      "type": "string",
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME",
        "BIT",
        "BOOLEAN",
        "JSON"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: STRING | INTEGER | DECIMAL | DATETIME | BIT | BOOLEAN | JSON  \nUpdate requires: No interruption"
    },
    "JoinInstruction": {
      "type": "object",
      "description": "<p>Join instruction.</p>",
      "properties": {
        "OnClause": {
          "type": "string",
          "maxLength": 512,
          "minLength": 1,
          "description": "<p>On Clause.</p>",
          "markdownDescription": "<p>On Clause.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption"
        },
        "Type": {
          "$ref": "#/definitions/JoinType"
        },
        "LeftJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        },
        "LeftOperand": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>Left operand.</p>",
          "markdownDescription": "<p>Left operand.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [0-9a-zA-Z-]*  \nUpdate requires: No interruption"
        },
        "RightOperand": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>Right operand.</p>",
          "markdownDescription": "<p>Right operand.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [0-9a-zA-Z-]*  \nUpdate requires: No interruption"
        },
        "RightJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        }
      },
      "required": [
        "LeftOperand",
        "OnClause",
        "RightOperand",
        "Type"
      ],
      "markdownDescription": "<p>Join instruction.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "JoinKeyProperties": {
      "type": "object",
      "properties": {
        "UniqueKey": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "JoinType": {
      "type": "string",
      "enum": [
        "INNER",
        "OUTER",
        "LEFT",
        "RIGHT"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: INNER | OUTER | LEFT | RIGHT  \nUpdate requires: No interruption"
    },
    "LogicalTable": {
      "type": "object",
      "description": "<p>A <i>logical table</i> is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.</p>",
      "properties": {
        "Alias": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>A display name for the logical table.</p>",
          "markdownDescription": "<p>A display name for the logical table.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "DataTransforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformOperation"
          },
          "maxItems": 2048,
          "minItems": 1,
          "description": "<p>Transform operations that act on this logical table.</p>",
          "markdownDescription": "<p>Transform operations that act on this logical table.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Source": {
          "$ref": "#/definitions/LogicalTableSource"
        }
      },
      "required": [
        "Alias",
        "Source"
      ],
      "markdownDescription": "<p>A <i>logical table</i> is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogicalTableMap": {
      "type": "object",
      "maxProperties": 64,
      "minProperties": 1,
      "patternProperties": {
        "[0-9a-zA-Z-]*": {
          "$ref": "#/definitions/LogicalTable"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogicalTableSource": {
      "type": "object",
      "description": "<p>Information about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.</p>",
      "properties": {
        "PhysicalTableId": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>Physical table ID.</p>",
          "markdownDescription": "<p>Physical table ID.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [0-9a-zA-Z-]*  \nUpdate requires: No interruption"
        },
        "JoinInstruction": {
          "$ref": "#/definitions/JoinInstruction"
        },
        "DataSetArn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) for the dataset.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) for the dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Information about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OutputColumn": {
      "type": "object",
      "description": "<p>Output column.</p>",
      "properties": {
        "Type": {
          "$ref": "#/definitions/ColumnDataType"
        },
        "Description": {
          "type": "string",
          "maxLength": 500,
          "minLength": 0,
          "description": "<p>A description for a column.</p>",
          "markdownDescription": "<p>A description for a column.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        },
        "Name": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>A display name for the dataset.</p>",
          "markdownDescription": "<p>A display name for the dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Output column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PhysicalTable": {
      "type": "object",
      "description": "<p>A view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.</p>",
      "properties": {
        "RelationalTable": {
          "$ref": "#/definitions/RelationalTable"
        },
        "CustomSql": {
          "$ref": "#/definitions/CustomSql"
        },
        "S3Source": {
          "$ref": "#/definitions/S3Source"
        }
      },
      "markdownDescription": "<p>A view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PhysicalTableMap": {
      "type": "object",
      "maxProperties": 32,
      "minProperties": 1,
      "patternProperties": {
        "[0-9a-zA-Z-]*": {
          "$ref": "#/definitions/PhysicalTable"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ProjectOperation": {
      "type": "object",
      "description": "<p>A transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.</p>",
      "properties": {
        "ProjectedColumns": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "maxItems": 2000,
          "minItems": 1,
          "description": "<p>Projected columns.</p>",
          "markdownDescription": "<p>Projected columns.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ProjectedColumns"
      ],
      "markdownDescription": "<p>A transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RelationalTable": {
      "type": "object",
      "description": "<p>A physical table type for relational data sources.</p>",
      "properties": {
        "DataSourceArn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) for the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "InputColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "description": "<p>The column schema of the table.</p>",
          "markdownDescription": "<p>The column schema of the table.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Schema": {
          "type": "string",
          "maxLength": 64,
          "minLength": 0,
          "description": "<p>The schema name. This name applies to certain relational database engines.</p>",
          "markdownDescription": "<p>The schema name. This name applies to certain relational database engines.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "Catalog": {
          "type": "string",
          "description": "<p>The catalog associated with a table.</p>",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "<p>The catalog associated with a table.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Name": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>The name of the relational table.</p>",
          "markdownDescription": "<p>The name of the relational table.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns",
        "Name"
      ],
      "markdownDescription": "<p>A physical table type for relational data sources.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RenameColumnOperation": {
      "type": "object",
      "description": "<p>A transform operation that renames a column.</p>",
      "properties": {
        "NewColumnName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The new name for the column.</p>",
          "markdownDescription": "<p>The new name for the column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "ColumnName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The name of the column to be renamed.</p>",
          "markdownDescription": "<p>The name of the column to be renamed.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnName"
      ],
      "markdownDescription": "<p>A transform operation that renames a column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResourcePermission": {
      "type": "object",
      "description": "<p>Permission for the resource.</p>",
      "properties": {
        "Actions": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "maxItems": 16,
          "minItems": 1,
          "description": "<p>The IAM action to grant or revoke permissions on.</p>",
          "markdownDescription": "<p>The IAM action to grant or revoke permissions on.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Principal": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n        <ul>\n            <li>\n                <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n        <ul>\n            <li>\n                <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n                <p>The ARN of an AWS account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across AWS accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Actions",
        "Principal"
      ],
      "markdownDescription": "<p>Permission for the resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionDataSet": {
      "type": "object",
      "description": "<p>The row-level security configuration for the dataset.</p>",
      "properties": {
        "Arn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) of the permission dataset.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the permission dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Namespace": {
          "type": "string",
          "maxLength": 64,
          "minLength": 0,
          "description": "<p>The namespace associated with the row-level permissions dataset.</p>",
          "markdownDescription": "<p>The namespace associated with the row-level permissions dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 64  \nPattern: ^[a-zA-Z0-9._-]*$  \nUpdate requires: No interruption"
        },
        "PermissionPolicy": {
          "$ref": "#/definitions/RowLevelPermissionPolicy"
        },
        "FormatVersion": {
          "$ref": "#/definitions/RowLevelPermissionFormatVersion"
        }
      },
      "required": [
        "Arn",
        "PermissionPolicy"
      ],
      "markdownDescription": "<p>The row-level security configuration for the dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionPolicy": {
      "type": "string",
      "enum": [
        "GRANT_ACCESS",
        "DENY_ACCESS"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: GRANT_ACCESS | DENY_ACCESS  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionFormatVersion": {
      "type": "string",
      "enum": [
        "VERSION_1",
        "VERSION_2"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: VERSION_1 | VERSION_2  \nUpdate requires: No interruption"
    },
    "S3Source": {
      "type": "object",
      "description": "<p>A physical table type for as S3 data source.</p>",
      "properties": {
        "DataSourceArn": {
          "type": "string",
          "description": "<p>The amazon Resource Name (ARN) for the data source.</p>",
          "markdownDescription": "<p>The amazon Resource Name (ARN) for the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "InputColumns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "maxItems": 2048,
          "minItems": 1,
          "description": "<p>A physical table type for as S3 data source.</p>",
          "markdownDescription": "<p>A physical table type for as S3 data source.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "UploadSettings": {
          "$ref": "#/definitions/UploadSettings"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns"
      ],
      "markdownDescription": "<p>A physical table type for as S3 data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "description": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>",
      "properties": {
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Tag value.</p>",
          "markdownDescription": "<p>Tag value.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Tag key.</p>",
          "markdownDescription": "<p>Tag key.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "markdownDescription": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TagColumnOperation": {
      "type": "object",
      "description": "<p>A transform operation that tags a column with additional information.</p>",
      "properties": {
        "ColumnName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The column that this operation acts on.</p>",
          "markdownDescription": "<p>The column that this operation acts on.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnTag"
          },
          "maxItems": 16,
          "minItems": 1,
          "description": "<p>The dataset column tag, currently only used for geospatial type tagging. .</p>\n        <note>\n            <p>This is not tags for the AWS tagging feature. .</p>\n        </note>",
          "markdownDescription": "<p>The dataset column tag, currently only used for geospatial type tagging. .</p>\n        <note>\n            <p>This is not tags for the AWS tagging feature. .</p>\n        </note>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "Tags"
      ],
      "markdownDescription": "<p>A transform operation that tags a column with additional information.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TextQualifier": {
      "type": "string",
      "enum": [
        "DOUBLE_QUOTE",
        "SINGLE_QUOTE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DOUBLE_QUOTE | SINGLE_QUOTE  \nUpdate requires: No interruption"
    },
    "TransformOperation": {
      "type": "object",
      "description": "<p>A data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.</p>",
      "properties": {
        "TagColumnOperation": {
          "$ref": "#/definitions/TagColumnOperation"
        },
        "FilterOperation": {
          "$ref": "#/definitions/FilterOperation"
        },
        "CastColumnTypeOperation": {
          "$ref": "#/definitions/CastColumnTypeOperation"
        },
        "CreateColumnsOperation": {
          "$ref": "#/definitions/CreateColumnsOperation"
        },
        "RenameColumnOperation": {
          "$ref": "#/definitions/RenameColumnOperation"
        },
        "ProjectOperation": {
          "$ref": "#/definitions/ProjectOperation"
        }
      },
      "markdownDescription": "<p>A data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "UploadSettings": {
      "type": "object",
      "description": "<p>Information about the format for a source file or files.</p>",
      "properties": {
        "ContainsHeader": {
          "type": "boolean",
          "description": "<p>Whether the file has a header row, or the files each have a header row.</p>",
          "markdownDescription": "<p>Whether the file has a header row, or the files each have a header row.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "TextQualifier": {
          "$ref": "#/definitions/TextQualifier"
        },
        "Format": {
          "$ref": "#/definitions/FileFormat"
        },
        "StartFromRow": {
          "type": "number",
          "minimum": 1,
          "description": "<p>A row number to start reading data from.</p>",
          "markdownDescription": "<p>A row number to start reading data from.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "Delimiter": {
          "type": "string",
          "maxLength": 1,
          "minLength": 1,
          "description": "<p>The delimiter between values in the file.</p>",
          "markdownDescription": "<p>The delimiter between values in the file.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Information about the format for a source file or files.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IngestionWaitPolicy": {
      "type": "object",
      "description": "<p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>",
      "properties": {
        "WaitForSpiceIngestion": {
          "type": "boolean",
          "description": "<p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.</p>",
          "default": true,
          "markdownDescription": "<p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IngestionWaitTimeInHours": {
          "type": "number",
          "description": "<p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>",
          "minimum": 1,
          "maximum": 36,
          "default": 36,
          "markdownDescription": "<p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSetUsageConfiguration": {
      "type": "object",
      "description": "<p>The dataset usage configuration for the dataset.</p>",
      "properties": {
        "DisableUseAsDirectQuerySource": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "DisableUseAsImportedSource": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The dataset usage configuration for the dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "AwsAccountId": {
      "type": "string",
      "maxLength": 12,
      "minLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nPattern: ^[0-9]{12}$  \nUpdate requires: Replacement"
    },
    "ColumnGroups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ColumnGroup"
      },
      "maxItems": 8,
      "minItems": 1,
      "description": "<p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
      "markdownDescription": "<p>Groupings of columns that work together in certain QuickSight features. Currently, only geospatial hierarchy is supported.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ColumnLevelPermissionRules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ColumnLevelPermissionRule"
      },
      "minItems": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "DataSetId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement"
    },
    "FieldFolders": {
      "$ref": "#/definitions/FieldFolderMap"
    },
    "ImportMode": {
      "$ref": "#/definitions/DataSetImportMode"
    },
    "LogicalTableMap": {
      "$ref": "#/definitions/LogicalTableMap"
    },
    "Name": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "description": "<p>The display name for the dataset.</p>",
      "markdownDescription": "<p>The display name for the dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "Permissions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResourcePermission"
      },
      "maxItems": 64,
      "minItems": 1,
      "description": "<p>A list of resource permissions on the dataset.</p>",
      "markdownDescription": "<p>A list of resource permissions on the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "PhysicalTableMap": {
      "$ref": "#/definitions/PhysicalTableMap"
    },
    "RowLevelPermissionDataSet": {
      "$ref": "#/definitions/RowLevelPermissionDataSet"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 1,
      "description": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>",
      "markdownDescription": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "IngestionWaitPolicy": {
      "$ref": "#/definitions/IngestionWaitPolicy"
    },
    "DataSetUsageConfiguration": {
      "$ref": "#/definitions/DataSetUsageConfiguration"
    }
  },
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/ConsumedSpiceCapacityInBytes",
    "/properties/CreatedTime",
    "/properties/LastUpdatedTime",
    "/properties/OutputColumns"
  ],
  "writeOnlyProperties": [
    "/properties/FieldFolders",
    "/properties/IngestionWaitPolicy"
  ],
  "createOnlyProperties": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "primaryIdentifier": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "additionalProperties": false,
  "handlers": {
    "create": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:DescribeIngestion",
        "quicksight:CreateDataSet",
        "quicksight:PassDataSource",
        "quicksight:PassDataSet",
        "quicksight:TagResource",
        "quicksight:ListTagsForResource"
      ]
    },
    "read": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:PassDataSource",
        "quicksight:UpdateDataSet",
        "quicksight:UpdateDataSetPermissions",
        "quicksight:PassDataSet",
        "quicksight:DescribeIngestion",
        "quicksight:ListIngestions",
        "quicksight:CancelIngestion",
        "quicksight:TagResource",
        "quicksight:UntagResource",
        "quicksight:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DeleteDataSet",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeIngestion"
      ]
    },
    "list": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:ListDataSets"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "type": "string",
      "description": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
      "markdownDescription": "<p>The Amazon Resource Name (ARN) of the resource.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ConsumedSpiceCapacityInBytes": {
      "type": "number",
      "description": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.</p>",
      "markdownDescription": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "CreatedTime": {
      "type": "string",
      "description": "<p>The time that this dataset was created.</p>",
      "format": "string",
      "markdownDescription": "<p>The time that this dataset was created.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastUpdatedTime": {
      "type": "string",
      "description": "<p>The last time that this dataset was updated.</p>",
      "format": "string",
      "markdownDescription": "<p>The last time that this dataset was updated.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "OutputColumns": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/OutputColumn"
      },
      "description": "<p>The list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.</p>",
      "markdownDescription": "<p>The list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  }
}