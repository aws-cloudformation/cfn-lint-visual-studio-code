{
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "tagProperty": "/properties/Tags",
    "cloudFormationSystemTags": true
  },
  "handlers": {
    "read": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeDataSetRefreshProperties"
      ]
    },
    "create": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:DescribeIngestion",
        "quicksight:ListIngestions",
        "quicksight:CreateDataSet",
        "quicksight:PassDataSource",
        "quicksight:PassDataSet",
        "quicksight:TagResource",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeDataSetRefreshProperties",
        "quicksight:PutDataSetRefreshProperties"
      ]
    },
    "update": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DescribeDataSetPermissions",
        "quicksight:PassDataSource",
        "quicksight:UpdateDataSet",
        "quicksight:UpdateDataSetPermissions",
        "quicksight:PassDataSet",
        "quicksight:DescribeIngestion",
        "quicksight:ListIngestions",
        "quicksight:CancelIngestion",
        "quicksight:CreateFolderMembership",
        "quicksight:DeleteFolderMembership",
        "quicksight:ListFoldersForResource",
        "quicksight:TagResource",
        "quicksight:UntagResource",
        "quicksight:ListTagsForResource",
        "quicksight:PutDataSetRefreshProperties",
        "quicksight:DescribeDataSetRefreshProperties",
        "quicksight:DeleteDataSetRefreshProperties"
      ]
    },
    "list": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:ListDataSets"
      ]
    },
    "delete": {
      "permissions": [
        "quicksight:DescribeDataSet",
        "quicksight:DeleteDataSet",
        "quicksight:ListTagsForResource",
        "quicksight:DescribeIngestion",
        "quicksight:DeleteDataSetRefreshProperties",
        "quicksight:DescribeDataSetRefreshProperties"
      ]
    }
  },
  "typeName": "AWS::QuickSight::DataSet",
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/ConsumedSpiceCapacityInBytes",
    "/properties/CreatedTime",
    "/properties/LastUpdatedTime",
    "/properties/OutputColumns"
  ],
  "description": "Definition of the AWS::QuickSight::DataSet Resource Type.",
  "writeOnlyProperties": [
    "/properties/FieldFolders",
    "/properties/IngestionWaitPolicy",
    "/properties/FolderArns"
  ],
  "createOnlyProperties": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/AwsAccountId",
    "/properties/DataSetId"
  ],
  "definitions": {
    "IntegerDatasetParameter": {
      "description": "<p>An integer parameter for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        },
        "DefaultValues": {
          "$ref": "#/definitions/IntegerDatasetParameterDefaultValues"
        },
        "Id": {
          "minLength": 1,
          "description": "<p>An identifier for the integer parameter created in the dataset.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>An identifier for the integer parameter created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9-]+$  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of the integer parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The name of the integer parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "markdownDescription": "<p>An integer parameter for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionPolicy": {
      "type": "string",
      "enum": [
        "GRANT_ACCESS",
        "DENY_ACCESS"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: GRANT_ACCESS | DENY_ACCESS  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionTagRule": {
      "description": "<p>A set of rules associated with a tag.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnName": {
          "description": "<p>The column name that a tag key is assigned to.</p>",
          "type": "string",
          "markdownDescription": "<p>The column name that a tag key is assigned to.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "TagKey": {
          "minLength": 1,
          "description": "<p>The unique key for a tag.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>The unique key for a tag.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "MatchAllValue": {
          "minLength": 1,
          "description": "<p>A string that you want to use to filter by all the values in a column in the dataset and don\u2019t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>A string that you want to use to filter by all the values in a column in the dataset and don\u2019t want to list the values one by one. For example, you can use an asterisk as your match all value.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "TagMultiValueDelimiter": {
          "minLength": 0,
          "description": "<p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>",
          "type": "string",
          "maxLength": 10,
          "markdownDescription": "<p>A string that you want to use to delimit the values when you pass the values at run time. For example, you can delimit the values with a comma.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 10  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "TagKey"
      ],
      "markdownDescription": "<p>A set of rules associated with a tag.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogicalTable": {
      "description": "<p>A <i>logical table</i> is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Alias": {
          "minLength": 1,
          "description": "<p>A display name for the logical table.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>A display name for the logical table.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "DataTransforms": {
          "minItems": 1,
          "maxItems": 2048,
          "description": "<p>Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. </p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransformOperation"
          },
          "markdownDescription": "<p>Transform operations that act on this logical table. For this structure to be valid, only one of the attributes can be non-null. </p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Source": {
          "$ref": "#/definitions/LogicalTableSource"
        }
      },
      "required": [
        "Alias"
      ],
      "markdownDescription": "<p>A <i>logical table</i> is a unit that joins and that data\n            transformations operate on. A logical table has a source, which can be either a physical\n            table or result of a join. When a logical table points to a physical table, the logical\n            table acts as a mutable copy of that physical table through transform operations.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FileFormat": {
      "type": "string",
      "enum": [
        "CSV",
        "TSV",
        "CLF",
        "ELF",
        "XLSX",
        "JSON"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CSV | TSV | CLF | ELF | XLSX | JSON  \nUpdate requires: No interruption"
    },
    "IngestionWaitPolicy": {
      "description": "<p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WaitForSpiceIngestion": {
          "default": true,
          "description": "<p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.</p>",
          "type": "boolean",
          "markdownDescription": "<p>Wait for SPICE ingestion to finish to mark dataset creation/update successful. Default (true).\n  Applicable only when DataSetImportMode mode is set to SPICE.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IngestionWaitTimeInHours": {
          "default": 36,
          "description": "<p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>",
          "maximum": 36,
          "type": "number",
          "minimum": 1,
          "markdownDescription": "<p>The maximum time (in hours) to wait for Ingestion to complete. Default timeout is 36 hours.\n Applicable only when DataSetImportMode mode is set to SPICE and WaitForSpiceIngestion is set to true.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Wait policy to use when creating/updating dataset. Default is to wait for SPICE ingestion to finish with timeout of 36 hours.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StringDatasetParameter": {
      "description": "<p>A string parameter for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        },
        "DefaultValues": {
          "$ref": "#/definitions/StringDatasetParameterDefaultValues"
        },
        "Id": {
          "minLength": 1,
          "description": "<p>An identifier for the string parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>An identifier for the string parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9-]+$  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of the string parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The name of the string parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "markdownDescription": "<p>A string parameter for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "UntagColumnOperation": {
      "description": "<p>A transform operation that removes tags associated with a column.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnName": {
          "minLength": 1,
          "description": "<p>The column that this operation acts on.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The column that this operation acts on.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "TagNames": {
          "description": "<p>The column tags to remove from this column.</p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnTagName"
          },
          "markdownDescription": "<p>The column tags to remove from this column.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "TagNames"
      ],
      "markdownDescription": "<p>A transform operation that removes tags associated with a column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FilterOperation": {
      "description": "<p>A transform operation that filters rows based on a condition.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ConditionExpression": {
          "minLength": 1,
          "description": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.</p>",
          "type": "string",
          "maxLength": 4096,
          "markdownDescription": "<p>An expression that must evaluate to a Boolean value. Rows for which the expression\n            evaluates to true are kept in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 4096  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ConditionExpression"
      ],
      "markdownDescription": "<p>A transform operation that filters rows based on a condition.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnLevelPermissionRule": {
      "description": "<p>A rule defined to grant access on one or more restricted columns.\n            Each dataset can have multiple rules.\n            To create a restricted column, you add it to one or more rules.\n            Each rule must contain at least one column and at least one user or group.\n            To be able to see a restricted column, a user or group needs to be added\n            to a rule for that column.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnNames": {
          "minItems": 1,
          "description": "<p>An array of column names.</p>",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>An array of column names.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Principals": {
          "minItems": 1,
          "maxItems": 100,
          "description": "<p>An array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.</p>",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>An array of Amazon Resource Names (ARNs) for Amazon QuickSight users or groups.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>A rule defined to grant access on one or more restricted columns.\n            Each dataset can have multiple rules.\n            To create a restricted column, you add it to one or more rules.\n            Each rule must contain at least one column and at least one user or group.\n            To be able to see a restricted column, a user or group needs to be added\n            to a rule for that column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CastColumnTypeOperation": {
      "description": "<p>A transform operation that casts a column to a different type.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnName": {
          "minLength": 1,
          "description": "<p>Column name.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>Column name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        },
        "Format": {
          "minLength": 0,
          "description": "<p>When casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.</p>",
          "type": "string",
          "maxLength": 32,
          "markdownDescription": "<p>When casting a column from string to datetime type, you can supply a string in a\n            format supported by Amazon QuickSight to denote the source data format.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 32  \nUpdate requires: No interruption"
        },
        "NewColumnType": {
          "$ref": "#/definitions/ColumnDataType"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnType"
      ],
      "markdownDescription": "<p>A transform operation that casts a column to a different type.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TimeGranularity": {
      "type": "string",
      "enum": [
        "YEAR",
        "QUARTER",
        "MONTH",
        "WEEK",
        "DAY",
        "HOUR",
        "MINUTE",
        "SECOND",
        "MILLISECOND"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: YEAR | QUARTER | MONTH | WEEK | DAY | HOUR | MINUTE | SECOND | MILLISECOND  \nUpdate requires: No interruption"
    },
    "UploadSettings": {
      "description": "<p>Information about the format for a source file or files.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ContainsHeader": {
          "description": "<p>Whether the file has a header row, or the files each have a header row.</p>",
          "type": "boolean",
          "markdownDescription": "<p>Whether the file has a header row, or the files each have a header row.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "TextQualifier": {
          "$ref": "#/definitions/TextQualifier"
        },
        "Format": {
          "$ref": "#/definitions/FileFormat"
        },
        "StartFromRow": {
          "description": "<p>A row number to start reading data from.</p>",
          "type": "number",
          "minimum": 1,
          "markdownDescription": "<p>A row number to start reading data from.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "Delimiter": {
          "minLength": 1,
          "description": "<p>The delimiter between values in the file.</p>",
          "type": "string",
          "maxLength": 1,
          "markdownDescription": "<p>The delimiter between values in the file.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Information about the format for a source file or files.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CreateColumnsOperation": {
      "description": "<p>A transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Columns": {
          "minItems": 1,
          "maxItems": 128,
          "description": "<p>Calculated columns to create.</p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CalculatedColumn"
          },
          "markdownDescription": "<p>Calculated columns to create.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns"
      ],
      "markdownDescription": "<p>A transform operation that creates calculated columns. Columns created in one such\n            operation form a lexical closure.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "JoinKeyProperties": {
      "description": "<p>Properties associated with the columns participating in a join.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "UniqueKey": {
          "description": "<p>A value that indicates that a row in a table is uniquely identified by the columns in\n            a join key. This is used by Amazon QuickSight to optimize query performance.</p>",
          "type": "boolean",
          "markdownDescription": "<p>A value that indicates that a row in a table is uniquely identified by the columns in\n            a join key. This is used by Amazon QuickSight to optimize query performance.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Properties associated with the columns participating in a join.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResourcePermission": {
      "description": "<p>Permission for the resource.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Actions": {
          "minItems": 1,
          "maxItems": 20,
          "description": "<p>The IAM action to grant or revoke permissions on.</p>",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>The IAM action to grant or revoke permissions on.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Principal": {
          "minLength": 1,
          "description": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Actions",
        "Principal"
      ],
      "markdownDescription": "<p>Permission for the resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DecimalDatasetParameterDefaultValues": {
      "description": "<p>The default values of a decimal parameter.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "StaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given decimal parameter.</p>",
          "type": "array",
          "items": {
            "default": 0,
            "description": "<p>The default value for the decimal parameter.</p>",
            "type": "number",
            "markdownDescription": "<p>The default value for the decimal parameter.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given decimal parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The default values of a decimal parameter.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Status": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption"
    },
    "PhysicalTableMap": {
      "patternProperties": {
        "^[0-9a-zA-Z-]*$": {
          "$ref": "#/definitions/PhysicalTable"
        }
      },
      "maxProperties": 32,
      "additionalProperties": false,
      "type": "object",
      "minProperties": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TagColumnOperation": {
      "description": "<p>A transform operation that tags a column with additional information.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnName": {
          "minLength": 1,
          "description": "<p>The column that this operation acts on.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The column that this operation acts on.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "Tags": {
          "minItems": 1,
          "maxItems": 16,
          "description": "<p>The dataset column tag, currently only used for geospatial type tagging.</p>\n         <note>\n            <p>This is not tags for the Amazon Web Services tagging feature.</p>\n         </note>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnTag"
          },
          "markdownDescription": "<p>The dataset column tag, currently only used for geospatial type tagging.</p>\n         <note>\n            <p>This is not tags for the Amazon Web Services tagging feature.</p>\n         </note>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "Tags"
      ],
      "markdownDescription": "<p>A transform operation that tags a column with additional information.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RefreshConfiguration": {
      "description": "<p>The refresh configuration of a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "IncrementalRefresh": {
          "$ref": "#/definitions/IncrementalRefresh"
        }
      },
      "required": [
        "IncrementalRefresh"
      ],
      "markdownDescription": "<p>The refresh configuration of a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LookbackWindow": {
      "description": "<p>The lookback window setup of an incremental refresh configuration.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnName": {
          "description": "<p>The name of the lookback window column.</p>",
          "type": "string",
          "markdownDescription": "<p>The name of the lookback window column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "SizeUnit": {
          "$ref": "#/definitions/LookbackWindowSizeUnit"
        },
        "Size": {
          "default": 0,
          "description": "<p>The lookback window column size.</p>",
          "type": "number",
          "minimum": 1,
          "markdownDescription": "<p>The lookback window column size.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "Size",
        "SizeUnit"
      ],
      "markdownDescription": "<p>The lookback window setup of an incremental refresh configuration.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RelationalTable": {
      "description": "<p>A physical table type for relational data sources.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "type": "string",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) for the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "InputColumns": {
          "minItems": 1,
          "maxItems": 2048,
          "description": "<p>The column schema of the table.</p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "markdownDescription": "<p>The column schema of the table.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Schema": {
          "minLength": 0,
          "description": "<p>The schema name. This name applies to certain relational database engines.</p>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>The schema name. This name applies to certain relational database engines.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Catalog": {
          "minLength": 0,
          "description": "<p>The catalog associated with a table.</p>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>The catalog associated with a table.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of the relational table.</p>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>The name of the relational table.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns",
        "Name"
      ],
      "markdownDescription": "<p>A physical table type for relational data sources.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatasetParameterValueType": {
      "type": "string",
      "enum": [
        "MULTI_VALUED",
        "SINGLE_VALUED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: MULTI_VALUED | SINGLE_VALUED  \nUpdate requires: No interruption"
    },
    "CalculatedColumn": {
      "description": "<p>A calculated column for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnId": {
          "minLength": 1,
          "description": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>A unique ID to identify a calculated column. During a dataset update, if the column ID\n            of a calculated column matches that of an existing calculated column, Amazon QuickSight\n            preserves the existing calculated column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "ColumnName": {
          "minLength": 1,
          "description": "<p>Column name.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>Column name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "Expression": {
          "minLength": 1,
          "description": "<p>An expression that defines the calculated column.</p>",
          "type": "string",
          "maxLength": 250000,
          "markdownDescription": "<p>An expression that defines the calculated column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 250000  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnId",
        "ColumnName",
        "Expression"
      ],
      "markdownDescription": "<p>A calculated column for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSetRefreshProperties": {
      "description": "<p>The refresh properties of a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "RefreshConfiguration": {
          "$ref": "#/definitions/RefreshConfiguration"
        }
      },
      "markdownDescription": "<p>The refresh properties of a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3Source": {
      "description": "<p>A physical table type for an S3 data source.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) for the data source.</p>",
          "type": "string",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) for the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "InputColumns": {
          "minItems": 1,
          "maxItems": 2048,
          "description": "<p>A physical table type for an S3 data source.</p>\n         <note>\n            <p>For files that aren't JSON, only <code>STRING</code> data types are supported in input columns.</p>\n         </note>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "markdownDescription": "<p>A physical table type for an S3 data source.</p>\n         <note>\n            <p>For files that aren't JSON, only <code>STRING</code> data types are supported in input columns.</p>\n         </note>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "UploadSettings": {
          "$ref": "#/definitions/UploadSettings"
        }
      },
      "required": [
        "DataSourceArn",
        "InputColumns"
      ],
      "markdownDescription": "<p>A physical table type for an S3 data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FieldFolder": {
      "description": "<p>A FieldFolder element is a folder that contains fields and nested subfolders.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Description": {
          "minLength": 0,
          "description": "<p>The description for a field folder.</p>",
          "type": "string",
          "maxLength": 500,
          "markdownDescription": "<p>The description for a field folder.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        },
        "Columns": {
          "minItems": 0,
          "maxItems": 5000,
          "description": "<p>A folder has a list of columns. A column can only be in one folder.</p>",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A folder has a list of columns. A column can only be in one folder.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>A FieldFolder element is a folder that contains fields and nested subfolders.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InputColumn": {
      "description": "<p>Metadata for a column that is used as the input of a transform operation.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/InputColumnDataType"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of this column in the underlying data source.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The name of this column in the underlying data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name",
        "Type"
      ],
      "markdownDescription": "<p>Metadata for a column that is used as the input of a transform operation.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogicalTableMap": {
      "patternProperties": {
        "^[0-9a-zA-Z-]*$": {
          "$ref": "#/definitions/LogicalTable"
        }
      },
      "maxProperties": 64,
      "additionalProperties": false,
      "type": "object",
      "minProperties": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IncrementalRefresh": {
      "description": "<p>The incremental refresh configuration for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "LookbackWindow": {
          "$ref": "#/definitions/LookbackWindow"
        }
      },
      "required": [
        "LookbackWindow"
      ],
      "markdownDescription": "<p>The incremental refresh configuration for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OutputColumn": {
      "description": "<p>Output column.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/ColumnDataType"
        },
        "Description": {
          "minLength": 0,
          "description": "<p>A description for a column.</p>",
          "type": "string",
          "maxLength": 500,
          "markdownDescription": "<p>A description for a column.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        },
        "SubType": {
          "$ref": "#/definitions/ColumnDataSubType"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The display name of the column..</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The display name of the column..</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Output column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PhysicalTable": {
      "description": "<p>A view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "RelationalTable": {
          "$ref": "#/definitions/RelationalTable"
        },
        "CustomSql": {
          "$ref": "#/definitions/CustomSql"
        },
        "S3Source": {
          "$ref": "#/definitions/S3Source"
        }
      },
      "markdownDescription": "<p>A view of a data source that contains information about the shape of the data in the\n            underlying source. This is a variant type structure. For this structure to be valid,\n            only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnDataSubType": {
      "type": "string",
      "enum": [
        "FLOAT",
        "FIXED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FLOAT | FIXED  \nUpdate requires: No interruption"
    },
    "DateTimeDatasetParameterDefaultValues": {
      "description": "<p>The default values of a date time parameter.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "StaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given date time parameter.</p>",
          "type": "array",
          "items": {
            "description": "<p>The default value for the date time parameter.</p>",
            "type": "string",
            "markdownDescription": "<p>The default value for the date time parameter.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given date time parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The default values of a date time parameter.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogicalTableSource": {
      "description": "<p>Information about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "PhysicalTableId": {
          "minLength": 1,
          "description": "<p>Physical table ID.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>Physical table ID.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[0-9a-zA-Z-]*$  \nUpdate requires: No interruption"
        },
        "JoinInstruction": {
          "$ref": "#/definitions/JoinInstruction"
        },
        "DataSetArn": {
          "description": "<p>The Amazon Resource Number (ARN) of the parent dataset.</p>",
          "type": "string",
          "markdownDescription": "<p>The Amazon Resource Number (ARN) of the parent dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Information about the source of a logical table. This is a variant type structure. For\n            this structure to be valid, only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnTag": {
      "description": "<p>A tag for a column in a\n            <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html\">TagColumnOperation</a>\n            </code>\n            structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ColumnGeographicRole": {
          "$ref": "#/definitions/GeoSpatialDataRole"
        },
        "ColumnDescription": {
          "$ref": "#/definitions/ColumnDescription"
        }
      },
      "markdownDescription": "<p>A tag for a column in a\n            <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_TagColumnOperation.html\">TagColumnOperation</a>\n            </code>\n            structure. This is a\n            variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TextQualifier": {
      "type": "string",
      "enum": [
        "DOUBLE_QUOTE",
        "SINGLE_QUOTE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DOUBLE_QUOTE | SINGLE_QUOTE  \nUpdate requires: No interruption"
    },
    "ColumnDescription": {
      "description": "<p>Metadata that contains a description for a column.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Text": {
          "minLength": 0,
          "description": "<p>The text of a description for a column.</p>",
          "type": "string",
          "maxLength": 500,
          "markdownDescription": "<p>The text of a description for a column.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 500  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>Metadata that contains a description for a column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSetImportMode": {
      "type": "string",
      "enum": [
        "SPICE",
        "DIRECT_QUERY"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SPICE | DIRECT_QUERY  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionDataSet": {
      "description": "<p>Information about a dataset that contains permissions for row-level security (RLS).\n            The permissions dataset maps fields to users or groups. For more information, see\n            <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html\">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User\n                Guide</i>.</p>\n         <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is\n            not supported for new RLS datasets.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "FormatVersion": {
          "$ref": "#/definitions/RowLevelPermissionFormatVersion"
        },
        "Arn": {
          "description": "<p>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</p>",
          "type": "string",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the dataset that contains permissions for RLS.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Namespace": {
          "minLength": 0,
          "description": "<p>The namespace associated with the dataset that contains permissions for RLS.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>The namespace associated with the dataset that contains permissions for RLS.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 64  \nPattern: ^[a-zA-Z0-9._-]*$  \nUpdate requires: No interruption"
        },
        "PermissionPolicy": {
          "$ref": "#/definitions/RowLevelPermissionPolicy"
        }
      },
      "required": [
        "Arn",
        "PermissionPolicy"
      ],
      "markdownDescription": "<p>Information about a dataset that contains permissions for row-level security (RLS).\n            The permissions dataset maps fields to users or groups. For more information, see\n            <a href=\"https://docs.aws.amazon.com/quicksight/latest/user/restrict-access-to-a-data-set-using-row-level-security.html\">Using Row-Level Security (RLS) to Restrict Access to a Dataset</a> in the <i>Amazon QuickSight User\n                Guide</i>.</p>\n         <p>The option to deny permissions by setting <code>PermissionPolicy</code> to <code>DENY_ACCESS</code> is\n            not supported for new RLS datasets.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnTagName": {
      "type": "string",
      "enum": [
        "COLUMN_GEOGRAPHIC_ROLE",
        "COLUMN_DESCRIPTION"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: COLUMN_GEOGRAPHIC_ROLE | COLUMN_DESCRIPTION  \nUpdate requires: No interruption"
    },
    "RenameColumnOperation": {
      "description": "<p>A transform operation that renames a column.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "NewColumnName": {
          "minLength": 1,
          "description": "<p>The new name for the column.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The new name for the column.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "ColumnName": {
          "minLength": 1,
          "description": "<p>The name of the column to be renamed.</p>",
          "type": "string",
          "maxLength": 127,
          "markdownDescription": "<p>The name of the column to be renamed.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ColumnName",
        "NewColumnName"
      ],
      "markdownDescription": "<p>A transform operation that renames a column.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FieldFolderMap": {
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/FieldFolder"
        }
      },
      "additionalProperties": false,
      "type": "object",
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionFormatVersion": {
      "type": "string",
      "enum": [
        "VERSION_1",
        "VERSION_2"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: VERSION_1 | VERSION_2  \nUpdate requires: No interruption"
    },
    "DecimalDatasetParameter": {
      "description": "<p>A decimal parameter for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        },
        "DefaultValues": {
          "$ref": "#/definitions/DecimalDatasetParameterDefaultValues"
        },
        "Id": {
          "minLength": 1,
          "description": "<p>An identifier for the decimal parameter created in the dataset.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>An identifier for the decimal parameter created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9-]+$  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of the decimal parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The name of the decimal parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "markdownDescription": "<p>A decimal parameter for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnDataType": {
      "type": "string",
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: STRING | INTEGER | DECIMAL | DATETIME  \nUpdate requires: No interruption"
    },
    "DateTimeDatasetParameter": {
      "description": "<p>A date time parameter for a dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ValueType": {
          "$ref": "#/definitions/DatasetParameterValueType"
        },
        "TimeGranularity": {
          "$ref": "#/definitions/TimeGranularity"
        },
        "DefaultValues": {
          "$ref": "#/definitions/DateTimeDatasetParameterDefaultValues"
        },
        "Id": {
          "minLength": 1,
          "description": "<p>An identifier for the parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>An identifier for the parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9-]+$  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>The name of the date time parameter that is created in the dataset.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The name of the date time parameter that is created in the dataset.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id",
        "Name",
        "ValueType"
      ],
      "markdownDescription": "<p>A date time parameter for a dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "JoinInstruction": {
      "description": "<p>The instructions associated with a join. </p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "OnClause": {
          "minLength": 1,
          "description": "<p>The join instructions provided in the <code>ON</code> clause of a join.</p>",
          "type": "string",
          "maxLength": 512,
          "markdownDescription": "<p>The join instructions provided in the <code>ON</code> clause of a join.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption"
        },
        "Type": {
          "$ref": "#/definitions/JoinType"
        },
        "LeftJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        },
        "LeftOperand": {
          "minLength": 1,
          "description": "<p>The operand on the left side of a join.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>The operand on the left side of a join.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[0-9a-zA-Z-]*$  \nUpdate requires: No interruption"
        },
        "RightOperand": {
          "minLength": 1,
          "description": "<p>The operand on the right side of a join.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>The operand on the right side of a join.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[0-9a-zA-Z-]*$  \nUpdate requires: No interruption"
        },
        "RightJoinKeyProperties": {
          "$ref": "#/definitions/JoinKeyProperties"
        }
      },
      "required": [
        "LeftOperand",
        "OnClause",
        "RightOperand",
        "Type"
      ],
      "markdownDescription": "<p>The instructions associated with a join. </p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "JoinType": {
      "type": "string",
      "enum": [
        "INNER",
        "OUTER",
        "LEFT",
        "RIGHT"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: INNER | OUTER | LEFT | RIGHT  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionTagConfiguration": {
      "description": "<p>The configuration of tags on a dataset to set row-level security. </p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "TagRules": {
          "minItems": 1,
          "maxItems": 50,
          "description": "<p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/RowLevelPermissionTagRule"
          },
          "markdownDescription": "<p>A set of rules associated with row-level security, such as the tag names and columns that they are assigned to.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "TagRuleConfigurations": {
          "minItems": 1,
          "maxItems": 50,
          "description": "<p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>",
          "type": "array",
          "items": {
            "minItems": 1,
            "maxItems": 50,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string",
              "maxLength": 128,
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
            },
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of tag configuration rules to apply to a dataset. All tag configurations have the OR condition. Tags within each tile will be joined (AND). At least one rule in this structure must have all tag values assigned to it to apply Row-level security (RLS) to the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "TagRules"
      ],
      "markdownDescription": "<p>The configuration of tags on a dataset to set row-level security. </p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformOperation": {
      "description": "<p>A data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "TagColumnOperation": {
          "$ref": "#/definitions/TagColumnOperation"
        },
        "RenameColumnOperation": {
          "$ref": "#/definitions/RenameColumnOperation"
        },
        "UntagColumnOperation": {
          "$ref": "#/definitions/UntagColumnOperation"
        },
        "OverrideDatasetParameterOperation": {
          "$ref": "#/definitions/OverrideDatasetParameterOperation"
        },
        "FilterOperation": {
          "$ref": "#/definitions/FilterOperation"
        },
        "CastColumnTypeOperation": {
          "$ref": "#/definitions/CastColumnTypeOperation"
        },
        "CreateColumnsOperation": {
          "$ref": "#/definitions/CreateColumnsOperation"
        },
        "ProjectOperation": {
          "$ref": "#/definitions/ProjectOperation"
        }
      },
      "markdownDescription": "<p>A data transformation on a logical table. This is a variant type structure. For this\n            structure to be valid, only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InputColumnDataType": {
      "type": "string",
      "enum": [
        "STRING",
        "INTEGER",
        "DECIMAL",
        "DATETIME",
        "BIT",
        "BOOLEAN",
        "JSON"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: STRING | INTEGER | DECIMAL | DATETIME | BIT | BOOLEAN | JSON  \nUpdate requires: No interruption"
    },
    "GeoSpatialColumnGroup": {
      "description": "<p>Geospatial column group that denotes a hierarchy.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Columns": {
          "minItems": 1,
          "maxItems": 16,
          "description": "<p>Columns in this hierarchy.</p>",
          "type": "array",
          "items": {
            "minLength": 1,
            "type": "string",
            "maxLength": 127,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>Columns in this hierarchy.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "CountryCode": {
          "$ref": "#/definitions/GeoSpatialCountryCode"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>A display name for the hierarchy.</p>",
          "type": "string",
          "maxLength": 64,
          "markdownDescription": "<p>A display name for the hierarchy.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns",
        "Name"
      ],
      "markdownDescription": "<p>Geospatial column group that denotes a hierarchy.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GeoSpatialCountryCode": {
      "type": "string",
      "enum": [
        "US"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: US  \nUpdate requires: No interruption"
    },
    "OverrideDatasetParameterOperation": {
      "description": "<p>A transform operation that overrides the dataset parameter values that are defined in another dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "NewDefaultValues": {
          "$ref": "#/definitions/NewDefaultValues"
        },
        "ParameterName": {
          "minLength": 1,
          "description": "<p>The name of the parameter to be overridden with different values.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The name of the parameter to be overridden with different values.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        },
        "NewParameterName": {
          "minLength": 1,
          "description": "<p>The new name for the parameter.</p>",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "<p>The new name for the parameter.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-zA-Z0-9]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ParameterName"
      ],
      "markdownDescription": "<p>A transform operation that overrides the dataset parameter values that are defined in another dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GeoSpatialDataRole": {
      "type": "string",
      "enum": [
        "COUNTRY",
        "STATE",
        "COUNTY",
        "CITY",
        "POSTCODE",
        "LONGITUDE",
        "LATITUDE",
        "POLITICAL1",
        "CENSUS_TRACT",
        "CENSUS_BLOCK_GROUP",
        "CENSUS_BLOCK"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: COUNTRY | STATE | COUNTY | CITY | POSTCODE | LONGITUDE | LATITUDE | POLITICAL1 | CENSUS_TRACT | CENSUS_BLOCK_GROUP | CENSUS_BLOCK  \nUpdate requires: No interruption"
    },
    "NewDefaultValues": {
      "description": "<p>The configuration that overrides the existing default values for a dataset parameter that is inherited from another dataset.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DecimalStaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given decimal parameter.</p>",
          "type": "array",
          "items": {
            "default": 0,
            "description": "<p>The default value for the decimal parameter.</p>",
            "type": "number",
            "markdownDescription": "<p>The default value for the decimal parameter.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given decimal parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "IntegerStaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given integer parameter.</p>",
          "type": "array",
          "items": {
            "default": 0,
            "description": "<p>The default value for the integer parameter.</p>",
            "type": "number",
            "markdownDescription": "<p>The default value for the integer parameter.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given integer parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "StringStaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given string parameter.</p>",
          "type": "array",
          "items": {
            "minLength": 0,
            "description": "<p>The default value for the string parameter.</p>",
            "type": "string",
            "maxLength": 512,
            "markdownDescription": "<p>The default value for the string parameter.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given string parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "DateTimeStaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given date time parameter.</p>",
          "type": "array",
          "items": {
            "description": "<p>The default value for the date time parameter.</p>",
            "type": "string",
            "markdownDescription": "<p>The default value for the date time parameter.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given date time parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The configuration that overrides the existing default values for a dataset parameter that is inherited from another dataset.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatasetParameter": {
      "description": "<p>A dataset parameter.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "IntegerDatasetParameter": {
          "$ref": "#/definitions/IntegerDatasetParameter"
        },
        "DateTimeDatasetParameter": {
          "$ref": "#/definitions/DateTimeDatasetParameter"
        },
        "DecimalDatasetParameter": {
          "$ref": "#/definitions/DecimalDatasetParameter"
        },
        "StringDatasetParameter": {
          "$ref": "#/definitions/StringDatasetParameter"
        }
      },
      "markdownDescription": "<p>A dataset parameter.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntegerDatasetParameterDefaultValues": {
      "description": "<p>The default values of an integer parameter.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "StaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given integer parameter.</p>",
          "type": "array",
          "items": {
            "default": 0,
            "description": "<p>The default value for the integer parameter.</p>",
            "type": "number",
            "markdownDescription": "<p>The default value for the integer parameter.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given integer parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The default values of an integer parameter.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSetUsageConfiguration": {
      "description": "<p>The usage configuration to apply to child datasets that reference this dataset as a source.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DisableUseAsImportedSource": {
          "default": false,
          "description": "<p>An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.</p>",
          "type": "boolean",
          "markdownDescription": "<p>An option that controls whether a child dataset that's stored in QuickSight can use this dataset as a source.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "DisableUseAsDirectQuerySource": {
          "default": false,
          "description": "<p>An option that controls whether a child dataset of a direct query can use this dataset as a source.</p>",
          "type": "boolean",
          "markdownDescription": "<p>An option that controls whether a child dataset of a direct query can use this dataset as a source.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The usage configuration to apply to child datasets that reference this dataset as a source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StringDatasetParameterDefaultValues": {
      "description": "<p>The default values of a string parameter.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "StaticValues": {
          "minItems": 0,
          "maxItems": 32,
          "description": "<p>A list of static default values for a given string parameter.</p>",
          "type": "array",
          "items": {
            "minLength": 0,
            "description": "<p>The default value for the string parameter.</p>",
            "type": "string",
            "maxLength": 512,
            "markdownDescription": "<p>The default value for the string parameter.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>A list of static default values for a given string parameter.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "<p>The default values of a string parameter.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LookbackWindowSizeUnit": {
      "type": "string",
      "enum": [
        "HOUR",
        "DAY",
        "WEEK"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: HOUR | DAY | WEEK  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Value": {
          "minLength": 1,
          "description": "<p>Tag value.</p>",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "<p>Tag value.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Key": {
          "minLength": 1,
          "description": "<p>Tag key.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>Tag key.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "markdownDescription": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnGroup": {
      "description": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "GeoSpatialColumnGroup": {
          "$ref": "#/definitions/GeoSpatialColumnGroup"
        }
      },
      "markdownDescription": "<p>Groupings of columns that work together in certain Amazon QuickSight features. This is\n            a variant type structure. For this structure to be valid, only one of the attributes can\n            be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomSql": {
      "description": "<p>A physical table type built from the results of the custom SQL query.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "DataSourceArn": {
          "description": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
          "type": "string",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "SqlQuery": {
          "minLength": 1,
          "description": "<p>The SQL query.</p>",
          "type": "string",
          "maxLength": 168000,
          "markdownDescription": "<p>The SQL query.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 168000  \nUpdate requires: No interruption"
        },
        "Columns": {
          "minItems": 1,
          "maxItems": 2048,
          "description": "<p>The column schema from the SQL query result set.</p>",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputColumn"
          },
          "markdownDescription": "<p>The column schema from the SQL query result set.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Name": {
          "minLength": 1,
          "description": "<p>A display name for the SQL query result.</p>",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "<p>A display name for the SQL query result.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Columns",
        "DataSourceArn",
        "Name",
        "SqlQuery"
      ],
      "markdownDescription": "<p>A physical table type built from the results of the custom SQL query.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ProjectOperation": {
      "description": "<p>A transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.</p>",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ProjectedColumns": {
          "minItems": 1,
          "maxItems": 2000,
          "description": "<p>Projected columns.</p>",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "<p>Projected columns.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ProjectedColumns"
      ],
      "markdownDescription": "<p>A transform operation that projects columns. Operations that come after a projection\n            can only refer to projected columns.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "PhysicalTableMap": {
      "$ref": "#/definitions/PhysicalTableMap"
    },
    "FieldFolders": {
      "$ref": "#/definitions/FieldFolderMap"
    },
    "DataSetId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement"
    },
    "FolderArns": {
      "minItems": 0,
      "maxItems": 10,
      "description": "<p>When you create the dataset, Amazon QuickSight adds the dataset to these folders.</p>",
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "markdownDescription": "<p>When you create the dataset, Amazon QuickSight adds the dataset to these folders.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "RowLevelPermissionDataSet": {
      "$ref": "#/definitions/RowLevelPermissionDataSet"
    },
    "DataSetRefreshProperties": {
      "$ref": "#/definitions/DataSetRefreshProperties"
    },
    "RowLevelPermissionTagConfiguration": {
      "$ref": "#/definitions/RowLevelPermissionTagConfiguration"
    },
    "IngestionWaitPolicy": {
      "$ref": "#/definitions/IngestionWaitPolicy"
    },
    "ColumnLevelPermissionRules": {
      "minItems": 1,
      "description": "<p>A set of one or more definitions of a <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a>\n            </code>.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ColumnLevelPermissionRule"
      },
      "markdownDescription": "<p>A set of one or more definitions of a <code>\n               <a href=\"https://docs.aws.amazon.com/quicksight/latest/APIReference/API_ColumnLevelPermissionRule.html\">ColumnLevelPermissionRule</a>\n            </code>.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Name": {
      "minLength": 1,
      "description": "<p>The display name for the dataset.</p>",
      "type": "string",
      "maxLength": 128,
      "markdownDescription": "<p>The display name for the dataset.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "ColumnGroups": {
      "minItems": 1,
      "maxItems": 8,
      "description": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ColumnGroup"
      },
      "markdownDescription": "<p>Groupings of columns that work together in certain Amazon QuickSight features. Currently, only geospatial hierarchy is supported.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ImportMode": {
      "$ref": "#/definitions/DataSetImportMode"
    },
    "DatasetParameters": {
      "minItems": 0,
      "maxItems": 32,
      "description": "<p>The parameter declarations of the dataset.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/DatasetParameter"
      },
      "markdownDescription": "<p>The parameter declarations of the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "LogicalTableMap": {
      "$ref": "#/definitions/LogicalTableMap"
    },
    "AwsAccountId": {
      "minLength": 12,
      "type": "string",
      "maxLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nPattern: ^[0-9]{12}$  \nUpdate requires: Replacement"
    },
    "DataSetUsageConfiguration": {
      "$ref": "#/definitions/DataSetUsageConfiguration"
    },
    "Permissions": {
      "minItems": 1,
      "maxItems": 64,
      "description": "<p>A list of resource permissions on the dataset.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResourcePermission"
      },
      "markdownDescription": "<p>A list of resource permissions on the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tags": {
      "minItems": 1,
      "maxItems": 200,
      "description": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "<p>Contains a map of the key-value pairs for the resource tag or tags assigned to the dataset.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "attributes": {
    "CreatedTime": {
      "format": "string",
      "description": "<p>The time that this dataset was created.</p>",
      "type": "string",
      "markdownDescription": "<p>The time that this dataset was created.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastUpdatedTime": {
      "format": "string",
      "description": "<p>The last time that this dataset was updated.</p>",
      "type": "string",
      "markdownDescription": "<p>The last time that this dataset was updated.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ConsumedSpiceCapacityInBytes": {
      "default": 0,
      "description": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.</p>",
      "type": "number",
      "markdownDescription": "<p>The amount of SPICE capacity used by this dataset. This is 0 if the dataset isn't\n            imported into SPICE.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "OutputColumns": {
      "description": "<p>The list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.</p>",
      "type": "array",
      "items": {
        "$ref": "#/definitions/OutputColumn"
      },
      "markdownDescription": "<p>The list of columns after all transforms. These columns are available in templates,\n            analyses, and dashboards.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Arn": {
      "description": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
      "type": "string",
      "markdownDescription": "<p>The Amazon Resource Name (ARN) of the resource.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}