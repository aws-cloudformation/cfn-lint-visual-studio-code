{
  "typeName": "AWS::RedshiftServerless::Workgroup",
  "description": "Definition of AWS::RedshiftServerless::Workgroup Resource Type",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-redshift-serverless",
  "definitions": {
    "ConfigParameter": {
      "type": "object",
      "properties": {
        "ParameterKey": {
          "type": "string",
          "maxLength": 255,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "ParameterValue": {
          "type": "string",
          "maxLength": 15000,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 15000  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "VpcEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VpcEndpoint"
          },
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NetworkInterface": {
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "SubnetId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "PrivateIpAddress": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "AvailabilityZone": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcEndpoint": {
      "type": "object",
      "properties": {
        "VpcEndpointId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "VpcId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "NetworkInterfaces": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NetworkInterface"
          },
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Workgroup": {
      "type": "object",
      "properties": {
        "WorkgroupId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "WorkgroupArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "WorkgroupName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 3,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^[a-z0-9-]*$  \nUpdate requires: No interruption"
        },
        "NamespaceName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 3,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^[a-z0-9-]+$  \nUpdate requires: No interruption"
        },
        "BaseCapacity": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "MaxCapacity": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "EnhancedVpcRouting": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ConfigParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConfigParameter"
          },
          "uniqueItems": true,
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SecurityGroupIds": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^sg-[0-9a-fA-F]{8,}$  \nUpdate requires: No interruption"
          },
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SubnetIds": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 255,
            "minLength": 0,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^subnet-[0-9a-fA-F]{8,}$  \nUpdate requires: No interruption"
          },
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Status": {
          "$ref": "#/definitions/WorkgroupStatus"
        },
        "Endpoint": {
          "$ref": "#/definitions/Endpoint"
        },
        "PubliclyAccessible": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "CreationDate": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "WorkgroupStatus": {
      "type": "string",
      "enum": [
        "CREATING",
        "AVAILABLE",
        "MODIFYING",
        "DELETING"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATING | AVAILABLE | MODIFYING | DELETING  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "WorkgroupName": {
      "description": "The name of the workgroup.",
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "markdownDescription": "The name of the workgroup.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^(?=^[a-z0-9-]+$).{3,64}$  \nUpdate requires: Replacement"
    },
    "NamespaceName": {
      "description": "The namespace the workgroup is associated with.",
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "markdownDescription": "The namespace the workgroup is associated with.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^(?=^[a-z0-9-]+$).{3,64}$  \nUpdate requires: Replacement"
    },
    "BaseCapacity": {
      "description": "The base compute capacity of the workgroup in Redshift Processing Units (RPUs).",
      "type": "integer",
      "markdownDescription": "The base compute capacity of the workgroup in Redshift Processing Units (RPUs).\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "MaxCapacity": {
      "description": "The max compute capacity of the workgroup in Redshift Processing Units (RPUs).",
      "type": "integer",
      "markdownDescription": "The max compute capacity of the workgroup in Redshift Processing Units (RPUs).\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "EnhancedVpcRouting": {
      "description": "The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.",
      "type": "boolean",
      "default": false,
      "markdownDescription": "The value that specifies whether to enable enhanced virtual private cloud (VPC) routing, which forces Amazon Redshift Serverless to route traffic through your VPC.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "ConfigParameters": {
      "description": "A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, max_query_execution_time, and require_ssl.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/ConfigParameter"
      },
      "minItems": 1,
      "markdownDescription": "A list of parameters to set for finer control over a database. Available options are datestyle, enable_user_activity_logging, query_group, search_path, max_query_execution_time, and require_ssl.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SecurityGroupIds": {
      "description": "A list of security group IDs to associate with the workgroup.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string",
        "maxLength": 255,
        "minLength": 0,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^sg-[0-9a-fA-F]{8,}$  \nUpdate requires: No interruption"
      },
      "maxItems": 32,
      "minItems": 1,
      "markdownDescription": "A list of security group IDs to associate with the workgroup.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SubnetIds": {
      "description": "A list of subnet IDs the workgroup is associated with.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string",
        "maxLength": 255,
        "minLength": 0,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^subnet-[0-9a-fA-F]{8,}$  \nUpdate requires: No interruption"
      },
      "maxItems": 32,
      "minItems": 1,
      "markdownDescription": "A list of subnet IDs the workgroup is associated with.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "PubliclyAccessible": {
      "description": "A value that specifies whether the workgroup can be accessible from a public network.",
      "type": "boolean",
      "default": false,
      "markdownDescription": "A value that specifies whether the workgroup can be accessible from a public network.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "Port": {
      "description": "The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.",
      "type": "integer",
      "markdownDescription": "The custom port to use when connecting to a workgroup. Valid port ranges are 5431-5455 and 8191-8215. The default is 5439.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "The map of the key-value pairs used to tag the workgroup.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 0,
      "markdownDescription": "The map of the key-value pairs used to tag the workgroup.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "tagging": {
    "taggable": true
  },
  "additionalProperties": false,
  "required": [
    "WorkgroupName"
  ],
  "createOnlyProperties": [
    "/properties/WorkgroupName",
    "/properties/NamespaceName"
  ],
  "readOnlyProperties": [
    "/properties/Workgroup",
    "/properties/Workgroup/WorkgroupId",
    "/properties/Workgroup/WorkgroupArn",
    "/properties/Workgroup/WorkgroupName",
    "/properties/Workgroup/NamespaceName",
    "/properties/Workgroup/BaseCapacity",
    "/properties/Workgroup/MaxCapacity",
    "/properties/Workgroup/EnhancedVpcRouting",
    "/properties/Workgroup/ConfigParameters/*/ParameterKey",
    "/properties/Workgroup/ConfigParameters/*/ParameterValue",
    "/properties/Workgroup/SecurityGroupIds",
    "/properties/Workgroup/SubnetIds",
    "/properties/Workgroup/Status",
    "/properties/Workgroup/Endpoint/Address",
    "/properties/Workgroup/Endpoint/Port",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/VpcEndpointId",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/VpcId",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/NetworkInterfaces/*/NetworkInterfaceId",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/NetworkInterfaces/*/SubnetId",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/NetworkInterfaces/*/PrivateIpAddress",
    "/properties/Workgroup/Endpoint/VpcEndpoints/*/NetworkInterfaces/*/AvailabilityZone",
    "/properties/Workgroup/PubliclyAccessible",
    "/properties/Workgroup/CreationDate"
  ],
  "writeOnlyProperties": [
    "/properties/BaseCapacity",
    "/properties/MaxCapacity",
    "/properties/ConfigParameters",
    "/properties/SecurityGroupIds",
    "/properties/SubnetIds",
    "/properties/Tags",
    "/properties/Tags/*/Key",
    "/properties/Tags/*/Value"
  ],
  "primaryIdentifier": [
    "/properties/WorkgroupName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSubnets",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "redshift-serverless:CreateNamespace",
        "redshift-serverless:CreateWorkgroup",
        "redshift-serverless:GetWorkgroup"
      ]
    },
    "read": {
      "permissions": [
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSubnets",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "redshift-serverless:GetWorkgroup"
      ]
    },
    "update": {
      "permissions": [
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSubnets",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "redshift-serverless:ListTagsForResource",
        "redshift-serverless:TagResource",
        "redshift-serverless:UntagResource",
        "redshift-serverless:GetWorkgroup",
        "redshift-serverless:UpdateWorkgroup"
      ]
    },
    "delete": {
      "permissions": [
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSubnets",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "redshift-serverless:GetWorkgroup",
        "redshift-serverless:DeleteWorkgroup"
      ]
    },
    "list": {
      "permissions": [
        "ec2:DescribeVpcAttribute",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeAddresses",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeSubnets",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAvailabilityZones",
        "redshift-serverless:ListWorkgroups"
      ]
    }
  },
  "attributes": {
    "Workgroup": {
      "description": "Definition for workgroup resource",
      "$ref": "#/definitions/Workgroup",
      "markdownDescription": "Definition for workgroup resource\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  }
}