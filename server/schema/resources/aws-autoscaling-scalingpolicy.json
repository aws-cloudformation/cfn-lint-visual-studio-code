{
  "typeName": "AWS::AutoScaling::ScalingPolicy",
  "description": "The AWS::AutoScaling::ScalingPolicy resource specifies an Amazon EC2 Auto Scaling scaling policy so that the Auto Scaling group can scale the number of instances available for your application.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-autoscaling.git",
  "definitions": {
    "PredictiveScalingMetricSpecification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomizedCapacityMetricSpecification": {
          "$ref": "#/definitions/PredictiveScalingCustomizedCapacityMetric"
        },
        "CustomizedLoadMetricSpecification": {
          "$ref": "#/definitions/PredictiveScalingCustomizedLoadMetric"
        },
        "CustomizedScalingMetricSpecification": {
          "$ref": "#/definitions/PredictiveScalingCustomizedScalingMetric"
        },
        "PredefinedLoadMetricSpecification": {
          "$ref": "#/definitions/PredictiveScalingPredefinedLoadMetric"
        },
        "TargetValue": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "PredefinedScalingMetricSpecification": {
          "$ref": "#/definitions/PredictiveScalingPredefinedScalingMetric"
        },
        "PredefinedMetricPairSpecification": {
          "$ref": "#/definitions/PredictiveScalingPredefinedMetricPair"
        }
      },
      "required": [
        "TargetValue"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricSpecifications": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/PredictiveScalingMetricSpecification"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "MaxCapacityBreachBehavior": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "MaxCapacityBuffer": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "SchedulingBufferTime": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Mode": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricSpecifications"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomizedMetricSpecification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricName": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Dimensions": {
          "type": "array",
          "insertionOrder": false,
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Statistic": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Unit": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Namespace": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricName",
        "Statistic",
        "Namespace"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TargetTrackingConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CustomizedMetricSpecification": {
          "$ref": "#/definitions/CustomizedMetricSpecification"
        },
        "TargetValue": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "DisableScaleIn": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "PredefinedMetricSpecification": {
          "$ref": "#/definitions/PredefinedMetricSpecification"
        }
      },
      "required": [
        "TargetValue"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingPredefinedLoadMetric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ResourceLabel": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "PredefinedMetricType": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "PredefinedMetricType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StepAdjustment": {
      "type": "object",
      "additionalProperties": false,
      "insertionOrder": false,
      "properties": {
        "MetricIntervalUpperBound": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "MetricIntervalLowerBound": {
          "type": "number",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "ScalingAdjustment": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ScalingAdjustment"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingPredefinedMetricPair": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ResourceLabel": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "PredefinedMetricType": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "PredefinedMetricType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredefinedMetricSpecification": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ResourceLabel": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "PredefinedMetricType": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "PredefinedMetricType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricDimension": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Name": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Name"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingPredefinedScalingMetric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ResourceLabel": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "PredefinedMetricType": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "PredefinedMetricType"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingCustomizedLoadMetric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricDataQueries": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/MetricDataQuery"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricDataQueries"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingCustomizedCapacityMetric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricDataQueries": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/MetricDataQuery"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricDataQueries"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PredictiveScalingCustomizedScalingMetric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricDataQueries": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/MetricDataQuery"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricDataQueries"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Metric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricName": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Dimensions": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/MetricDimension"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Namespace": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricName",
        "Namespace"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricStat": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Metric": {
          "$ref": "#/definitions/Metric"
        },
        "Stat": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Unit": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Stat",
        "Metric"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricDataQuery": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Label": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "MetricStat": {
          "$ref": "#/definitions/MetricStat"
        },
        "Id": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "ReturnData": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Expression": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "MetricAggregationType": {
      "description": "The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling.",
      "type": "string",
      "markdownDescription": "The aggregation type for the CloudWatch metrics. The valid values are Minimum, Maximum, and Average. If the aggregation type is null, the value is treated as Average. Valid only if the policy type is StepScaling.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "PolicyType": {
      "description": "One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling",
      "type": "string",
      "markdownDescription": "One of the following policy types: TargetTrackingScaling, StepScaling, SimpleScaling (default), PredictiveScaling\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "PredictiveScalingConfiguration": {
      "description": "A predictive scaling policy. Includes support for predefined metrics only.",
      "$ref": "#/definitions/PredictiveScalingConfiguration",
      "markdownDescription": "A predictive scaling policy. Includes support for predefined metrics only.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "ScalingAdjustment": {
      "description": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)",
      "type": "integer",
      "markdownDescription": "The amount by which to scale, based on the specified adjustment type. A positive value adds to the current capacity while a negative number removes from the current capacity. For exact capacity, you must specify a positive value. Required if the policy type is SimpleScaling. (Not used with any other policy type.)\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Cooldown": {
      "description": "The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.",
      "type": "string",
      "markdownDescription": "The duration of the policy's cooldown period, in seconds. When a cooldown period is specified here, it overrides the default cooldown period defined for the Auto Scaling group.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "StepAdjustments": {
      "description": "A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/StepAdjustment"
      },
      "markdownDescription": "A set of adjustments that enable you to scale based on the size of the alarm breach. Required if the policy type is StepScaling. (Not used with any other policy type.)\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AutoScalingGroupName": {
      "description": "The name of the Auto Scaling group.",
      "type": "string",
      "markdownDescription": "The name of the Auto Scaling group.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "MinAdjustmentMagnitude": {
      "description": "The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.",
      "type": "integer",
      "markdownDescription": "The minimum value to scale by when the adjustment type is PercentChangeInCapacity. For example, suppose that you create a step scaling policy to scale out an Auto Scaling group by 25 percent and you specify a MinAdjustmentMagnitude of 2. If the group has 4 instances and the scaling policy is performed, 25 percent of 4 is 1. However, because you specified a MinAdjustmentMagnitude of 2, Amazon EC2 Auto Scaling scales out the group by 2 instances.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "TargetTrackingConfiguration": {
      "description": "A target tracking scaling policy. Includes support for predefined or customized metrics.",
      "$ref": "#/definitions/TargetTrackingConfiguration",
      "markdownDescription": "A target tracking scaling policy. Includes support for predefined or customized metrics.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "EstimatedInstanceWarmup": {
      "description": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling.",
      "type": "integer",
      "markdownDescription": "The estimated time, in seconds, until a newly launched instance can contribute to the CloudWatch metrics. If not provided, the default is to use the value from the default cooldown period for the Auto Scaling group. Valid only if the policy type is TargetTrackingScaling or StepScaling.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "AdjustmentType": {
      "description": "Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.",
      "type": "string",
      "markdownDescription": "Specifies how the scaling adjustment is interpreted. The valid values are ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "AutoScalingGroupName"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "readOnlyProperties": [
    "/properties/PolicyName",
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/AutoScalingGroupName"
  ],
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "handlers": {
    "create": {
      "permissions": [
        "autoscaling:DescribePolicies",
        "autoscaling:PutScalingPolicy",
        "cloudwatch:GetMetricData"
      ]
    },
    "read": {
      "permissions": [
        "autoscaling:DescribePolicies"
      ]
    },
    "update": {
      "permissions": [
        "autoscaling:DescribePolicies",
        "autoscaling:PutScalingPolicy",
        "cloudwatch:GetMetricData"
      ]
    },
    "delete": {
      "permissions": [
        "autoscaling:DeletePolicy",
        "autoscaling:DescribePolicies"
      ]
    },
    "list": {
      "permissions": [
        "autoscaling:DescribePolicies"
      ]
    }
  },
  "attributes": {
    "PolicyName": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Arn": {
      "description": "The ARN of the AutoScaling scaling policy",
      "type": "string",
      "markdownDescription": "The ARN of the AutoScaling scaling policy\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}