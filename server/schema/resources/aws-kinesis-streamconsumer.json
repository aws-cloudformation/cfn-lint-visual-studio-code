{
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-kinesis.git",
  "tagging": {
    "permissions": [
      "kinesis:TagResource",
      "kinesis:UntagResource",
      "kinesis:ListTagsForResource"
    ],
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": false,
    "tagProperty": "/properties/Tags",
    "cloudFormationSystemTags": false
  },
  "handlers": {
    "read": {
      "permissions": [
        "kinesis:DescribeStreamConsumer",
        "kinesis:ListTagsForResource"
      ]
    },
    "create": {
      "permissions": [
        "kinesis:RegisterStreamConsumer",
        "kinesis:DescribeStreamConsumer",
        "kinesis:TagResource"
      ]
    },
    "list": {
      "permissions": [
        "kinesis:ListStreamConsumers"
      ]
    },
    "delete": {
      "permissions": [
        "kinesis:DeregisterStreamConsumer",
        "kinesis:DescribeStreamConsumer",
        "kinesis:UntagResource"
      ]
    }
  },
  "typeName": "AWS::Kinesis::StreamConsumer",
  "readOnlyProperties": [
    "/properties/ConsumerARN",
    "/properties/ConsumerStatus",
    "/properties/ConsumerCreationTimestamp"
  ],
  "description": "Resource Type definition for AWS::Kinesis::StreamConsumer",
  "createOnlyProperties": [
    "/properties/ConsumerName",
    "/properties/StreamARN",
    "/properties/Tags"
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/ConsumerARN"
  ],
  "definitions": {
    "Tag": {
      "description": "An arbitrary set of tags (key-value pairs) to associate with the Kinesis consumer.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Value": {
          "minLength": 0,
          "description": "The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "maxLength": 255,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
        },
        "Key": {
          "minLength": 1,
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "markdownDescription": "An arbitrary set of tags (key-value pairs) to associate with the Kinesis consumer.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "ConsumerCreationTimestamp": {
      "description": "Timestamp when the consumer was created.",
      "type": "string",
      "markdownDescription": "Timestamp when the consumer was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ConsumerName": {
      "minLength": 1,
      "description": "The name of the Kinesis Stream Consumer. For a given Kinesis data stream, each consumer must have a unique name. However, consumer names don't have to be unique across data streams.",
      "type": "string",
      "maxLength": 128,
      "markdownDescription": "The name of the Kinesis Stream Consumer. For a given Kinesis data stream, each consumer must have a unique name. However, consumer names don't have to be unique across data streams.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9_.-]+$  \nUpdate requires: Replacement\n"
    },
    "ConsumerARN": {
      "description": "The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.",
      "type": "string",
      "markdownDescription": "The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ConsumerStatus": {
      "description": "A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE",
      "type": "string",
      "markdownDescription": "A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "StreamARN": {
      "minLength": 1,
      "description": "The Amazon resource name (ARN) of the Kinesis data stream that you want to register the consumer with.",
      "type": "string",
      "maxLength": 2048,
      "markdownDescription": "The Amazon resource name (ARN) of the Kinesis data stream that you want to register the consumer with.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:aws.*:kinesis:.*:\\d{12}:stream/\\S+  \nUpdate requires: Replacement\n"
    },
    "Tags": {
      "maxItems": 50,
      "uniqueItems": false,
      "description": "An arbitrary set of tags (key\u2013value pairs) to associate with the Kinesis consumer.",
      "insertionOrder": false,
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An arbitrary set of tags (key\u2013value pairs) to associate with the Kinesis consumer.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: Replacement\n"
    }
  },
  "required": [
    "ConsumerName",
    "StreamARN"
  ],
  "attributes": {
    "ConsumerCreationTimestamp": {
      "description": "Timestamp when the consumer was created.",
      "type": "string",
      "markdownDescription": "Timestamp when the consumer was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ConsumerARN": {
      "description": "The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.",
      "type": "string",
      "markdownDescription": "The ARN returned by Kinesis Data Streams when you registered the consumer. If you don't know the ARN of the consumer that you want to deregister, you can use the ListStreamConsumers operation to get a list of the descriptions of all the consumers that are currently registered with a given data stream. The description of a consumer contains its ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "ConsumerStatus": {
      "description": "A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE",
      "type": "string",
      "markdownDescription": "A consumer can't read data while in the CREATING or DELETING states. Valid Values: CREATING | DELETING | ACTIVE\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}