{
  "typeName": "AWS::WorkSpacesWeb::SessionLogger",
  "description": "Definition of AWS::WorkSpacesWeb::SessionLogger Resource Type",
  "definitions": {
    "EncryptionContextMap": {
      "type": "object",
      "patternProperties": {
        "^[\\s\\S]*$": {
          "type": "string",
          "maxLength": 131072,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 131072  \nPattern: ^[\\s\\S]*$  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Event": {
      "type": "string",
      "enum": [
        "WebsiteInteract",
        "FileDownloadFromSecureBrowserToRemoteDisk",
        "FileTransferFromRemoteToLocalDisk",
        "FileTransferFromLocalToRemoteDisk",
        "FileUploadFromRemoteDiskToSecureBrowser",
        "ContentPasteToWebsite",
        "ContentTransferFromLocalToRemoteClipboard",
        "ContentCopyFromWebsite",
        "UrlLoad",
        "TabOpen",
        "TabClose",
        "PrintJobSubmit",
        "SessionConnect",
        "SessionStart",
        "SessionDisconnect",
        "SessionEnd",
        "UrlBlockByContentFilter"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: WebsiteInteract | FileDownloadFromSecureBrowserToRemoteDisk | FileTransferFromRemoteToLocalDisk | FileTransferFromLocalToRemoteDisk | FileUploadFromRemoteDiskToSecureBrowser | ContentPasteToWebsite | ContentTransferFromLocalToRemoteClipboard | ContentCopyFromWebsite | UrlLoad | TabOpen | TabClose | PrintJobSubmit | SessionConnect | SessionStart | SessionDisconnect | SessionEnd | UrlBlockByContentFilter  \nUpdate requires: No interruption\n"
    },
    "EventFilter": {
      "oneOf": [
        {
          "type": "object",
          "title": "All",
          "properties": {
            "All": {
              "$ref": "#/definitions/Unit"
            }
          },
          "required": [
            "All"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "Include",
          "properties": {
            "Include": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              },
              "maxItems": 100,
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "Include"
          ],
          "additionalProperties": false
        }
      ]
    },
    "FolderStructure": {
      "type": "string",
      "enum": [
        "Flat",
        "NestedByDate"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Flat | NestedByDate  \nUpdate requires: No interruption\n"
    },
    "LogConfiguration": {
      "type": "object",
      "properties": {
        "S3": {
          "$ref": "#/definitions/S3LogConfiguration"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LogFileFormat": {
      "type": "string",
      "enum": [
        "JSONLines",
        "Json"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: JSONLines | Json  \nUpdate requires: No interruption\n"
    },
    "S3LogConfiguration": {
      "type": "object",
      "properties": {
        "Bucket": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$  \nUpdate requires: No interruption\n"
        },
        "KeyPrefix": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[\\d\\w\\-_/!().*']+$  \nUpdate requires: No interruption\n"
        },
        "BucketOwner": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[0-9]{12}$  \nUpdate requires: No interruption\n"
        },
        "LogFileFormat": {
          "$ref": "#/definitions/LogFileFormat"
        },
        "FolderStructure": {
          "$ref": "#/definitions/FolderStructure"
        }
      },
      "required": [
        "Bucket",
        "FolderStructure",
        "LogFileFormat"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Unit": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "AdditionalEncryptionContext": {
      "$ref": "#/definitions/EncryptionContextMap"
    },
    "AssociatedPortalArns": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 2048,
        "minLength": 20,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\\/[a-fA-F0-9\\-]{36})+$  \nUpdate requires: No interruption\n"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CreationDate": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CustomerManagedKey": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w+=\\/,.@-]+:kms:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:key\\/[a-zA-Z0-9-]+$  \nUpdate requires: Replacement\n"
    },
    "DisplayName": {
      "type": "string",
      "maxLength": 64,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[ _\\-\\d\\w]+$  \nUpdate requires: No interruption\n"
    },
    "EventFilter": {
      "$ref": "#/definitions/EventFilter"
    },
    "LogConfiguration": {
      "$ref": "#/definitions/LogConfiguration"
    },
    "SessionLoggerArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\\/[a-fA-F0-9\\-]{36})+$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 0,
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "required": [
    "EventFilter",
    "LogConfiguration"
  ],
  "readOnlyProperties": [
    "/properties/AssociatedPortalArns",
    "/properties/CreationDate",
    "/properties/SessionLoggerArn"
  ],
  "createOnlyProperties": [
    "/properties/AdditionalEncryptionContext",
    "/properties/CustomerManagedKey"
  ],
  "primaryIdentifier": [
    "/properties/SessionLoggerArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "workspaces-web:CreateSessionLogger",
        "workspaces-web:GetSessionLogger",
        "workspaces-web:ListSessionLoggers",
        "workspaces-web:ListTagsForResource",
        "workspaces-web:TagResource",
        "s3:PutObject",
        "kms:DescribeKey",
        "kms:GenerateDataKey",
        "kms:Decrypt",
        "kms:GenerateDataKeyWithoutPlaintext",
        "kms:ReEncryptTo",
        "kms:ReEncryptFrom"
      ]
    },
    "read": {
      "permissions": [
        "workspaces-web:GetSessionLogger",
        "workspaces-web:ListTagsForResource",
        "kms:Decrypt"
      ]
    },
    "update": {
      "permissions": [
        "workspaces-web:UpdateSessionLogger",
        "workspaces-web:GetSessionLogger",
        "workspaces-web:ListSessionLoggers",
        "workspaces-web:TagResource",
        "workspaces-web:UntagResource",
        "workspaces-web:ListTagsForResource",
        "s3:PutObject",
        "kms:GenerateDataKey",
        "kms:Decrypt"
      ]
    },
    "delete": {
      "permissions": [
        "workspaces-web:GetSessionLogger",
        "workspaces-web:DeleteSessionLogger",
        "kms:Decrypt"
      ]
    },
    "list": {
      "permissions": [
        "workspaces-web:ListSessionLoggers",
        "kms:Decrypt"
      ]
    }
  },
  "tagging": {
    "cloudFormationSystemTags": false,
    "permissions": [
      "workspaces-web:ListTagsForResource",
      "workspaces-web:TagResource",
      "workspaces-web:UntagResource"
    ],
    "tagOnCreate": true,
    "tagProperty": "/properties/Tags",
    "tagUpdatable": true,
    "taggable": true
  },
  "additionalProperties": false,
  "attributes": {
    "AssociatedPortalArns": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 2048,
        "minLength": 20,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\\/[a-fA-F0-9\\-]{36})+$  \nUpdate requires: No interruption\n"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CreationDate": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "SessionLoggerArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w+=\\/,.@-]+:[a-zA-Z0-9\\-]+:[a-zA-Z0-9\\-]*:[a-zA-Z0-9]{1,12}:[a-zA-Z]+(\\/[a-fA-F0-9\\-]{36})+$  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}