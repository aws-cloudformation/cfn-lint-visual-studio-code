{
  "typeName": "AWS::ApiGateway::Authorizer",
  "description": "Represents an authorization layer for methods. If enabled on a method, API Gateway will activate the authorizer when a client calls the method.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-apigateway.git",
  "properties": {
    "RestApiId": {
      "description": "The identifier of the API.",
      "type": "string",
      "markdownDescription": "The identifier of the API.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "AuthType": {
      "description": "Optional customer-defined field, used in OpenAPI imports and exports without functional impact.",
      "type": "string",
      "markdownDescription": "Optional customer-defined field, used in OpenAPI imports and exports without functional impact.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "AuthorizerCredentials": {
      "description": "Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.",
      "type": "string",
      "markdownDescription": "Specifies the required credentials as an IAM role for API Gateway to invoke the authorizer.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "AuthorizerResultTtlInSeconds": {
      "description": "The TTL in seconds of cached authorizer results.",
      "type": "integer",
      "markdownDescription": "The TTL in seconds of cached authorizer results.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "AuthorizerUri": {
      "description": "Specifies the authorizer's Uniform Resource Identifier (URI).",
      "type": "string",
      "markdownDescription": "Specifies the authorizer's Uniform Resource Identifier (URI).\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "IdentitySource": {
      "description": "The identity source for which authorization is requested.",
      "type": "string",
      "markdownDescription": "The identity source for which authorization is requested.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "IdentityValidationExpression": {
      "description": "A validation expression for the incoming identity token.",
      "type": "string",
      "markdownDescription": "A validation expression for the incoming identity token.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Name": {
      "description": "The name of the authorizer.",
      "type": "string",
      "markdownDescription": "The name of the authorizer.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "ProviderARNs": {
      "description": "A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "insertionOrder": false,
      "markdownDescription": "A list of the Amazon Cognito user pool ARNs for the COGNITO_USER_POOLS authorizer.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Type": {
      "description": "The authorizer type.",
      "type": "string",
      "markdownDescription": "The authorizer type.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    }
  },
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "additionalProperties": false,
  "required": [
    "RestApiId",
    "Type",
    "Name"
  ],
  "createOnlyProperties": [
    "/properties/RestApiId"
  ],
  "primaryIdentifier": [
    "/properties/RestApiId",
    "/properties/AuthorizerId"
  ],
  "readOnlyProperties": [
    "/properties/AuthorizerId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "apigateway:POST"
      ]
    },
    "read": {
      "permissions": [
        "apigateway:GET"
      ]
    },
    "update": {
      "permissions": [
        "apigateway:GET",
        "apigateway:PATCH"
      ]
    },
    "delete": {
      "permissions": [
        "apigateway:DELETE"
      ]
    },
    "list": {
      "permissions": [
        "apigateway:GET"
      ]
    }
  },
  "attributes": {
    "AuthorizerId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}