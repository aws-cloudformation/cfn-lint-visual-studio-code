{
  "typeName": "AWS::EntityResolution::MatchingWorkflow",
  "description": "MatchingWorkflow defined in AWS Entity Resolution service",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-entity-resolution.git",
  "definitions": {
    "EntityName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^[a-zA-Z_0-9-]*$  \nUpdate requires: No interruption"
    },
    "Description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "AttributeName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^[a-zA-Z_0-9- \\t]*$  \nUpdate requires: No interruption"
    },
    "SchemaMappingArn": {
      "description": "The SchemaMapping arn associated with the Schema",
      "type": "string",
      "markdownDescription": "The SchemaMapping arn associated with the Schema\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(schemamapping/.*)$  \nUpdate requires: No interruption"
    },
    "KMSArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):kms:.*:[0-9]+:.*$  \nUpdate requires: No interruption"
    },
    "MatchingWorkflowArn": {
      "description": "The default MatchingWorkflow arn",
      "type": "string",
      "markdownDescription": "The default MatchingWorkflow arn\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(matchingworkflow/.*)$  \nUpdate requires: No interruption"
    },
    "CreatedAt": {
      "description": "The time of this MatchingWorkflow got created",
      "type": "string",
      "markdownDescription": "The time of this MatchingWorkflow got created\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "UpdatedAt": {
      "description": "The time of this MatchingWorkflow got last updated at",
      "type": "string",
      "markdownDescription": "The time of this MatchingWorkflow got last updated at\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "InputSource": {
      "type": "object",
      "properties": {
        "InputSourceARN": {
          "description": "An Glue table ARN for the input source table",
          "type": "string",
          "markdownDescription": "An Glue table ARN for the input source table\n\n---\n\nRequired: Yes  \nType: String  \nPattern: arn:(aws|aws-us-gov|aws-cn):.*:.*:[0-9]+:.*$  \nUpdate requires: No interruption"
        },
        "SchemaArn": {
          "type": "string",
          "$ref": "#/definitions/SchemaMappingArn",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "ApplyNormalization": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "InputSourceARN",
        "SchemaArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OutputSource": {
      "type": "object",
      "properties": {
        "OutputS3Path": {
          "description": "The S3 path to which Entity Resolution will write the output table",
          "type": "string",
          "markdownDescription": "The S3 path to which Entity Resolution will write the output table\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^s3://([^/]+)/?(.*?([^/]+)/?)$  \nUpdate requires: No interruption"
        },
        "Output": {
          "type": "array",
          "insertionOrder": false,
          "minItems": 0,
          "maxItems": 750,
          "items": {
            "$ref": "#/definitions/OutputAttribute"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "KMSArn": {
          "$ref": "#/definitions/KMSArn"
        },
        "ApplyNormalization": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Output",
        "OutputS3Path"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OutputAttribute": {
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/AttributeName"
        },
        "Hashed": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResolutionType": {
      "type": "string",
      "enum": [
        "RULE_MATCHING",
        "ML_MATCHING",
        "PROVIDER"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: RULE_MATCHING | ML_MATCHING | PROVIDER  \nUpdate requires: No interruption"
    },
    "ResolutionTechniques": {
      "type": "object",
      "properties": {
        "ResolutionType": {
          "$ref": "#/definitions/ResolutionType"
        },
        "RuleBasedProperties": {
          "$ref": "#/definitions/RuleBasedProperties"
        },
        "ProviderProperties": {
          "$ref": "#/definitions/ProviderProperties"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IncrementalRunConfig": {
      "type": "object",
      "properties": {
        "IncrementalRunType": {
          "type": "string",
          "enum": [
            "IMMEDIATE"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: IMMEDIATE  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "IncrementalRunType"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RuleBasedProperties": {
      "type": "object",
      "properties": {
        "Rules": {
          "type": "array",
          "insertionOrder": false,
          "minItems": 1,
          "maxItems": 15,
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "AttributeMatchingModel": {
          "type": "string",
          "enum": [
            "ONE_TO_ONE",
            "MANY_TO_MANY"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: ONE_TO_ONE | MANY_TO_MANY  \nUpdate requires: No interruption"
        },
        "MatchPurpose": {
          "type": "string",
          "enum": [
            "IDENTIFIER_GENERATION",
            "INDEXING"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: IDENTIFIER_GENERATION | INDEXING  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AttributeMatchingModel",
        "Rules"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Rule": {
      "type": "object",
      "properties": {
        "RuleName": {
          "type": "string",
          "minLength": 0,
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 255  \nPattern: ^[a-zA-Z_0-9- \\t]*$  \nUpdate requires: No interruption"
        },
        "MatchingKeys": {
          "type": "array",
          "insertionOrder": false,
          "minItems": 1,
          "maxItems": 15,
          "items": {
            "$ref": "#/definitions/AttributeName"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "RuleName",
        "MatchingKeys"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ProviderProperties": {
      "type": "object",
      "properties": {
        "ProviderServiceArn": {
          "type": "string",
          "description": "Arn of the Provider service being used.",
          "markdownDescription": "Arn of the Provider service being used.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "ProviderConfiguration": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            "^.+$": {
              "type": "string",
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
            }
          },
          "description": "Additional Provider configuration that would be required for the provider service. The Configuration must be in JSON string format",
          "markdownDescription": "Additional Provider configuration that would be required for the provider service. The Configuration must be in JSON string format\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        },
        "IntermediateSourceConfiguration": {
          "$ref": "#/definitions/IntermediateSourceConfiguration"
        }
      },
      "required": [
        "ProviderServiceArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntermediateSourceConfiguration": {
      "type": "object",
      "properties": {
        "IntermediateS3Path": {
          "type": "string",
          "description": "The s3 path that would be used to stage the intermediate data being generated during workflow execution.",
          "markdownDescription": "The s3 path that would be used to stage the intermediate data being generated during workflow execution.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "IntermediateS3Path"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "WorkflowName": {
      "description": "The name of the MatchingWorkflow",
      "$ref": "#/definitions/EntityName",
      "markdownDescription": "The name of the MatchingWorkflow\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "The description of the MatchingWorkflow",
      "$ref": "#/definitions/Description",
      "markdownDescription": "The description of the MatchingWorkflow\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "InputSourceConfig": {
      "type": "array",
      "insertionOrder": false,
      "minItems": 1,
      "maxItems": 20,
      "items": {
        "$ref": "#/definitions/InputSource"
      },
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
    },
    "OutputSourceConfig": {
      "type": "array",
      "insertionOrder": false,
      "minItems": 1,
      "maxItems": 1,
      "items": {
        "$ref": "#/definitions/OutputSource"
      },
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
    },
    "ResolutionTechniques": {
      "$ref": "#/definitions/ResolutionTechniques"
    },
    "RoleArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "IncrementalRunConfig": {
      "$ref": "#/definitions/IncrementalRunConfig"
    }
  },
  "createOnlyProperties": [
    "/properties/WorkflowName"
  ],
  "readOnlyProperties": [
    "/properties/WorkflowArn",
    "/properties/UpdatedAt",
    "/properties/CreatedAt"
  ],
  "primaryIdentifier": [
    "/properties/WorkflowName"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "entityresolution:CreateMatchingWorkflow",
        "entityresolution:GetMatchingWorkflow",
        "entityresolution:TagResource",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "iam:PassRole",
        "events:PutRule",
        "events:DeleteRule",
        "events:PutTargets",
        "events:ListTargetsByRule"
      ]
    },
    "read": {
      "permissions": [
        "entityresolution:GetMatchingWorkflow",
        "entityresolution:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "entityresolution:DeleteMatchingWorkflow",
        "entityresolution:GetMatchingWorkflow",
        "entityresolution:UntagResource",
        "events:PutRule",
        "events:DeleteRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "events:ListTargetsByRule"
      ]
    },
    "list": {
      "permissions": [
        "entityresolution:ListMatchingWorkflows"
      ]
    },
    "update": {
      "permissions": [
        "entityresolution:GetMatchingWorkflow",
        "entityresolution:UpdateMatchingWorkflow",
        "entityresolution:ListTagsForResource",
        "entityresolution:TagResource",
        "entityresolution:UntagResource",
        "iam:PassRole",
        "kms:CreateGrant",
        "kms:DescribeKey",
        "events:PutRule",
        "events:DeleteRule",
        "events:PutTargets",
        "events:RemoveTargets",
        "events:ListTargetsByRule"
      ]
    }
  },
  "required": [
    "WorkflowName",
    "InputSourceConfig",
    "OutputSourceConfig",
    "ResolutionTechniques",
    "RoleArn"
  ],
  "additionalProperties": false,
  "attributes": {
    "WorkflowArn": {
      "$ref": "#/definitions/MatchingWorkflowArn"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    }
  }
}