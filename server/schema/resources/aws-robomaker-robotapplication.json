{
  "typeName": "AWS::RoboMaker::RobotApplication",
  "description": "This schema is for testing purpose only.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: arn:[\\w+=/,.@-]+:[\\w+=/,.@-]+:[\\w+=/,.@-]*:[0-9]*:[\\w+=,.@-]+(/[\\w+=,.@-]+)*  \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "^[a-zA-Z0-9-]{1,128}$": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SourceConfig": {
      "type": "object",
      "properties": {
        "S3Bucket": {
          "type": "string",
          "description": "The Arn of the S3Bucket that stores the robot application source.",
          "markdownDescription": "The Arn of the S3Bucket that stores the robot application source.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "S3Key": {
          "type": "string",
          "description": "The s3 key of robot application source.",
          "markdownDescription": "The s3 key of robot application source.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Architecture": {
          "type": "string",
          "description": "The architecture of robot application.",
          "minLength": 1,
          "maxLength": 255,
          "enum": [
            "X86_64",
            "ARM64",
            "ARMHF"
          ],
          "markdownDescription": "The architecture of robot application.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: X86_64 | ARM64 | ARMHF  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3Bucket",
        "S3Key",
        "Architecture"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RobotSoftwareSuite": {
      "description": "The robot software suite used by the robot application.",
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of robot software suite.",
          "enum": [
            "ROS",
            "ROS2",
            "General"
          ],
          "markdownDescription": "The name of robot software suite.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: ROS | ROS2 | General  \nUpdate requires: No interruption"
        },
        "Version": {
          "type": "string",
          "description": "The version of robot software suite.",
          "enum": [
            "Kinetic",
            "Melodic",
            "Dashing"
          ],
          "markdownDescription": "The version of robot software suite.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Kinetic | Melodic | Dashing  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "The robot software suite used by the robot application.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Name": {
      "description": "The name of the robot application.",
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "The name of the robot application.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: Replacement"
    },
    "Sources": {
      "description": "The sources of the robot application.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SourceConfig"
      },
      "markdownDescription": "The sources of the robot application.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Environment": {
      "description": "The URI of the Docker image for the robot application.",
      "type": "string",
      "markdownDescription": "The URI of the Docker image for the robot application.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "RobotSoftwareSuite": {
      "$ref": "#/definitions/RobotSoftwareSuite"
    },
    "CurrentRevisionId": {
      "description": "The revision ID of robot application.",
      "type": "string",
      "minLength": 1,
      "maxLength": 40,
      "markdownDescription": "The revision ID of robot application.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 40  \nUpdate requires: No interruption"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "additionalProperties": false,
  "required": [
    "RobotSoftwareSuite"
  ],
  "readOnlyProperties": [
    "/properties/Arn"
  ],
  "writeOnlyProperties": [
    "/properties/RobotSoftwareSuite/Version",
    "/properties/Sources"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "robomaker:CreateRobotApplication"
      ]
    },
    "read": {
      "permissions": [
        "robomaker:DescribeRobotApplication"
      ]
    },
    "update": {
      "permissions": [
        "robomaker:TagResource",
        "robomaker:UntagResource",
        "robomaker:UpdateRobotApplication"
      ]
    },
    "delete": {
      "permissions": [
        "robomaker:DeleteRobotApplication"
      ]
    },
    "list": {
      "permissions": [
        "robomaker:ListRobotApplications"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "$ref": "#/definitions/Arn"
    }
  }
}