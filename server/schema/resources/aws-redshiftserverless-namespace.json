{
  "typeName": "AWS::RedshiftServerless::Namespace",
  "description": "Definition of AWS::RedshiftServerless::Namespace Resource Type",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-redshiftserverless",
  "definitions": {
    "LogExport": {
      "type": "string",
      "enum": [
        "useractivitylog",
        "userlog",
        "connectionlog"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: useractivitylog | userlog | connectionlog  \nUpdate requires: No interruption"
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "NamespaceArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "NamespaceId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "NamespaceName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 3,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^[a-z0-9-]+$  \nUpdate requires: No interruption"
        },
        "AdminUsername": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "DbName": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z][a-zA-Z_0-9+.@-]*  \nUpdate requires: No interruption"
        },
        "KmsKeyId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "DefaultIamRoleArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "IamRoles": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nUpdate requires: No interruption"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "LogExports": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/LogExport"
          },
          "maxItems": 16,
          "minItems": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Status": {
          "$ref": "#/definitions/NamespaceStatus"
        },
        "CreationDate": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NamespaceStatus": {
      "type": "string",
      "enum": [
        "AVAILABLE",
        "MODIFYING",
        "DELETING"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AVAILABLE | MODIFYING | DELETING  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "AdminUserPassword": {
      "description": "The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit.",
      "type": "string",
      "maxLength": 64,
      "minLength": 8,
      "markdownDescription": "The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 8  \nMaximum Length: 64  \nPattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[^\\x00-\\x20\\x22\\x27\\x2f\\x40\\x5c\\x7f-\\uffff]+  \nUpdate requires: No interruption"
    },
    "AdminUsername": {
      "description": "The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.",
      "type": "string",
      "markdownDescription": "The user name associated with the admin user for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z][a-zA-Z_0-9+.@-]*  \nUpdate requires: No interruption"
    },
    "DbName": {
      "description": "The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.",
      "type": "string",
      "maxLength": 127,
      "markdownDescription": "The database name associated for the namespace that is being created. Only alphanumeric characters and underscores are allowed. It should start with an alphabet.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 127  \nPattern: [a-zA-Z][a-zA-Z_0-9+.@-]*  \nUpdate requires: No interruption"
    },
    "DefaultIamRoleArn": {
      "description": "The default IAM role ARN for the namespace that is being created.",
      "type": "string",
      "markdownDescription": "The default IAM role ARN for the namespace that is being created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "IamRoles": {
      "description": "A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string",
        "maxLength": 512,
        "minLength": 0,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nUpdate requires: No interruption"
      },
      "markdownDescription": "A list of AWS Identity and Access Management (IAM) roles that can be used by the namespace to access other AWS services. You must supply the IAM roles in their Amazon Resource Name (ARN) format. The Default role limit for each request is 10.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "KmsKeyId": {
      "description": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.",
      "type": "string",
      "markdownDescription": "The AWS Key Management Service (KMS) key ID of the encryption key that you want to use to encrypt data in the namespace.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LogExports": {
      "description": "The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/LogExport"
      },
      "maxItems": 16,
      "minItems": 0,
      "markdownDescription": "The collection of log types to be exported provided by the customer. Should only be one of the three supported log types: userlog, useractivitylog and connectionlog\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "NamespaceName": {
      "description": "A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.",
      "type": "string",
      "maxLength": 64,
      "minLength": 3,
      "markdownDescription": "A unique identifier for the namespace. You use this identifier to refer to the namespace for any subsequent namespace operations such as deleting or modifying. All alphabetical characters must be lower case. Namespace name should be unique for all namespaces within an AWS account.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^[a-z0-9-]+$  \nUpdate requires: Replacement"
    },
    "Tags": {
      "description": "The list of tags for the namespace.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 0,
      "markdownDescription": "The list of tags for the namespace.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: Replacement"
    },
    "FinalSnapshotName": {
      "description": "The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace",
      "type": "string",
      "maxLength": 255,
      "markdownDescription": "The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: [a-z][a-z0-9]*(-[a-z0-9]+)*  \nUpdate requires: No interruption"
    },
    "FinalSnapshotRetentionPeriod": {
      "description": "The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.",
      "type": "integer",
      "markdownDescription": "The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    }
  },
  "tagging": {
    "taggable": false
  },
  "required": [
    "NamespaceName"
  ],
  "readOnlyProperties": [
    "/properties/Namespace"
  ],
  "writeOnlyProperties": [
    "/properties/AdminUserPassword",
    "/properties/Tags"
  ],
  "createOnlyProperties": [
    "/properties/NamespaceName",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/NamespaceName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:ScheduleKeyDeletion",
        "kms:CancelKeyDeletion",
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:ListGrants",
        "kms:RevokeGrant",
        "redshift-serverless:CreateNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "read": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:GetNamespace"
      ]
    },
    "update": {
      "permissions": [
        "iam:PassRole",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:ScheduleKeyDeletion",
        "kms:CancelKeyDeletion",
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:ListGrants",
        "kms:RevokeGrant",
        "redshift-serverless:UpdateNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "delete": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:DeleteNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "list": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:ListNamespaces"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "Namespace": {
      "$ref": "#/definitions/Namespace"
    }
  }
}