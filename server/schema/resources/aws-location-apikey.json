{
  "typeName": "AWS::Location::APIKey",
  "description": "Definition of AWS::Location::APIKey Resource Type",
  "definitions": {
    "ApiKeyRestrictions": {
      "type": "object",
      "properties": {
        "AllowActions": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 200,
            "minLength": 5,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 5  \nMaximum Length: 200  \nPattern: ^(geo|geo-routes|geo-places|geo-maps):\\w*\\*?$  \nUpdate requires: No interruption\n"
          },
          "maxItems": 24,
          "minItems": 1,
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "AllowResources": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 1600,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1600  \nPattern: (^arn(:[a-z0-9]+([.-][a-z0-9]+)*):geo(:([a-z0-9]+([.-][a-z0-9]+)*))(:[0-9]+):((\\*)|([-a-z]+[/][*-._\\w]+))$)|(^arn(:[a-z0-9]+([.-][a-z0-9]+)*):(geo-routes|geo-places|geo-maps)(:((\\*)|([a-z0-9]+([.-][a-z0-9]+)*)))::((provider[\\/][*-._\\w]+))$)  \nUpdate requires: No interruption\n"
          },
          "maxItems": 8,
          "minItems": 1,
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "AllowReferers": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 253,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 253  \nPattern: ^([$\\-._+!*\\x{60}(),;/?:@=&\\w]|%([0-9a-fA-F?]{2}|[0-9a-fA-F?]?[*]))+$  \nUpdate requires: No interruption\n"
          },
          "maxItems": 5,
          "minItems": 1,
          "insertionOrder": false,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "AllowActions",
        "AllowResources"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TagMap": {
      "type": "object",
      "maxProperties": 50,
      "patternProperties": {
        ".*": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.,:/=+\\-@]*)$  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Unit": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z+-=._:/]+$  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: ^[A-Za-z0-9 _=@:.+-/]*$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "iso8601UTC": {
      "description": "The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)",
      "type": "string",
      "markdownDescription": "The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)\n\n---\n\nRequired: No  \nType: String  \nPattern: ^([0-2]\\d{3})-(0[0-9]|1[0-2])-([0-2]\\d|3[01])T([01]\\d|2[0-4]):([0-5]\\d):([0-6]\\d)((\\.\\d{3})?)Z$  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "CreateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "Description": {
      "type": "string",
      "maxLength": 1000,
      "minLength": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1000  \nUpdate requires: No interruption\n"
    },
    "ExpireTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "ForceUpdate": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "KeyArn": {
      "type": "string",
      "maxLength": 1600,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1600  \nPattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "KeyName": {
      "type": "string",
      "maxLength": 100,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nPattern: ^[-._\\w]+$  \nUpdate requires: Replacement\n"
    },
    "NoExpiry": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "Restrictions": {
      "$ref": "#/definitions/ApiKeyRestrictions"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "UpdateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "ForceDelete": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "Arn": {
      "type": "string",
      "maxLength": 1600,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1600  \nPattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  },
  "required": [
    "KeyName",
    "Restrictions"
  ],
  "readOnlyProperties": [
    "/properties/CreateTime",
    "/properties/Arn",
    "/properties/KeyArn",
    "/properties/UpdateTime"
  ],
  "writeOnlyProperties": [
    "/properties/ForceUpdate",
    "/properties/ForceDelete",
    "/properties/NoExpiry"
  ],
  "createOnlyProperties": [
    "/properties/KeyName"
  ],
  "primaryIdentifier": [
    "/properties/KeyName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "geo:CreateKey",
        "geo:DescribeKey",
        "geo:TagResource",
        "geo:UntagResource",
        "geo:GetMapTile",
        "geo:GetMapStyleDescriptor",
        "geo:GetMapSprites",
        "geo:GetMapGlyphs",
        "geo:SearchPlaceIndexForText",
        "geo:SearchPlaceIndexForPosition",
        "geo:SearchPlaceIndexForSuggestions",
        "geo:GetPlace",
        "geo:CalculateRoute",
        "geo:CalculateRouteMatrix",
        "geo-maps:GetTile",
        "geo-maps:GetStaticMap",
        "geo-places:Autocomplete",
        "geo-places:Geocode",
        "geo-places:GetPlace",
        "geo-places:ReverseGeocode",
        "geo-places:SearchNearby",
        "geo-places:SearchText",
        "geo-places:Suggest",
        "geo-routes:CalculateIsolines",
        "geo-routes:CalculateRouteMatrix",
        "geo-routes:CalculateRoutes",
        "geo-routes:OptimizeWaypoints",
        "geo-routes:SnapToRoads"
      ]
    },
    "read": {
      "permissions": [
        "geo:DescribeKey"
      ]
    },
    "update": {
      "permissions": [
        "geo:CreateKey",
        "geo:DescribeKey",
        "geo:TagResource",
        "geo:UntagResource",
        "geo:GetMapTile",
        "geo:GetMapStyleDescriptor",
        "geo:GetMapSprites",
        "geo:GetMapGlyphs",
        "geo:SearchPlaceIndexForText",
        "geo:SearchPlaceIndexForPosition",
        "geo:SearchPlaceIndexForSuggestions",
        "geo:GetPlace",
        "geo:CalculateRoute",
        "geo:CalculateRouteMatrix",
        "geo-maps:GetTile",
        "geo-maps:GetStaticMap",
        "geo-places:Autocomplete",
        "geo-places:Geocode",
        "geo-places:GetPlace",
        "geo-places:ReverseGeocode",
        "geo-places:SearchNearby",
        "geo-places:SearchText",
        "geo-places:Suggest",
        "geo-routes:CalculateIsolines",
        "geo-routes:CalculateRouteMatrix",
        "geo-routes:CalculateRoutes",
        "geo-routes:OptimizeWaypoints",
        "geo-routes:SnapToRoads",
        "geo:UpdateKey"
      ]
    },
    "delete": {
      "permissions": [
        "geo:DeleteKey",
        "geo:DescribeKey"
      ]
    },
    "list": {
      "permissions": [
        "geo:ListKeys"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "geo:TagResource",
      "geo:UntagResource"
    ]
  },
  "additionalProperties": false,
  "attributes": {
    "CreateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "KeyArn": {
      "type": "string",
      "maxLength": 1600,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1600  \nPattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "UpdateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "Arn": {
      "type": "string",
      "maxLength": 1600,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1600  \nPattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}