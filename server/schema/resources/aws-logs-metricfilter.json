{
  "typeName": "AWS::Logs::MetricFilter",
  "resourceLink": {
    "templateUri": "/cloudwatch/home?region=${awsRegion}#logsV2:log-groups/log-group/${LogGroupName}/edit-metric-filter/${MetricName}",
    "mappings": {
      "MetricName": "/MetricName",
      "LogGroupName": "/LogGroupName"
    }
  },
  "description": "Specifies a metric filter that describes how CloudWatch Logs extracts information from logs and transforms it into Amazon CloudWatch metrics.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-logs.git",
  "tagging": {
    "taggable": false
  },
  "definitions": {
    "Dimension": {
      "description": "the key-value pairs that further define a metric.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key of the dimension. Maximum length of 255.",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "The key of the dimension. Maximum length of 255.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value of the dimension. Maximum length of 255.",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "The value of the dimension. Maximum length of 255.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "markdownDescription": "the key-value pairs that further define a metric.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricTransformation": {
      "type": "object",
      "properties": {
        "DefaultValue": {
          "description": "The value to emit when a filter pattern does not match a log event. This value can be null.",
          "type": "number",
          "markdownDescription": "The value to emit when a filter pattern does not match a log event. This value can be null.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "MetricName": {
          "description": "The name of the CloudWatch metric. Metric name must be in ASCII format.",
          "type": "string",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "The name of the CloudWatch metric. Metric name must be in ASCII format.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: ^((?![:*$])[\\x00-\\x7F]){1,255}  \nUpdate requires: No interruption"
        },
        "MetricNamespace": {
          "$comment": "Namespaces can be up to 256 characters long; valid characters include 0-9A-Za-z.-_/#",
          "description": "The namespace of the CloudWatch metric.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The namespace of the CloudWatch metric.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[0-9a-zA-Z\\.\\-_\\/#]{1,256}  \nUpdate requires: No interruption"
        },
        "MetricValue": {
          "description": "The value to publish to the CloudWatch metric when a filter pattern matches a log event.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "markdownDescription": "The value to publish to the CloudWatch metric when a filter pattern matches a log event.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nPattern: .{1,100}  \nUpdate requires: No interruption"
        },
        "Unit": {
          "description": "The unit to assign to the metric. If you omit this, the unit is set as None.",
          "type": "string",
          "enum": [
            "Seconds",
            "Microseconds",
            "Milliseconds",
            "Bytes",
            "Kilobytes",
            "Megabytes",
            "Gigabytes",
            "Terabytes",
            "Bits",
            "Kilobits",
            "Megabits",
            "Gigabits",
            "Terabits",
            "Percent",
            "Count",
            "Bytes/Second",
            "Kilobytes/Second",
            "Megabytes/Second",
            "Gigabytes/Second",
            "Terabytes/Second",
            "Bits/Second",
            "Kilobits/Second",
            "Megabits/Second",
            "Gigabits/Second",
            "Terabits/Second",
            "Count/Second",
            "None"
          ],
          "markdownDescription": "The unit to assign to the metric. If you omit this, the unit is set as None.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Seconds | Microseconds | Milliseconds | Bytes | Kilobytes | Megabytes | Gigabytes | Terabytes | Bits | Kilobits | Megabits | Gigabits | Terabits | Percent | Count | Bytes/Second | Kilobytes/Second | Megabytes/Second | Gigabytes/Second | Terabytes/Second | Bits/Second | Kilobits/Second | Megabits/Second | Gigabits/Second | Terabits/Second | Count/Second | None  \nUpdate requires: No interruption"
        },
        "Dimensions": {
          "description": "Dimensions are the key-value pairs that further define a metric",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "minItems": 1,
          "maxItems": 3,
          "items": {
            "$ref": "#/definitions/Dimension"
          },
          "markdownDescription": "Dimensions are the key-value pairs that further define a metric\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MetricName",
        "MetricNamespace",
        "MetricValue"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "FilterName": {
      "description": "A name for the metric filter.",
      "type": "string",
      "minLength": 1,
      "maxLength": 512,
      "markdownDescription": "A name for the metric filter.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: ^[^:*]{1,512}  \nUpdate requires: Replacement"
    },
    "FilterPattern": {
      "description": "Pattern that Logs follows to interpret each entry in a log.",
      "type": "string",
      "maxLength": 1024,
      "markdownDescription": "Pattern that Logs follows to interpret each entry in a log.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
    },
    "LogGroupName": {
      "description": "Existing log group that you want to associate with this filter.",
      "type": "string",
      "minLength": 1,
      "maxLength": 512,
      "markdownDescription": "Existing log group that you want to associate with this filter.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: ^[.\\-_/#A-Za-z0-9]{1,512}  \nUpdate requires: Replacement"
    },
    "MetricTransformations": {
      "description": "A collection of information that defines how metric data gets emitted.",
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/MetricTransformation"
      },
      "markdownDescription": "A collection of information that defines how metric data gets emitted.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "logs:PutMetricFilter",
        "logs:DescribeMetricFilters"
      ]
    },
    "read": {
      "permissions": [
        "logs:DescribeMetricFilters"
      ]
    },
    "update": {
      "permissions": [
        "logs:PutMetricFilter",
        "logs:DescribeMetricFilters"
      ]
    },
    "delete": {
      "permissions": [
        "logs:DeleteMetricFilter"
      ]
    },
    "list": {
      "permissions": [
        "logs:DescribeMetricFilters"
      ]
    }
  },
  "required": [
    "FilterPattern",
    "LogGroupName",
    "MetricTransformations"
  ],
  "createOnlyProperties": [
    "/properties/FilterName",
    "/properties/LogGroupName"
  ],
  "primaryIdentifier": [
    "/properties/LogGroupName",
    "/properties/FilterName"
  ],
  "additionalProperties": false,
  "attributes": {}
}