{
  "typeName": "AWS::MediaConnect::FlowOutput",
  "description": "Resource schema for AWS::MediaConnect::FlowOutput",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-mediaconnect.git",
  "definitions": {
    "Encryption": {
      "type": "object",
      "description": "Information about the encryption of the flow.",
      "properties": {
        "Algorithm": {
          "type": "string",
          "enum": [
            "aes128",
            "aes192",
            "aes256"
          ],
          "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
          "markdownDescription": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: aes128 | aes192 | aes256  \nUpdate requires: No interruption"
        },
        "KeyType": {
          "type": "string",
          "enum": [
            "static-key",
            "srt-password"
          ],
          "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
          "default": "static-key",
          "markdownDescription": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: static-key | srt-password  \nUpdate requires: No interruption"
        },
        "RoleArn": {
          "type": "string",
          "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
          "markdownDescription": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "SecretArn": {
          "type": "string",
          "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.",
          "markdownDescription": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "RoleArn",
        "SecretArn"
      ],
      "markdownDescription": "Information about the encryption of the flow.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcInterfaceAttachment": {
      "type": "object",
      "description": "The settings for attaching a VPC interface to an output.",
      "properties": {
        "VpcInterfaceName": {
          "type": "string",
          "description": "The name of the VPC interface to use for this output.",
          "markdownDescription": "The name of the VPC interface to use for this output.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The settings for attaching a VPC interface to an output.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "FlowArn": {
      "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "CidrAllowList": {
      "type": "array",
      "description": "The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "markdownDescription": "The range of IP addresses that should be allowed to initiate output requests to this flow. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Encryption": {
      "$ref": "#/definitions/Encryption",
      "description": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
      "markdownDescription": "The type of key used for the encryption. If no keyType is provided, the service will use the default setting (static-key).\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Description": {
      "type": "string",
      "description": "A description of the output.",
      "markdownDescription": "A description of the output.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Destination": {
      "type": "string",
      "description": "The address where you want to send the output.",
      "markdownDescription": "The address where you want to send the output.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MaxLatency": {
      "type": "integer",
      "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.",
      "markdownDescription": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "MinLatency": {
      "type": "integer",
      "description": "The minimum latency in milliseconds.",
      "markdownDescription": "The minimum latency in milliseconds.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Name": {
      "type": "string",
      "description": "The name of the output. This value must be unique within the current flow.",
      "markdownDescription": "The name of the output. This value must be unique within the current flow.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement"
    },
    "Port": {
      "type": "integer",
      "description": "The port to use when content is distributed to this output.",
      "markdownDescription": "The port to use when content is distributed to this output.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Protocol": {
      "type": "string",
      "enum": [
        "zixi-push",
        "rtp-fec",
        "rtp",
        "zixi-pull",
        "rist",
        "srt-listener"
      ],
      "description": "The protocol that is used by the source or output.",
      "markdownDescription": "The protocol that is used by the source or output.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: zixi-push | rtp-fec | rtp | zixi-pull | rist | srt-listener  \nUpdate requires: No interruption"
    },
    "RemoteId": {
      "type": "string",
      "description": "The remote ID for the Zixi-pull stream.",
      "markdownDescription": "The remote ID for the Zixi-pull stream.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SmoothingLatency": {
      "type": "integer",
      "description": "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.",
      "markdownDescription": "The smoothing latency in milliseconds for RIST, RTP, and RTP-FEC streams.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "StreamId": {
      "type": "string",
      "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
      "markdownDescription": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "VpcInterfaceAttachment": {
      "$ref": "#/definitions/VpcInterfaceAttachment",
      "description": "The name of the VPC interface attachment to use for this output.",
      "markdownDescription": "The name of the VPC interface attachment to use for this output.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "FlowArn",
    "Protocol"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "readOnlyProperties": [
    "/properties/OutputArn"
  ],
  "primaryIdentifier": [
    "/properties/OutputArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "mediaconnect:AddFlowOutputs"
      ]
    },
    "read": {
      "permissions": [
        "mediaconnect:DescribeFlow"
      ]
    },
    "update": {
      "permissions": [
        "mediaconnect:DescribeFlow",
        "mediaconnect:UpdateFlowOutput"
      ]
    },
    "delete": {
      "permissions": [
        "mediaconnect:DescribeFlow",
        "mediaconnect:RemoveFlowOutput"
      ]
    },
    "list": {
      "permissions": [
        "mediaconnect:DescribeFlow"
      ]
    }
  },
  "attributes": {
    "OutputArn": {
      "description": "The ARN of the output.",
      "type": "string",
      "markdownDescription": "The ARN of the output.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}