{
  "typeName": "AWS::ImageBuilder::ContainerRecipe",
  "description": "Resource schema for AWS::ImageBuilder::ContainerRecipe",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-imagebuilder.git",
  "properties": {
    "Arn": {
      "description": "The Amazon Resource Name (ARN) of the container recipe.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the container recipe.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Name": {
      "description": "The name of the container recipe.",
      "type": "string",
      "markdownDescription": "The name of the container recipe.\n\n---\n\nRequired: Conditional  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Description": {
      "description": "The description of the container recipe.",
      "type": "string",
      "markdownDescription": "The description of the container recipe.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Version": {
      "description": "The semantic version of the container recipe (<major>.<minor>.<patch>).",
      "type": "string",
      "markdownDescription": "The semantic version of the container recipe (<major>.<minor>.<patch>).\n\n---\n\nRequired: Conditional  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Components": {
      "description": "Components for build and test that are included in the container recipe.",
      "type": "array",
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/ComponentConfiguration"
      },
      "markdownDescription": "Components for build and test that are included in the container recipe.\n\n---\n\nRequired: Conditional  \nType: Array  \nUpdate requires: Replacement\n"
    },
    "InstanceConfiguration": {
      "additionalProperties": false,
      "description": "A group of options that can be used to configure an instance for building and testing container images.",
      "$ref": "#/definitions/InstanceConfiguration",
      "markdownDescription": "A group of options that can be used to configure an instance for building and testing container images.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement\n"
    },
    "DockerfileTemplateData": {
      "description": "Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.",
      "type": "string",
      "markdownDescription": "Dockerfiles are text documents that are used to build Docker containers, and ensure that they contain all of the elements required by the application running inside. The template data consists of contextual variables where Image Builder places build information or scripts, based on your container image recipe.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "DockerfileTemplateUri": {
      "description": "The S3 URI for the Dockerfile that will be used to build your container image.",
      "type": "string",
      "markdownDescription": "The S3 URI for the Dockerfile that will be used to build your container image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "PlatformOverride": {
      "description": "Specifies the operating system platform when you use a custom source image.",
      "type": "string",
      "enum": [
        "Windows",
        "Linux"
      ],
      "markdownDescription": "Specifies the operating system platform when you use a custom source image.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Windows | Linux  \nUpdate requires: Replacement\n"
    },
    "ContainerType": {
      "description": "Specifies the type of container, such as Docker.",
      "type": "string",
      "enum": [
        "DOCKER"
      ],
      "markdownDescription": "Specifies the type of container, such as Docker.\n\n---\n\nRequired: Conditional  \nType: String  \nAllowed Values: DOCKER  \nUpdate requires: Replacement\n"
    },
    "ImageOsVersionOverride": {
      "description": "Specifies the operating system version for the source image.",
      "type": "string",
      "markdownDescription": "Specifies the operating system version for the source image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "TargetRepository": {
      "description": "The destination repository for the container image.",
      "$ref": "#/definitions/TargetContainerRepository",
      "markdownDescription": "The destination repository for the container image.\n\n---\n\nRequired: Conditional  \nType:   \nUpdate requires: Replacement\n"
    },
    "KmsKeyId": {
      "description": "Identifies which KMS key is used to encrypt the container image.",
      "type": "string",
      "markdownDescription": "Identifies which KMS key is used to encrypt the container image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "ParentImage": {
      "description": "The source image for the container recipe.",
      "type": "string",
      "markdownDescription": "The source image for the container recipe.\n\n---\n\nRequired: Conditional  \nType: String  \nUpdate requires: Replacement\n"
    },
    "WorkingDirectory": {
      "description": "The working directory to be used during build and test workflows.",
      "type": "string",
      "markdownDescription": "The working directory to be used during build and test workflows.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Tags": {
      "description": "Tags that are attached to the container recipe.",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        ".{1,}": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Tags that are attached to the container recipe.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "ComponentConfiguration": {
      "description": "Configuration details of the component.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ComponentArn": {
          "description": "The Amazon Resource Name (ARN) of the component.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the component.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Parameters": {
          "description": "A group of parameter settings that are used to configure the component for a specific recipe.",
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/ComponentParameter"
          },
          "markdownDescription": "A group of parameter settings that are used to configure the component for a specific recipe.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Configuration details of the component.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "InstanceConfiguration": {
      "description": "A group of options that can be used to configure an instance for building and testing container images.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Image": {
          "description": "The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.",
          "type": "string",
          "markdownDescription": "The AMI ID to use as the base image for a container build and test instance. If not specified, Image Builder will use the appropriate ECS-optimized AMI as a base image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "BlockDeviceMappings": {
          "description": "Defines the block devices to attach for building an instance from this Image Builder AMI.",
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/InstanceBlockDeviceMapping"
          },
          "markdownDescription": "Defines the block devices to attach for building an instance from this Image Builder AMI.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "A group of options that can be used to configure an instance for building and testing container images.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "InstanceBlockDeviceMapping": {
      "description": "Defines block device mappings for the instance used to configure your image. ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DeviceName": {
          "description": "The device to which these mappings apply.",
          "type": "string",
          "markdownDescription": "The device to which these mappings apply.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "VirtualName": {
          "description": "Use to manage instance ephemeral devices.",
          "type": "string",
          "markdownDescription": "Use to manage instance ephemeral devices.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "NoDevice": {
          "description": "Use to remove a mapping from the parent image.",
          "type": "string",
          "markdownDescription": "Use to remove a mapping from the parent image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Ebs": {
          "description": "Use to manage Amazon EBS-specific configuration for this mapping.",
          "$ref": "#/definitions/EbsInstanceBlockDeviceSpecification",
          "markdownDescription": "Use to manage Amazon EBS-specific configuration for this mapping.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Defines block device mappings for the instance used to configure your image. \n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EbsInstanceBlockDeviceSpecification": {
      "additionalProperties": false,
      "description": "Amazon EBS-specific block device mapping specifications. ",
      "type": "object",
      "properties": {
        "Encrypted": {
          "description": "Use to configure device encryption.",
          "type": "boolean",
          "markdownDescription": "Use to configure device encryption.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "DeleteOnTermination": {
          "description": "Use to configure delete on termination of the associated device.",
          "type": "boolean",
          "markdownDescription": "Use to configure delete on termination of the associated device.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Iops": {
          "description": "Use to configure device IOPS.",
          "type": "integer",
          "markdownDescription": "Use to configure device IOPS.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "KmsKeyId": {
          "description": "Use to configure the KMS key to use when encrypting the device.",
          "type": "string",
          "markdownDescription": "Use to configure the KMS key to use when encrypting the device.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SnapshotId": {
          "description": "The snapshot that defines the device contents.",
          "type": "string",
          "markdownDescription": "The snapshot that defines the device contents.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Throughput": {
          "description": "For GP3 volumes only - The throughput in MiB/s that the volume supports.",
          "type": "integer",
          "markdownDescription": "For GP3 volumes only - The throughput in MiB/s that the volume supports.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "VolumeSize": {
          "description": "Use to override the device's volume size.",
          "type": "integer",
          "markdownDescription": "Use to override the device's volume size.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "VolumeType": {
          "description": "Use to override the device's volume type.",
          "type": "string",
          "enum": [
            "standard",
            "io1",
            "io2",
            "gp2",
            "gp3",
            "sc1",
            "st1"
          ],
          "markdownDescription": "Use to override the device's volume type.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: standard | io1 | io2 | gp2 | gp3 | sc1 | st1  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Amazon EBS-specific block device mapping specifications. \n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TargetContainerRepository": {
      "description": "The container repository where the output container image is stored.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Service": {
          "description": "Specifies the service in which this image was registered.",
          "type": "string",
          "enum": [
            "ECR"
          ],
          "markdownDescription": "Specifies the service in which this image was registered.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ECR  \nUpdate requires: No interruption\n"
        },
        "RepositoryName": {
          "description": "The name of the container repository where the output container image is stored. This name is prefixed by the repository location.",
          "type": "string",
          "markdownDescription": "The name of the container repository where the output container image is stored. This name is prefixed by the repository location.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "The container repository where the output container image is stored.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ComponentParameter": {
      "additionalProperties": false,
      "description": "Contains a key/value pair that sets the named component parameter.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the component parameter to set.",
          "type": "string",
          "markdownDescription": "The name of the component parameter to set.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "description": "Sets the value for the named component parameter.",
          "type": "array",
          "insertionOrder": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "Sets the value for the named component parameter.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Name",
        "Value"
      ],
      "markdownDescription": "Contains a key/value pair that sets the named component parameter.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "additionalProperties": false,
  "oneOf": [
    {
      "required": [
        "Name",
        "Version",
        "Components",
        "ParentImage",
        "TargetRepository",
        "ContainerType"
      ]
    }
  ],
  "readOnlyProperties": [
    "/properties/Arn"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/Version",
    "/properties/ContainerType",
    "/properties/TargetRepository",
    "/properties/InstanceConfiguration",
    "/properties/ParentImage",
    "/properties/Description",
    "/properties/DockerfileTemplateUri",
    "/properties/DockerfileTemplateData",
    "/properties/ImageOsVersionOverride",
    "/properties/KmsKeyId",
    "/properties/PlatformOverride",
    "/properties/WorkingDirectory",
    "/properties/Components"
  ],
  "writeOnlyProperties": [
    "/properties/DockerfileTemplateData",
    "/properties/DockerfileTemplateUri",
    "/properties/ImageOsVersionOverride",
    "/properties/PlatformOverride"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "imagebuilder:TagResource",
      "imagebuilder:UntagResource"
    ]
  },
  "handlers": {
    "create": {
      "permissions": [
        "iam:GetRole",
        "iam:CreateServiceLinkedRole",
        "imagebuilder:GetComponent",
        "imagebuilder:TagResource",
        "imagebuilder:GetContainerRecipe",
        "imagebuilder:CreateContainerRecipe",
        "imagebuilder:GetImage",
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:ReEncryptFrom",
        "kms:ReEncryptTo",
        "kms:GenerateDataKey",
        "kms:GenerateDataKeyPair",
        "kms:GenerateDataKeyPairWithoutPlaintext",
        "kms:GenerateDataKeyWithoutPlaintext",
        "s3:GetObject",
        "s3:ListBucket",
        "ecr:DescribeRepositories",
        "ec2:DescribeImages"
      ]
    },
    "read": {
      "permissions": [
        "imagebuilder:GetContainerRecipe",
        "kms:Decrypt"
      ]
    },
    "update": {
      "permissions": [
        "imagebuilder:TagResource",
        "imagebuilder:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "imagebuilder:UntagResource",
        "imagebuilder:GetContainerRecipe",
        "imagebuilder:DeleteContainerRecipe"
      ]
    },
    "list": {
      "permissions": [
        "imagebuilder:ListContainerRecipes"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "description": "The Amazon Resource Name (ARN) of the container recipe.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the container recipe.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}