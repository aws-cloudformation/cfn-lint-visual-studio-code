{
  "typeName": "AWS::EntityResolution::SchemaMapping",
  "description": "SchemaMapping defined in AWS Entity Resolution service",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-entity-resolution.git",
  "definitions": {
    "EntityName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^[a-zA-Z_0-9-]*$  \nUpdate requires: No interruption"
    },
    "Description": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "AttributeName": {
      "type": "string",
      "minLength": 0,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nPattern: ^[a-zA-Z_0-9- \\t]*$  \nUpdate requires: No interruption"
    },
    "SchemaAttributeType": {
      "type": "string",
      "enum": [
        "NAME",
        "NAME_FIRST",
        "NAME_MIDDLE",
        "NAME_LAST",
        "ADDRESS",
        "ADDRESS_STREET1",
        "ADDRESS_STREET2",
        "ADDRESS_STREET3",
        "ADDRESS_CITY",
        "ADDRESS_STATE",
        "ADDRESS_COUNTRY",
        "ADDRESS_POSTALCODE",
        "PHONE",
        "PHONE_NUMBER",
        "PHONE_COUNTRYCODE",
        "EMAIL_ADDRESS",
        "UNIQUE_ID",
        "DATE",
        "STRING"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NAME | NAME_FIRST | NAME_MIDDLE | NAME_LAST | ADDRESS | ADDRESS_STREET1 | ADDRESS_STREET2 | ADDRESS_STREET3 | ADDRESS_CITY | ADDRESS_STATE | ADDRESS_COUNTRY | ADDRESS_POSTALCODE | PHONE | PHONE_NUMBER | PHONE_COUNTRYCODE | EMAIL_ADDRESS | UNIQUE_ID | DATE | STRING  \nUpdate requires: No interruption"
    },
    "MappedInputFields": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SchemaInputAttribute"
      },
      "minItems": 2,
      "maxItems": 25,
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SchemaInputAttribute": {
      "type": "object",
      "properties": {
        "FieldName": {
          "$ref": "#/definitions/AttributeName"
        },
        "Type": {
          "$ref": "#/definitions/SchemaAttributeType"
        },
        "GroupName": {
          "$ref": "#/definitions/AttributeName"
        },
        "MatchKey": {
          "$ref": "#/definitions/AttributeName"
        }
      },
      "required": [
        "FieldName",
        "Type"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SchemaMappingArn": {
      "description": "The SchemaMapping arn associated with the Schema",
      "type": "string",
      "markdownDescription": "The SchemaMapping arn associated with the Schema\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):entityresolution:.*:[0-9]+:(schemamapping/.*)$  \nUpdate requires: No interruption"
    },
    "CreatedAt": {
      "description": "The time of this SchemaMapping got created",
      "type": "string",
      "markdownDescription": "The time of this SchemaMapping got created\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "UpdatedAt": {
      "description": "The time of this SchemaMapping got last updated at",
      "type": "string",
      "markdownDescription": "The time of this SchemaMapping got last updated at\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "SchemaName": {
      "description": "The name of the SchemaMapping",
      "$ref": "#/definitions/EntityName",
      "markdownDescription": "The name of the SchemaMapping\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "The description of the SchemaMapping",
      "$ref": "#/definitions/Description",
      "markdownDescription": "The description of the SchemaMapping\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "MappedInputFields": {
      "description": "The SchemaMapping attributes input",
      "$ref": "#/definitions/MappedInputFields",
      "markdownDescription": "The SchemaMapping attributes input\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Tags": {
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "createOnlyProperties": [
    "/properties/SchemaName",
    "/properties/Description",
    "/properties/MappedInputFields"
  ],
  "readOnlyProperties": [
    "/properties/SchemaArn",
    "/properties/CreatedAt",
    "/properties/UpdatedAt"
  ],
  "primaryIdentifier": [
    "/properties/SchemaName"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "entityresolution:CreateSchemaMapping",
        "entityresolution:GetSchemaMapping",
        "entityresolution:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "entityresolution:GetSchemaMapping",
        "entityresolution:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "entityresolution:DeleteSchemaMapping",
        "entityresolution:GetSchemaMapping"
      ]
    },
    "update": {
      "permissions": [
        "entityresolution:GetSchemaMapping",
        "entityresolution:ListTagsForResource",
        "entityresolution:TagResource",
        "entityresolution:UntagResource"
      ]
    },
    "list": {
      "permissions": [
        "entityresolution:ListSchemaMappings"
      ]
    }
  },
  "required": [
    "SchemaName",
    "MappedInputFields"
  ],
  "additionalProperties": false,
  "attributes": {
    "SchemaArn": {
      "$ref": "#/definitions/SchemaMappingArn"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    }
  }
}