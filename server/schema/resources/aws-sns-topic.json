{
  "typeName": "AWS::SNS::Topic",
  "description": "Resource Type definition for AWS::SNS::Topic",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-sns",
  "additionalProperties": false,
  "properties": {
    "DisplayName": {
      "description": "The display name to use for an Amazon SNS topic with SMS subscriptions.",
      "type": "string",
      "markdownDescription": "The display name to use for an Amazon SNS topic with SMS subscriptions.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "KmsMasterKeyId": {
      "description": "The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms. For more examples, see KeyId in the AWS Key Management Service API Reference.\n\nThis property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).",
      "type": "string",
      "markdownDescription": "The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see Key Terms. For more examples, see KeyId in the AWS Key Management Service API Reference.\n\nThis property applies only to [server-side-encryption](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html).\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DataProtectionPolicy": {
      "description": "The body of the policy document you want to use for this topic.\n\nYou can only add one policy per topic.\n\nThe policy must be in JSON string format.\n\nLength Constraints: Maximum length of 30720",
      "type": "object",
      "markdownDescription": "The body of the policy document you want to use for this topic.\n\nYou can only add one policy per topic.\n\nThe policy must be in JSON string format.\n\nLength Constraints: Maximum length of 30720\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Subscription": {
      "description": "The SNS subscriptions (endpoints) for this topic.",
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Subscription"
      },
      "markdownDescription": "The SNS subscriptions (endpoints) for this topic.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "FifoTopic": {
      "description": "Set to true to create a FIFO topic.",
      "type": "boolean",
      "markdownDescription": "Set to true to create a FIFO topic.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: Replacement"
    },
    "ContentBasedDeduplication": {
      "description": "Enables content-based deduplication for FIFO topics. By default, ContentBasedDeduplication is set to false. If you create a FIFO topic and this attribute is false, you must specify a value for the MessageDeduplicationId parameter for the Publish action.\n\nWhen you set ContentBasedDeduplication to true, Amazon SNS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\n(Optional) To override the generated value, you can specify a value for the the MessageDeduplicationId parameter for the Publish action.\n\n",
      "type": "boolean",
      "markdownDescription": "Enables content-based deduplication for FIFO topics. By default, ContentBasedDeduplication is set to false. If you create a FIFO topic and this attribute is false, you must specify a value for the MessageDeduplicationId parameter for the Publish action.\n\nWhen you set ContentBasedDeduplication to true, Amazon SNS uses a SHA-256 hash to generate the MessageDeduplicationId using the body of the message (but not the attributes of the message).\n\n(Optional) To override the generated value, you can specify a value for the the MessageDeduplicationId parameter for the Publish action.\n\n\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "ArchivePolicy": {
      "description": "The archive policy determines the number of days Amazon SNS retains messages. You can set a retention period from 1 to 365 days.",
      "type": "object",
      "markdownDescription": "The archive policy determines the number of days Amazon SNS retains messages. You can set a retention period from 1 to 365 days.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "TopicName": {
      "description": "The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with .fifo.\n\nIf you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.",
      "type": "string",
      "markdownDescription": "The name of the topic you want to create. Topic names must include only uppercase and lowercase ASCII letters, numbers, underscores, and hyphens, and must be between 1 and 256 characters long. FIFO topic names must end with .fifo.\n\nIf you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the topic name. For more information, see Name Type.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement"
    },
    "SignatureVersion": {
      "description": "Version of the Amazon SNS signature used. If the SignatureVersion is 1, Signature is a Base64-encoded SHA1withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values. If the SignatureVersion is 2, Signature is a Base64-encoded SHA256withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values.",
      "type": "string",
      "markdownDescription": "Version of the Amazon SNS signature used. If the SignatureVersion is 1, Signature is a Base64-encoded SHA1withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values. If the SignatureVersion is 2, Signature is a Base64-encoded SHA256withRSA signature of the Message, MessageId, Type, Timestamp, and TopicArn values.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "TracingConfig": {
      "description": "Tracing mode of an Amazon SNS topic. By default TracingConfig is set to PassThrough, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to Active, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true. Only supported on standard topics.",
      "type": "string",
      "markdownDescription": "Tracing mode of an Amazon SNS topic. By default TracingConfig is set to PassThrough, and the topic passes through the tracing header it receives from an SNS publisher to its subscriptions. If set to Active, SNS will vend X-Ray segment data to topic owner account if the sampled flag in the tracing header is true. Only supported on standard topics.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DeliveryStatusLogging": {
      "description": "Delivery status logging configuration for supported protocols for an Amazon SNS topic.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/LoggingConfig"
      },
      "markdownDescription": "Delivery status logging configuration for supported protocols for an Amazon SNS topic.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "definitions": {
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, `_`, `.`, `/`, `=`, `+`, and `-`.",
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, `_`, `.`, `/`, `=`, `+`, and `-`.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 characters in length.",
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 characters in length.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Subscription": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Endpoint": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Endpoint",
        "Protocol"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LoggingConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Protocol": {
          "type": "string",
          "description": "Indicates one of the supported protocols for the SNS topic",
          "enum": [
            "http/s",
            "sqs",
            "lambda",
            "firehose",
            "application"
          ],
          "markdownDescription": "Indicates one of the supported protocols for the SNS topic\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: http/s | sqs | lambda | firehose | application  \nUpdate requires: No interruption"
        },
        "SuccessFeedbackRoleArn": {
          "type": "string",
          "description": "The IAM role ARN to be used when logging successful message deliveries in Amazon CloudWatch",
          "markdownDescription": "The IAM role ARN to be used when logging successful message deliveries in Amazon CloudWatch\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "SuccessFeedbackSampleRate": {
          "type": "string",
          "description": "The percentage of successful message deliveries to be logged in Amazon CloudWatch. Valid percentage values range from 0 to 100",
          "markdownDescription": "The percentage of successful message deliveries to be logged in Amazon CloudWatch. Valid percentage values range from 0 to 100\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "FailureFeedbackRoleArn": {
          "type": "string",
          "description": "The IAM role ARN to be used when logging failed message deliveries in Amazon CloudWatch",
          "markdownDescription": "The IAM role ARN to be used when logging failed message deliveries in Amazon CloudWatch\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Protocol"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "createOnlyProperties": [
    "/properties/TopicName",
    "/properties/FifoTopic"
  ],
  "primaryIdentifier": [
    "/properties/TopicArn"
  ],
  "readOnlyProperties": [
    "/properties/TopicArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "sns:CreateTopic",
        "sns:TagResource",
        "sns:Subscribe",
        "sns:GetTopicAttributes",
        "sns:PutDataProtectionPolicy",
        "iam:GetRole",
        "iam:PassRole"
      ]
    },
    "read": {
      "permissions": [
        "sns:GetTopicAttributes",
        "sns:ListTagsForResource",
        "sns:ListSubscriptionsByTopic",
        "sns:GetDataProtectionPolicy"
      ]
    },
    "update": {
      "permissions": [
        "sns:SetTopicAttributes",
        "sns:TagResource",
        "sns:UntagResource",
        "sns:Subscribe",
        "sns:Unsubscribe",
        "sns:GetTopicAttributes",
        "sns:ListTagsForResource",
        "sns:ListSubscriptionsByTopic",
        "sns:GetDataProtectionPolicy",
        "sns:PutDataProtectionPolicy",
        "iam:GetRole",
        "iam:PassRole"
      ]
    },
    "delete": {
      "permissions": [
        "sns:GetTopicAttributes",
        "sns:DeleteTopic"
      ]
    },
    "list": {
      "permissions": [
        "sns:ListTopics"
      ]
    }
  },
  "attributes": {
    "TopicArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}