{
  "typeName": "AWS::MediaConnect::Flow",
  "description": "Resource schema for AWS::MediaConnect::Flow",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-mediaconnect.git",
  "properties": {
    "FlowArn": {
      "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "EgressIp": {
      "description": "The IP address from which video will be sent to output destinations.",
      "type": "string",
      "markdownDescription": "The IP address from which video will be sent to output destinations.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Name": {
      "description": "The name of the flow.",
      "type": "string",
      "markdownDescription": "The name of the flow.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement\n"
    },
    "AvailabilityZone": {
      "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.",
      "type": "string",
      "markdownDescription": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "FlowAvailabilityZone": {
      "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)",
      "type": "string",
      "markdownDescription": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Source": {
      "description": "The source of the flow.",
      "$ref": "#/definitions/Source",
      "markdownDescription": "The source of the flow.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement\nRead only property: Yes"
    },
    "SourceFailoverConfig": {
      "description": "The source failover config of the flow.",
      "$ref": "#/definitions/FailoverConfig",
      "markdownDescription": "The source failover config of the flow.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "VpcInterfaces": {
      "type": "array",
      "description": "The VPC interfaces that you added to this flow.",
      "items": {
        "$ref": "#/definitions/VpcInterface"
      },
      "markdownDescription": "The VPC interfaces that you added to this flow.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "MediaStreams": {
      "type": "array",
      "description": "The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.",
      "items": {
        "$ref": "#/definitions/MediaStream"
      },
      "markdownDescription": "The media streams associated with the flow. You can associate any of these media streams with sources and outputs on the flow.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Maintenance": {
      "description": "The maintenance settings you want to use for the flow.",
      "$ref": "#/definitions/Maintenance",
      "markdownDescription": "The maintenance settings you want to use for the flow.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "SourceMonitoringConfig": {
      "description": "The source monitoring config of the flow.",
      "$ref": "#/definitions/SourceMonitoringConfig",
      "markdownDescription": "The source monitoring config of the flow.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "Source": {
      "description": "The settings for the source of the flow.",
      "type": "object",
      "properties": {
        "SourceArn": {
          "type": "string",
          "description": "The ARN of the source.",
          "markdownDescription": "The ARN of the source.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Decryption": {
          "$ref": "#/definitions/Encryption",
          "description": "The type of decryption that is used on the content ingested from this source.",
          "markdownDescription": "The type of decryption that is used on the content ingested from this source.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "description": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.",
          "markdownDescription": "A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "EntitlementArn": {
          "type": "string",
          "description": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.",
          "markdownDescription": "The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "GatewayBridgeSource": {
          "$ref": "#/definitions/GatewayBridgeSource",
          "description": "The source configuration for cloud flows receiving a stream from a bridge.",
          "markdownDescription": "The source configuration for cloud flows receiving a stream from a bridge.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "IngestIp": {
          "type": "string",
          "description": "The IP address that the flow will be listening on for incoming content.",
          "markdownDescription": "The IP address that the flow will be listening on for incoming content.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "IngestPort": {
          "type": "integer",
          "description": "The port that the flow will be listening on for incoming content.",
          "markdownDescription": "The port that the flow will be listening on for incoming content.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MaxBitrate": {
          "type": "integer",
          "description": "The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.",
          "markdownDescription": "The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MaxLatency": {
          "type": "integer",
          "description": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.",
          "markdownDescription": "The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MinLatency": {
          "type": "integer",
          "description": "The minimum latency in milliseconds.",
          "markdownDescription": "The minimum latency in milliseconds.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "Name": {
          "type": "string",
          "description": "The name of the source.",
          "markdownDescription": "The name of the source.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Protocol": {
          "type": "string",
          "enum": [
            "zixi-push",
            "rtp-fec",
            "rtp",
            "rist",
            "fujitsu-qos",
            "srt-listener",
            "srt-caller",
            "st2110-jpegxs",
            "cdi"
          ],
          "description": "The protocol that is used by the source.",
          "markdownDescription": "The protocol that is used by the source.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: zixi-push | rtp-fec | rtp | rist | fujitsu-qos | srt-listener | srt-caller | st2110-jpegxs | cdi  \nUpdate requires: No interruption\n"
        },
        "SenderIpAddress": {
          "type": "string",
          "description": "The IP address that the flow communicates with to initiate connection with the sender for fujitsu-qos protocol.",
          "markdownDescription": "The IP address that the flow communicates with to initiate connection with the sender for fujitsu-qos protocol.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SenderControlPort": {
          "type": "integer",
          "description": "The port that the flow uses to send outbound requests to initiate connection with the sender for fujitsu-qos protocol.",
          "markdownDescription": "The port that the flow uses to send outbound requests to initiate connection with the sender for fujitsu-qos protocol.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "StreamId": {
          "type": "string",
          "description": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.",
          "markdownDescription": "The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SourceIngestPort": {
          "type": "string",
          "description": "The port that the flow will be listening on for incoming content.(ReadOnly)",
          "markdownDescription": "The port that the flow will be listening on for incoming content.(ReadOnly)\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SourceListenerAddress": {
          "type": "string",
          "description": "Source IP or domain name for SRT-caller protocol.",
          "markdownDescription": "Source IP or domain name for SRT-caller protocol.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SourceListenerPort": {
          "type": "integer",
          "description": "Source port for SRT-caller protocol.",
          "markdownDescription": "Source port for SRT-caller protocol.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "VpcInterfaceName": {
          "type": "string",
          "description": "The name of the VPC Interface this Source is configured with.",
          "markdownDescription": "The name of the VPC Interface this Source is configured with.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "WhitelistCidr": {
          "type": "string",
          "description": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.",
          "markdownDescription": "The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "MaxSyncBuffer": {
          "type": "integer",
          "description": "The size of the buffer (in milliseconds) to use to sync incoming source data.",
          "markdownDescription": "The size of the buffer (in milliseconds) to use to sync incoming source data.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MediaStreamSourceConfigurations": {
          "type": "array",
          "description": "The media stream that is associated with the source, and the parameters for that association.",
          "items": {
            "$ref": "#/definitions/MediaStreamSourceConfiguration"
          },
          "markdownDescription": "The media stream that is associated with the source, and the parameters for that association.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The settings for the source of the flow.\n\n---\n\nRequired: No  \nUpdate requires: Replacement\nRead only property: Yes"
    },
    "Encryption": {
      "type": "object",
      "description": "Information about the encryption of the flow.",
      "properties": {
        "Algorithm": {
          "type": "string",
          "enum": [
            "aes128",
            "aes192",
            "aes256"
          ],
          "description": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).",
          "markdownDescription": "The type of algorithm that is used for the encryption (such as aes128, aes192, or aes256).\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: aes128 | aes192 | aes256  \nUpdate requires: No interruption\n"
        },
        "ConstantInitializationVector": {
          "type": "string",
          "description": "A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.",
          "markdownDescription": "A 128-bit, 16-byte hex value represented by a 32-character string, to be used with the key for encrypting content. This parameter is not valid for static key encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "DeviceId": {
          "type": "string",
          "description": "The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.",
          "markdownDescription": "The value of one of the devices that you configured with your digital rights management (DRM) platform key provider. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "KeyType": {
          "type": "string",
          "enum": [
            "speke",
            "static-key",
            "srt-password"
          ],
          "description": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).",
          "default": "static-key",
          "markdownDescription": "The type of key that is used for the encryption. If no keyType is provided, the service will use the default setting (static-key).\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: speke | static-key | srt-password  \nUpdate requires: No interruption\n"
        },
        "Region": {
          "type": "string",
          "description": "The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.",
          "markdownDescription": "The AWS Region that the API Gateway proxy endpoint was created in. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "ResourceId": {
          "type": "string",
          "description": "An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.",
          "markdownDescription": "An identifier for the content. The service sends this value to the key server to identify the current endpoint. The resource ID is also known as the content ID. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "RoleArn": {
          "type": "string",
          "description": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).",
          "markdownDescription": "The ARN of the role that you created during setup (when you set up AWS Elemental MediaConnect as a trusted entity).\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SecretArn": {
          "type": "string",
          "description": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.",
          "markdownDescription": " The ARN of the secret that you created in AWS Secrets Manager to store the encryption key. This parameter is required for static key encryption and is not valid for SPEKE encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Url": {
          "type": "string",
          "description": "The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.",
          "markdownDescription": "The URL from the API Gateway proxy that you set up to talk to your key server. This parameter is required for SPEKE encryption and is not valid for static key encryption.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "RoleArn"
      ],
      "markdownDescription": "Information about the encryption of the flow.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "FailoverConfig": {
      "type": "object",
      "description": "The settings for source failover",
      "properties": {
        "State": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "RecoveryWindow": {
          "type": "integer",
          "description": "Search window time to look for dash-7 packets",
          "markdownDescription": "Search window time to look for dash-7 packets\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "FailoverMode": {
          "type": "string",
          "description": "The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.",
          "enum": [
            "MERGE",
            "FAILOVER"
          ],
          "markdownDescription": "The type of failover you choose for this flow. MERGE combines the source streams into a single stream, allowing graceful recovery from any single-source loss. FAILOVER allows switching between different streams.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: MERGE | FAILOVER  \nUpdate requires: No interruption\n"
        },
        "SourcePriority": {
          "type": "object",
          "description": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.",
          "properties": {
            "PrimarySource": {
              "type": "string",
              "description": "The name of the source you choose as the primary source for this flow.",
              "markdownDescription": "The name of the source you choose as the primary source for this flow.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
            }
          },
          "required": [
            "PrimarySource"
          ],
          "additionalProperties": false,
          "markdownDescription": "The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The settings for source failover\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "GatewayBridgeSource": {
      "type": "object",
      "description": "The source configuration for cloud flows receiving a stream from a bridge.",
      "properties": {
        "BridgeArn": {
          "type": "string",
          "description": "The ARN of the bridge feeding this flow.",
          "markdownDescription": "The ARN of the bridge feeding this flow.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "VpcInterfaceAttachment": {
          "$ref": "#/definitions/VpcInterfaceAttachment",
          "description": "The name of the VPC interface attachment to use for this bridge source.",
          "markdownDescription": "The name of the VPC interface attachment to use for this bridge source.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "BridgeArn"
      ],
      "markdownDescription": "The source configuration for cloud flows receiving a stream from a bridge.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "VpcInterfaceAttachment": {
      "type": "object",
      "description": "The settings for attaching a VPC interface to an resource.",
      "properties": {
        "VpcInterfaceName": {
          "type": "string",
          "description": "The name of the VPC interface to use for this resource.",
          "markdownDescription": "The name of the VPC interface to use for this resource.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The settings for attaching a VPC interface to an resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "VpcInterface": {
      "type": "object",
      "description": "The details of a VPC interface.",
      "properties": {
        "Name": {
          "type": "string",
          "description": "Immutable and has to be a unique against other VpcInterfaces in this Flow.",
          "markdownDescription": "Immutable and has to be a unique against other VpcInterfaces in this Flow.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "NetworkInterfaceType": {
          "type": "string",
          "description": "The type of network adapter that you want MediaConnect to use on this interface. If you don't set this value, it defaults to ENA.",
          "enum": [
            "ena",
            "efa"
          ],
          "markdownDescription": "The type of network adapter that you want MediaConnect to use on this interface. If you don't set this value, it defaults to ENA.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ena | efa  \nUpdate requires: No interruption\n"
        },
        "RoleArn": {
          "type": "string",
          "description": "Role Arn MediaConnect can assume to create ENIs in customer's account.",
          "markdownDescription": "Role Arn MediaConnect can assume to create ENIs in customer's account.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "SecurityGroupIds": {
          "type": "array",
          "description": "Security Group IDs to be used on ENI.",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "Security Group IDs to be used on ENI.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "SubnetId": {
          "type": "string",
          "description": "Subnet must be in the AZ of the Flow",
          "markdownDescription": "Subnet must be in the AZ of the Flow\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "NetworkInterfaceIds": {
          "type": "array",
          "description": "IDs of the network interfaces created in customer's account by MediaConnect.",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "IDs of the network interfaces created in customer's account by MediaConnect.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "Name",
        "RoleArn",
        "SecurityGroupIds",
        "SubnetId"
      ],
      "markdownDescription": "The details of a VPC interface.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Maintenance": {
      "type": "object",
      "description": "The maintenance setting of a flow.",
      "properties": {
        "MaintenanceDay": {
          "type": "string",
          "description": "A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.",
          "enum": [
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "markdownDescription": "A day of a week when the maintenance will happen. Use Monday/Tuesday/Wednesday/Thursday/Friday/Saturday/Sunday.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Monday | Tuesday | Wednesday | Thursday | Friday | Saturday | Sunday  \nUpdate requires: No interruption\n"
        },
        "MaintenanceStartHour": {
          "type": "string",
          "description": "UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.",
          "markdownDescription": "UTC time when the maintenance will happen. Use 24-hour HH:MM format. Minutes must be 00. Example: 13:00. The default value is 02:00.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "MaintenanceDay",
        "MaintenanceStartHour"
      ],
      "markdownDescription": "The maintenance setting of a flow.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "MediaStream": {
      "type": "object",
      "description": "A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.",
      "properties": {
        "MediaStreamId": {
          "type": "integer",
          "description": "A unique identifier for the media stream.",
          "markdownDescription": "A unique identifier for the media stream.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "MediaStreamType": {
          "type": "string",
          "description": "The type of media stream.",
          "enum": [
            "video",
            "audio",
            "ancillary-data"
          ],
          "markdownDescription": "The type of media stream.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: video | audio | ancillary-data  \nUpdate requires: No interruption\n"
        },
        "VideoFormat": {
          "type": "string",
          "description": "The resolution of the video.",
          "enum": [
            "2160p",
            "1080p",
            "1080i",
            "720p",
            "480p"
          ],
          "markdownDescription": "The resolution of the video.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: 2160p | 1080p | 1080i | 720p | 480p  \nUpdate requires: No interruption\n"
        },
        "MediaStreamName": {
          "type": "string",
          "description": "A name that helps you distinguish one media stream from another.",
          "markdownDescription": "A name that helps you distinguish one media stream from another.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "description": "A description that can help you quickly identify what your media stream is used for.",
          "markdownDescription": "A description that can help you quickly identify what your media stream is used for.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Attributes": {
          "$ref": "#/definitions/MediaStreamAttributes",
          "description": "Attributes that are related to the media stream.",
          "markdownDescription": "Attributes that are related to the media stream.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "ClockRate": {
          "type": "integer",
          "description": "The sample rate for the stream. This value in measured in kHz.",
          "markdownDescription": "The sample rate for the stream. This value in measured in kHz.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "Fmt": {
          "type": "integer",
          "description": "The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.",
          "markdownDescription": "The format type number (sometimes referred to as RTP payload type) of the media stream. MediaConnect assigns this value to the media stream. For ST 2110 JPEG XS outputs, you need to provide this value to the receiver.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "MediaStreamId",
        "MediaStreamType",
        "MediaStreamName"
      ],
      "markdownDescription": "A single track or stream of media that contains video, audio, or ancillary data. After you add a media stream to a flow, you can associate it with sources and outputs on that flow, as long as they use the CDI protocol or the ST 2110 JPEG XS protocol. Each source or output can consist of one or many media streams.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "MediaStreamAttributes": {
      "type": "object",
      "description": "Attributes that are related to the media stream.",
      "properties": {
        "Fmtp": {
          "$ref": "#/definitions/Fmtp",
          "description": "A set of parameters that define the media stream.",
          "markdownDescription": "A set of parameters that define the media stream.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "Lang": {
          "type": "string",
          "description": "The audio language, in a format that is recognized by the receiver.",
          "markdownDescription": "The audio language, in a format that is recognized by the receiver.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Attributes that are related to the media stream.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Fmtp": {
      "type": "object",
      "description": "A set of parameters that define the media stream.",
      "properties": {
        "ExactFramerate": {
          "type": "string",
          "description": "The frame rate for the video stream, in frames/second. For example: 60000/1001.",
          "markdownDescription": "The frame rate for the video stream, in frames/second. For example: 60000/1001.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Colorimetry": {
          "type": "string",
          "description": "The format used for the representation of color.",
          "enum": [
            "BT601",
            "BT709",
            "BT2020",
            "BT2100",
            "ST2065-1",
            "ST2065-3",
            "XYZ"
          ],
          "markdownDescription": "The format used for the representation of color.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: BT601 | BT709 | BT2020 | BT2100 | ST2065-1 | ST2065-3 | XYZ  \nUpdate requires: No interruption\n"
        },
        "ScanMode": {
          "type": "string",
          "description": "The type of compression that was used to smooth the video's appearance.",
          "enum": [
            "progressive",
            "interlace",
            "progressive-segmented-frame"
          ],
          "markdownDescription": "The type of compression that was used to smooth the video's appearance.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: progressive | interlace | progressive-segmented-frame  \nUpdate requires: No interruption\n"
        },
        "Tcs": {
          "type": "string",
          "description": "The transfer characteristic system (TCS) that is used in the video.",
          "enum": [
            "SDR",
            "PQ",
            "HLG",
            "LINEAR",
            "BT2100LINPQ",
            "BT2100LINHLG",
            "ST2065-1",
            "ST428-1",
            "DENSITY"
          ],
          "markdownDescription": "The transfer characteristic system (TCS) that is used in the video.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SDR | PQ | HLG | LINEAR | BT2100LINPQ | BT2100LINHLG | ST2065-1 | ST428-1 | DENSITY  \nUpdate requires: No interruption\n"
        },
        "Range": {
          "type": "string",
          "description": "The encoding range of the video.",
          "enum": [
            "NARROW",
            "FULL",
            "FULLPROTECT"
          ],
          "markdownDescription": "The encoding range of the video.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NARROW | FULL | FULLPROTECT  \nUpdate requires: No interruption\n"
        },
        "Par": {
          "type": "string",
          "description": "The pixel aspect ratio (PAR) of the video.",
          "markdownDescription": "The pixel aspect ratio (PAR) of the video.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "ChannelOrder": {
          "type": "string",
          "description": "The format of the audio channel.",
          "markdownDescription": "The format of the audio channel.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "A set of parameters that define the media stream.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "MediaStreamSourceConfiguration": {
      "type": "object",
      "description": "The media stream that is associated with the source, and the parameters for that association.",
      "properties": {
        "EncodingName": {
          "type": "string",
          "description": "The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.",
          "enum": [
            "jxsv",
            "raw",
            "smpte291",
            "pcm"
          ],
          "markdownDescription": "The format that was used to encode the data. For ancillary data streams, set the encoding name to smpte291. For audio streams, set the encoding name to pcm. For video, 2110 streams, set the encoding name to raw. For video, JPEG XS streams, set the encoding name to jxsv.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: jxsv | raw | smpte291 | pcm  \nUpdate requires: No interruption\n"
        },
        "InputConfigurations": {
          "type": "array",
          "description": "The media streams that you want to associate with the source.",
          "items": {
            "$ref": "#/definitions/InputConfiguration"
          },
          "markdownDescription": "The media streams that you want to associate with the source.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "MediaStreamName": {
          "type": "string",
          "description": "A name that helps you distinguish one media stream from another.",
          "markdownDescription": "A name that helps you distinguish one media stream from another.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "EncodingName",
        "MediaStreamName"
      ],
      "markdownDescription": "The media stream that is associated with the source, and the parameters for that association.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "InputConfiguration": {
      "type": "object",
      "description": "The transport parameters associated with an incoming media stream.",
      "properties": {
        "InputPort": {
          "type": "integer",
          "description": "The port that the flow listens on for an incoming media stream.",
          "markdownDescription": "The port that the flow listens on for an incoming media stream.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "Interface": {
          "$ref": "#/definitions/Interface",
          "description": "The VPC interface where the media stream comes in from.",
          "markdownDescription": "The VPC interface where the media stream comes in from.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "InputPort",
        "Interface"
      ],
      "markdownDescription": "The transport parameters associated with an incoming media stream.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Interface": {
      "type": "object",
      "description": "The VPC interface that you want to use for the media stream associated with the output.",
      "properties": {
        "Name": {
          "type": "string",
          "description": "The name of the VPC interface that you want to use for the media stream associated with the output.",
          "markdownDescription": "The name of the VPC interface that you want to use for the media stream associated with the output.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "required": [
        "Name"
      ],
      "markdownDescription": "The VPC interface that you want to use for the media stream associated with the output.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SourceMonitoringConfig": {
      "type": "object",
      "description": "The settings for source monitoring.",
      "properties": {
        "ThumbnailState": {
          "type": "string",
          "description": "The state of thumbnail monitoring.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "The state of thumbnail monitoring.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "ContentQualityAnalysisState": {
          "type": "string",
          "description": "Indicates whether content quality analysis is enabled or disabled.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "Indicates whether content quality analysis is enabled or disabled.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "AudioMonitoringSettings": {
          "type": "array",
          "description": "Contains the settings for audio stream metrics monitoring.",
          "items": {
            "$ref": "#/definitions/AudioMonitoringSetting"
          },
          "markdownDescription": "Contains the settings for audio stream metrics monitoring.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "VideoMonitoringSettings": {
          "type": "array",
          "description": "Contains the settings for video stream metrics monitoring.",
          "items": {
            "$ref": "#/definitions/VideoMonitoringSetting"
          },
          "markdownDescription": "Contains the settings for video stream metrics monitoring.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The settings for source monitoring.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AudioMonitoringSetting": {
      "type": "object",
      "description": "Specifies the configuration for audio stream metrics monitoring.",
      "properties": {
        "SilentAudio": {
          "$ref": "#/definitions/SilentAudio"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specifies the configuration for audio stream metrics monitoring.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SilentAudio": {
      "type": "object",
      "description": "Configures settings for the SilentAudio metric.",
      "properties": {
        "State": {
          "type": "string",
          "description": "Indicates whether the SilentAudio metric is enabled or disabled.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "Indicates whether the SilentAudio metric is enabled or disabled.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "ThresholdSeconds": {
          "type": "integer",
          "description": "Specifies the number of consecutive seconds of silence that triggers an event or alert.",
          "markdownDescription": "Specifies the number of consecutive seconds of silence that triggers an event or alert.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Configures settings for the SilentAudio metric.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "VideoMonitoringSetting": {
      "type": "object",
      "description": "Specifies the configuration for video stream metrics monitoring.",
      "properties": {
        "BlackFrames": {
          "$ref": "#/definitions/BlackFrames"
        },
        "FrozenFrames": {
          "$ref": "#/definitions/FrozenFrames"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specifies the configuration for video stream metrics monitoring.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "BlackFrames": {
      "type": "object",
      "description": "Configures settings for the BlackFrames metric.",
      "properties": {
        "State": {
          "type": "string",
          "description": "Indicates whether the BlackFrames metric is enabled or disabled.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "Indicates whether the BlackFrames metric is enabled or disabled.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "ThresholdSeconds": {
          "type": "integer",
          "description": "Specifies the number of consecutive seconds of black frames that triggers an event or alert.",
          "markdownDescription": "Specifies the number of consecutive seconds of black frames that triggers an event or alert.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Configures settings for the BlackFrames metric.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "FrozenFrames": {
      "type": "object",
      "description": "Configures settings for the FrozenFrames metric.",
      "properties": {
        "State": {
          "type": "string",
          "description": "Indicates whether the FrozenFrames metric is enabled or disabled.",
          "enum": [
            "ENABLED",
            "DISABLED"
          ],
          "markdownDescription": "Indicates whether the FrozenFrames metric is enabled or disabled.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption\n"
        },
        "ThresholdSeconds": {
          "type": "integer",
          "description": "Specifies the number of consecutive seconds of a static image that triggers an event or alert.",
          "markdownDescription": "Specifies the number of consecutive seconds of a static image that triggers an event or alert.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Configures settings for the FrozenFrames metric.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "required": [
    "Name",
    "Source"
  ],
  "additionalProperties": false,
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/AvailabilityZone",
    "/properties/Source/Name"
  ],
  "readOnlyProperties": [
    "/properties/FlowArn",
    "/properties/FlowAvailabilityZone",
    "/properties/Source/SourceArn",
    "/properties/Source/IngestIp",
    "/properties/Source/SourceIngestPort",
    "/properties/VpcInterfaces/*/NetworkInterfaceIds",
    "/properties/MediaStreams/*/Fmt",
    "/properties/EgressIp"
  ],
  "primaryIdentifier": [
    "/properties/FlowArn"
  ],
  "resourceLink": {
    "templateUri": "/mediaconnect/home?region=${awsRegion}#/flows/${flowArn}",
    "mappings": {
      "flowArn": "/FlowArn"
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "mediaconnect:CreateFlow",
        "iam:PassRole"
      ]
    },
    "read": {
      "permissions": [
        "mediaconnect:DescribeFlow"
      ]
    },
    "update": {
      "permissions": [
        "mediaconnect:DescribeFlow",
        "mediaconnect:UpdateFlow",
        "mediaconnect:UpdateFlowSource",
        "mediaconnect:UpdateFlowMediaStream",
        "mediaconnect:AddFlowMediaStreams",
        "mediaconnect:RemoveFlowMediaStream",
        "mediaconnect:AddFlowVpcInterfaces",
        "mediaconnect:RemoveFlowVpcInterface"
      ]
    },
    "delete": {
      "permissions": [
        "mediaconnect:DescribeFlow",
        "mediaconnect:DeleteFlow"
      ]
    },
    "list": {
      "permissions": [
        "mediaconnect:ListFlows"
      ]
    }
  },
  "attributes": {
    "FlowArn": {
      "description": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN), a unique identifier for any AWS resource, of the flow.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "EgressIp": {
      "description": "The IP address from which video will be sent to output destinations.",
      "type": "string",
      "markdownDescription": "The IP address from which video will be sent to output destinations.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "FlowAvailabilityZone": {
      "description": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)",
      "type": "string",
      "markdownDescription": "The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.(ReadOnly)\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}