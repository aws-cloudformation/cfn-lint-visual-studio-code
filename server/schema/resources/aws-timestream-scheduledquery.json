{
  "typeName": "AWS::Timestream::ScheduledQuery",
  "description": "The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-timestream.git",
  "definitions": {
    "Arn": {
      "description": "Amazon Resource Name of the scheduled query that is generated upon creation.",
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "Amazon Resource Name of the scheduled query that is generated upon creation.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "ScheduledQueryName": {
      "description": "The name of the scheduled query. Scheduled query names must be unique within each Region.",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "The name of the scheduled query. Scheduled query names must be unique within each Region.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: [a-zA-Z0-9_.-]+  \nUpdate requires: No interruption"
    },
    "QueryString": {
      "description": "The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.",
      "type": "string",
      "minLength": 1,
      "maxLength": 262144,
      "markdownDescription": "The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 262144  \nUpdate requires: No interruption"
    },
    "ScheduleConfiguration": {
      "description": "Configuration for when the scheduled query is executed.",
      "type": "object",
      "properties": {
        "ScheduleExpression": {
          "$ref": "#/definitions/ScheduleExpression"
        }
      },
      "required": [
        "ScheduleExpression"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration for when the scheduled query is executed.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NotificationConfiguration": {
      "description": "Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.",
      "type": "object",
      "properties": {
        "SnsConfiguration": {
          "$ref": "#/definitions/SnsConfiguration"
        }
      },
      "required": [
        "SnsConfiguration"
      ],
      "additionalProperties": false,
      "markdownDescription": "Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ClientToken": {
      "description": "Using a ClientToken makes the call to CreateScheduledQuery idempotent, in other words, making the same request repeatedly will produce the same result. Making multiple identical CreateScheduledQuery requests has the same effect as making a single request. If CreateScheduledQuery is called without a ClientToken, the Query SDK generates a ClientToken on your behalf. After 8 hours, any request with the same ClientToken is treated as a new request.",
      "type": "string",
      "minLength": 32,
      "maxLength": 128,
      "markdownDescription": "Using a ClientToken makes the call to CreateScheduledQuery idempotent, in other words, making the same request repeatedly will produce the same result. Making multiple identical CreateScheduledQuery requests has the same effect as making a single request. If CreateScheduledQuery is called without a ClientToken, the Query SDK generates a ClientToken on your behalf. After 8 hours, any request with the same ClientToken is treated as a new request.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 32  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "ScheduledQueryExecutionRoleArn": {
      "description": "The ARN for the IAM role that Timestream will assume when running the scheduled query.",
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "The ARN for the IAM role that Timestream will assume when running the scheduled query.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "TargetConfiguration": {
      "description": "Configuration of target store where scheduled query results are written to.",
      "type": "object",
      "properties": {
        "TimestreamConfiguration": {
          "$ref": "#/definitions/TimestreamConfiguration"
        }
      },
      "required": [
        "TimestreamConfiguration"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration of target store where scheduled query results are written to.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ErrorReportConfiguration": {
      "description": "Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.",
      "type": "object",
      "properties": {
        "S3Configuration": {
          "$ref": "#/definitions/S3Configuration"
        }
      },
      "required": [
        "S3Configuration"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "KmsKeyId": {
      "description": "The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/. If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.",
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/. If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "A list of key-value pairs to label the scheduled query.",
      "type": "array",
      "insertionOrder": false,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "A list of key-value pairs to label the scheduled query.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ScheduleExpression": {
      "description": "An expression that denotes when to trigger the scheduled query run. This can be a cron expression or a rate expression.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "An expression that denotes when to trigger the scheduled query run. This can be a cron expression or a rate expression.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
    },
    "SnsConfiguration": {
      "description": "SNS configuration for notification upon scheduled query execution.",
      "type": "object",
      "properties": {
        "TopicArn": {
          "$ref": "#/definitions/TopicArn"
        }
      },
      "required": [
        "TopicArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "SNS configuration for notification upon scheduled query execution.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TopicArn": {
      "description": "SNS topic ARN that the scheduled query status notifications will be sent to.",
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "SNS topic ARN that the scheduled query status notifications will be sent to.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "TimestreamConfiguration": {
      "description": "Configuration needed to write data into the Timestream database and table.",
      "type": "object",
      "properties": {
        "DatabaseName": {
          "$ref": "#/definitions/DatabaseName"
        },
        "TableName": {
          "$ref": "#/definitions/TableName"
        },
        "TimeColumn": {
          "$ref": "#/definitions/TimeColumn"
        },
        "DimensionMappings": {
          "$ref": "#/definitions/DimensionMappings"
        },
        "MultiMeasureMappings": {
          "$ref": "#/definitions/MultiMeasureMappings"
        },
        "MixedMeasureMappings": {
          "$ref": "#/definitions/MixedMeasureMappings"
        },
        "MeasureNameColumn": {
          "$ref": "#/definitions/MeasureNameColumn"
        }
      },
      "required": [
        "DatabaseName",
        "TableName",
        "TimeColumn",
        "DimensionMappings"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration needed to write data into the Timestream database and table.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatabaseName": {
      "description": "Name of Timestream database to which the query result will be written.",
      "type": "string",
      "markdownDescription": "Name of Timestream database to which the query result will be written.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "TableName": {
      "description": "Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.",
      "type": "string",
      "markdownDescription": "Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "TimeColumn": {
      "description": "Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.",
      "type": "string",
      "markdownDescription": "Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DimensionMappings": {
      "description": "This is to allow mapping column(s) from the query result to the dimension in the destination table.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/DimensionMapping"
      },
      "markdownDescription": "This is to allow mapping column(s) from the query result to the dimension in the destination table.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "DimensionMapping": {
      "description": "This type is used to map column(s) from the query result to a dimension in the destination table.",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/DimensionMappingName"
        },
        "DimensionValueType": {
          "$ref": "#/definitions/DimensionValueType"
        }
      },
      "required": [
        "Name",
        "DimensionValueType"
      ],
      "additionalProperties": false,
      "markdownDescription": "This type is used to map column(s) from the query result to a dimension in the destination table.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DimensionMappingName": {
      "description": "Column name from query result.",
      "type": "string",
      "markdownDescription": "Column name from query result.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DimensionValueType": {
      "description": "Type for the dimension.",
      "type": "string",
      "enum": [
        "VARCHAR"
      ],
      "markdownDescription": "Type for the dimension.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: VARCHAR  \nUpdate requires: No interruption"
    },
    "MultiMeasureMappings": {
      "description": "Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.",
      "type": "object",
      "properties": {
        "TargetMultiMeasureName": {
          "$ref": "#/definitions/TargetMultiMeasureName"
        },
        "MultiMeasureAttributeMappings": {
          "$ref": "#/definitions/MultiMeasureAttributeMappingList"
        }
      },
      "required": [
        "MultiMeasureAttributeMappings"
      ],
      "additionalProperties": false,
      "markdownDescription": "Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TargetMultiMeasureName": {
      "description": "Name of the target multi-measure in the derived table. Required if MeasureNameColumn is not provided. If MeasureNameColumn is provided then the value from that column will be used as the multi-measure name.",
      "type": "string",
      "markdownDescription": "Name of the target multi-measure in the derived table. Required if MeasureNameColumn is not provided. If MeasureNameColumn is provided then the value from that column will be used as the multi-measure name.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MultiMeasureAttributeMappingList": {
      "description": "Required. Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes.",
      "type": "array",
      "insertionOrder": false,
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/MultiMeasureAttributeMapping"
      },
      "markdownDescription": "Required. Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "MultiMeasureAttributeMapping": {
      "description": "An attribute mapping to be used for mapping query results to ingest data for multi-measure attributes.",
      "type": "object",
      "properties": {
        "SourceColumn": {
          "$ref": "#/definitions/MultiMeasureAttributeMappingSourceColumn"
        },
        "MeasureValueType": {
          "$ref": "#/definitions/MultiMeasureAttributeMappingMeasureValueType"
        },
        "TargetMultiMeasureAttributeName": {
          "$ref": "#/definitions/TargetMultiMeasureAttributeName"
        }
      },
      "required": [
        "SourceColumn",
        "MeasureValueType"
      ],
      "additionalProperties": false,
      "markdownDescription": "An attribute mapping to be used for mapping query results to ingest data for multi-measure attributes.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MultiMeasureAttributeMappingSourceColumn": {
      "description": "Source measure value column in the query result where the attribute value is to be read.",
      "type": "string",
      "markdownDescription": "Source measure value column in the query result where the attribute value is to be read.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MultiMeasureAttributeMappingMeasureValueType": {
      "description": "Value type of the measure value column to be read from the query result.",
      "type": "string",
      "enum": [
        "BIGINT",
        "BOOLEAN",
        "DOUBLE",
        "VARCHAR",
        "TIMESTAMP"
      ],
      "markdownDescription": "Value type of the measure value column to be read from the query result.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: BIGINT | BOOLEAN | DOUBLE | VARCHAR | TIMESTAMP  \nUpdate requires: No interruption"
    },
    "TargetMultiMeasureAttributeName": {
      "description": "Custom name to be used for attribute name in derived table. If not provided, source column name would be used.",
      "type": "string",
      "markdownDescription": "Custom name to be used for attribute name in derived table. If not provided, source column name would be used.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MixedMeasureMappings": {
      "description": "Specifies how to map measures to multi-measure records.",
      "type": "array",
      "insertionOrder": false,
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/MixedMeasureMapping"
      },
      "markdownDescription": "Specifies how to map measures to multi-measure records.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "MixedMeasureMapping": {
      "description": "MixedMeasureMappings are mappings that can be used to ingest data into a mixture of narrow and multi measures in the derived table.",
      "type": "object",
      "properties": {
        "MeasureName": {
          "$ref": "#/definitions/MixedMeasureMappingMeasureName"
        },
        "SourceColumn": {
          "$ref": "#/definitions/MixedMeasureMappingSourceColumn"
        },
        "TargetMeasureName": {
          "$ref": "#/definitions/MixedMeasureMappingTargetMeasureName"
        },
        "MeasureValueType": {
          "$ref": "#/definitions/MixedMeasureMappingMeasureValueType"
        },
        "MultiMeasureAttributeMappings": {
          "$ref": "#/definitions/MultiMeasureAttributeMappingList"
        }
      },
      "required": [
        "MeasureValueType"
      ],
      "additionalProperties": false,
      "markdownDescription": "MixedMeasureMappings are mappings that can be used to ingest data into a mixture of narrow and multi measures in the derived table.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MixedMeasureMappingMeasureName": {
      "description": "Refers to the value of the measure name in a result row. This field is required if MeasureNameColumn is provided.",
      "type": "string",
      "markdownDescription": "Refers to the value of the measure name in a result row. This field is required if MeasureNameColumn is provided.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MixedMeasureMappingSourceColumn": {
      "description": "This field refers to the source column from which the measure value is to be read for result materialization.",
      "type": "string",
      "markdownDescription": "This field refers to the source column from which the measure value is to be read for result materialization.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MixedMeasureMappingTargetMeasureName": {
      "description": "Target measure name to be used. If not provided, the target measure name by default would be MeasureName if provided, or SourceColumn otherwise.",
      "type": "string",
      "markdownDescription": "Target measure name to be used. If not provided, the target measure name by default would be MeasureName if provided, or SourceColumn otherwise.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MixedMeasureMappingMeasureValueType": {
      "description": "Type of the value that is to be read from SourceColumn. If the mapping is for MULTI, use MeasureValueType.MULTI.",
      "type": "string",
      "enum": [
        "BIGINT",
        "BOOLEAN",
        "DOUBLE",
        "VARCHAR",
        "MULTI"
      ],
      "markdownDescription": "Type of the value that is to be read from SourceColumn. If the mapping is for MULTI, use MeasureValueType.MULTI.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: BIGINT | BOOLEAN | DOUBLE | VARCHAR | MULTI  \nUpdate requires: No interruption"
    },
    "MeasureNameColumn": {
      "description": "Name of the measure name column from the query result.",
      "type": "string",
      "markdownDescription": "Name of the measure name column from the query result.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "S3Configuration": {
      "description": "Details on S3 location for error reports that result from running a query.",
      "type": "object",
      "properties": {
        "BucketName": {
          "$ref": "#/definitions/BucketName"
        },
        "ObjectKeyPrefix": {
          "$ref": "#/definitions/ObjectKeyPrefix"
        },
        "EncryptionOption": {
          "$ref": "#/definitions/EncryptionOption"
        }
      },
      "required": [
        "BucketName"
      ],
      "additionalProperties": false,
      "markdownDescription": "Details on S3 location for error reports that result from running a query.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "BucketName": {
      "description": "Name of the S3 bucket under which error reports will be created.",
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "markdownDescription": "Name of the S3 bucket under which error reports will be created.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: [a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]  \nUpdate requires: No interruption"
    },
    "ObjectKeyPrefix": {
      "description": "Prefix for error report keys.",
      "type": "string",
      "minLength": 1,
      "maxLength": 896,
      "markdownDescription": "Prefix for error report keys.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 896  \nPattern: [a-zA-Z0-9|!\\-_*'\\(\\)]([a-zA-Z0-9]|[!\\-_*'\\(\\)\\/.])+  \nUpdate requires: No interruption"
    },
    "EncryptionOption": {
      "description": "Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose SSE_S3 as default.",
      "type": "string",
      "enum": [
        "SSE_S3",
        "SSE_KMS"
      ],
      "markdownDescription": "Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose SSE_S3 as default.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SSE_S3 | SSE_KMS  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to label the scheduled query.",
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/Key"
        },
        "Value": {
          "$ref": "#/definitions/Value"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to label the scheduled query.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Key": {
      "type": "string",
      "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "Value": {
      "type": "string",
      "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
      "minLength": 0,
      "maxLength": 256,
      "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "ScheduledQueryName": {
      "$ref": "#/definitions/ScheduledQueryName"
    },
    "QueryString": {
      "$ref": "#/definitions/QueryString"
    },
    "ScheduleConfiguration": {
      "$ref": "#/definitions/ScheduleConfiguration"
    },
    "NotificationConfiguration": {
      "$ref": "#/definitions/NotificationConfiguration"
    },
    "ClientToken": {
      "$ref": "#/definitions/ClientToken"
    },
    "ScheduledQueryExecutionRoleArn": {
      "$ref": "#/definitions/ScheduledQueryExecutionRoleArn"
    },
    "TargetConfiguration": {
      "$ref": "#/definitions/TargetConfiguration"
    },
    "ErrorReportConfiguration": {
      "$ref": "#/definitions/ErrorReportConfiguration"
    },
    "KmsKeyId": {
      "$ref": "#/definitions/KmsKeyId"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "required": [
    "QueryString",
    "ScheduleConfiguration",
    "NotificationConfiguration",
    "ScheduledQueryExecutionRoleArn",
    "ErrorReportConfiguration"
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/ScheduledQueryName",
    "/properties/QueryString",
    "/properties/ScheduleConfiguration",
    "/properties/NotificationConfiguration",
    "/properties/ClientToken",
    "/properties/ScheduledQueryExecutionRoleArn",
    "/properties/TargetConfiguration",
    "/properties/ErrorReportConfiguration",
    "/properties/KmsKeyId"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/SQName",
    "/properties/SQQueryString",
    "/properties/SQScheduleConfiguration",
    "/properties/SQNotificationConfiguration",
    "/properties/SQScheduledQueryExecutionRoleArn",
    "/properties/SQTargetConfiguration",
    "/properties/SQErrorReportConfiguration",
    "/properties/SQKmsKeyId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "timestream:CreateScheduledQuery",
        "timestream:DescribeEndpoints"
      ]
    },
    "read": {
      "permissions": [
        "timestream:DescribeScheduledQuery",
        "timestream:ListTagsForResource",
        "timestream:DescribeEndpoints"
      ]
    },
    "update": {
      "permissions": [
        "timestream:UpdateScheduledQuery",
        "timestream:TagResource",
        "timestream:UntagResource",
        "timestream:DescribeEndpoints"
      ]
    },
    "delete": {
      "permissions": [
        "timestream:DeleteScheduledQuery",
        "timestream:DescribeEndpoints"
      ]
    },
    "list": {
      "permissions": [
        "timestream:ListScheduledQueries",
        "timestream:DescribeEndpoints"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "$ref": "#/definitions/Arn"
    },
    "SQName": {
      "description": "The name of the scheduled query. Scheduled query names must be unique within each Region.",
      "type": "string",
      "markdownDescription": "The name of the scheduled query. Scheduled query names must be unique within each Region.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQQueryString": {
      "description": "The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.",
      "type": "string",
      "markdownDescription": "The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQScheduleConfiguration": {
      "description": "Configuration for when the scheduled query is executed.",
      "type": "string",
      "markdownDescription": "Configuration for when the scheduled query is executed.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQNotificationConfiguration": {
      "description": "Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.",
      "type": "string",
      "markdownDescription": "Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQScheduledQueryExecutionRoleArn": {
      "description": "The ARN for the IAM role that Timestream will assume when running the scheduled query.",
      "type": "string",
      "markdownDescription": "The ARN for the IAM role that Timestream will assume when running the scheduled query.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQTargetConfiguration": {
      "description": "Configuration of target store where scheduled query results are written to.",
      "type": "string",
      "markdownDescription": "Configuration of target store where scheduled query results are written to.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQErrorReportConfiguration": {
      "description": "Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.",
      "type": "string",
      "markdownDescription": "Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SQKmsKeyId": {
      "description": "The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/. If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.",
      "type": "string",
      "markdownDescription": "The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/. If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}