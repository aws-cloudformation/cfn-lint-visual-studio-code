{
  "typeName": "AWS::EC2::VerifiedAccessEndpoint",
  "description": "The AWS::EC2::VerifiedAccessEndpoint resource creates an AWS EC2 Verified Access Endpoint.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-ec2-verified-access.aws-ec2-verifiedaccessendpoint",
  "properties": {
    "VerifiedAccessGroupId": {
      "description": "The ID of the AWS Verified Access group.",
      "type": "string",
      "markdownDescription": "The ID of the AWS Verified Access group.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "SecurityGroupIds": {
      "description": "The IDs of the security groups for the endpoint.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SecurityGroupId"
      },
      "markdownDescription": "The IDs of the security groups for the endpoint.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: Replacement"
    },
    "NetworkInterfaceOptions": {
      "description": "The options for network-interface type endpoint.",
      "$ref": "#/definitions/NetworkInterfaceOptions",
      "markdownDescription": "The options for network-interface type endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "LoadBalancerOptions": {
      "description": "The load balancer details if creating the AWS Verified Access endpoint as load-balancer type.",
      "$ref": "#/definitions/LoadBalancerOptions",
      "markdownDescription": "The load balancer details if creating the AWS Verified Access endpoint as load-balancer type.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "EndpointType": {
      "description": "The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.",
      "type": "string",
      "markdownDescription": "The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.The type of AWS Verified Access endpoint. Incoming application requests will be sent to an IP address, load balancer or a network interface depending on the endpoint type specified.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "EndpointDomainPrefix": {
      "description": "A custom identifier that gets prepended to a DNS name that is generated for the endpoint.",
      "type": "string",
      "markdownDescription": "A custom identifier that gets prepended to a DNS name that is generated for the endpoint.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "DomainCertificateArn": {
      "description": "The ARN of a public TLS/SSL certificate imported into or created with ACM.",
      "type": "string",
      "markdownDescription": "The ARN of a public TLS/SSL certificate imported into or created with ACM.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "AttachmentType": {
      "description": "The type of attachment used to provide connectivity between the AWS Verified Access endpoint and the application.",
      "type": "string",
      "markdownDescription": "The type of attachment used to provide connectivity between the AWS Verified Access endpoint and the application.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "ApplicationDomain": {
      "description": "The DNS name for users to reach your application.",
      "type": "string",
      "markdownDescription": "The DNS name for users to reach your application.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "A description for the AWS Verified Access endpoint.",
      "type": "string",
      "markdownDescription": "A description for the AWS Verified Access endpoint.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "PolicyDocument": {
      "description": "The AWS Verified Access policy document.",
      "type": "string",
      "markdownDescription": "The AWS Verified Access policy document.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "PolicyEnabled": {
      "description": "The status of the Verified Access policy.",
      "type": "boolean",
      "markdownDescription": "The status of the Verified Access policy.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "definitions": {
    "SecurityGroupId": {
      "description": "The ID of a security group for the endpoint.",
      "type": "string",
      "markdownDescription": "The ID of a security group for the endpoint.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "NetworkInterfaceOptions": {
      "description": "The options for network-interface type endpoint.",
      "type": "object",
      "properties": {
        "NetworkInterfaceId": {
          "description": "The ID of the network interface.",
          "type": "string",
          "markdownDescription": "The ID of the network interface.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Port": {
          "description": "The IP port number.",
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "markdownDescription": "The IP port number.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "description": "The IP protocol.",
          "type": "string",
          "markdownDescription": "The IP protocol.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The options for network-interface type endpoint.\n\n---\n\nRequired: No  \nUpdate requires: Replacement"
    },
    "LoadBalancerOptions": {
      "description": "The load balancer details if creating the AWS Verified Access endpoint as load-balancertype.",
      "type": "object",
      "properties": {
        "LoadBalancerArn": {
          "description": "The ARN of the load balancer.",
          "type": "string",
          "markdownDescription": "The ARN of the load balancer.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Port": {
          "description": "The IP port number.",
          "type": "integer",
          "minimum": 1,
          "maximum": 65535,
          "markdownDescription": "The IP port number.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "description": "The IP protocol.",
          "type": "string",
          "markdownDescription": "The IP protocol.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "SubnetIds": {
          "description": "The IDs of the subnets.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/SubnetId"
          },
          "markdownDescription": "The IDs of the subnets.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The load balancer details if creating the AWS Verified Access endpoint as load-balancertype.\n\n---\n\nRequired: No  \nUpdate requires: Replacement"
    },
    "SubnetId": {
      "description": "The IDs of the subnet.",
      "type": "string",
      "markdownDescription": "The IDs of the subnet.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "ApplicationDomain",
    "AttachmentType",
    "DomainCertificateArn",
    "EndpointType",
    "VerifiedAccessGroupId",
    "EndpointDomainPrefix"
  ],
  "readOnlyProperties": [
    "/properties/VerifiedAccessEndpointId",
    "/properties/EndpointDomain",
    "/properties/CreationTime",
    "/properties/LastUpdatedTime",
    "/properties/Status",
    "/properties/DeviceValidationDomain",
    "/properties/VerifiedAccessInstanceId"
  ],
  "createOnlyProperties": [
    "/properties/ApplicationDomain",
    "/properties/AttachmentType",
    "/properties/DomainCertificateArn",
    "/properties/EndpointDomainPrefix",
    "/properties/EndpointType",
    "/properties/SecurityGroupIds",
    "/properties/NetworkInterfaceOptions/NetworkInterfaceId",
    "/properties/LoadBalancerOptions/LoadBalancerArn"
  ],
  "primaryIdentifier": [
    "/properties/VerifiedAccessEndpointId"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:CreateTags",
        "ec2:DescribeTags",
        "iam:CreateServiceLinkedRole",
        "iam:ListRoles",
        "acm:GetCertificateWithPK",
        "acm:DescribeCertificate",
        "acm:CreateCertificateRelation",
        "sso:GetManagedApplicationInstance",
        "sso:GetPeregrineStatus",
        "sso:GetSharedSsoConfiguration",
        "sso:CreateManagedApplicationInstance",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeAccountAttributes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeListenerCertificates",
        "acm:DeleteCertificateRelation",
        "ec2:DeleteTags",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "sso:DeleteManagedApplicationInstance"
      ],
      "timeoutInMinutes": 60
    },
    "read": {
      "permissions": [
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:DescribeTags",
        "acm:CreateCertificateRelation",
        "acm:DeleteCertificateRelation",
        "acm:DescribeCertificate",
        "acm:GetCertificateWithPK",
        "ec2:CreateTags",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:DeleteTags",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancers",
        "iam:CreateServiceLinkedRole",
        "iam:ListRoles",
        "sso:CreateManagedApplicationInstance",
        "sso:DeleteManagedApplicationInstance",
        "sso:GetManagedApplicationInstance",
        "sso:GetPeregrineStatus",
        "sso:GetSharedSsoConfiguration"
      ]
    },
    "update": {
      "permissions": [
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:DescribeTags",
        "ec2:DeleteTags",
        "ec2:CreateTags",
        "acm:GetCertificateWithPK",
        "acm:DescribeCertificate",
        "acm:CreateCertificateRelation",
        "acm:DeleteCertificateRelation",
        "sso:GetManagedApplicationInstance",
        "sso:GetPeregrineStatus",
        "sso:GetSharedSsoConfiguration",
        "sso:CreateManagedApplicationInstance",
        "sso:DeleteManagedApplicationInstance",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeAccountAttributes",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeListenerCertificates",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:DeleteVerifiedAccessEndpoint",
        "iam:CreateServiceLinkedRole",
        "iam:ListRoles"
      ],
      "timeoutInMinutes": 60
    },
    "delete": {
      "permissions": [
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeTags",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DeleteTags",
        "sso:DeleteManagedApplicationInstance",
        "acm:DeleteCertificateRelation",
        "acm:DescribeCertificate",
        "acm:CreateCertificateRelation",
        "acm:GetCertificateWithPK",
        "ec2:CreateTags",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancers",
        "iam:CreateServiceLinkedRole",
        "iam:ListRoles",
        "sso:CreateManagedApplicationInstance",
        "sso:GetManagedApplicationInstance",
        "sso:GetPeregrineStatus",
        "sso:GetSharedSsoConfiguration"
      ],
      "timeoutInMinutes": 60
    },
    "list": {
      "permissions": [
        "ec2:DescribeVerifiedAccessEndpoints",
        "ec2:DescribeTags",
        "acm:CreateCertificateRelation",
        "acm:DeleteCertificateRelation",
        "acm:DescribeCertificate",
        "acm:GetCertificateWithPK",
        "ec2:CreateTags",
        "ec2:CreateVerifiedAccessEndpoint",
        "ec2:DeleteTags",
        "ec2:DeleteVerifiedAccessEndpoint",
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:GetVerifiedAccessEndpointPolicy",
        "ec2:ModifyVerifiedAccessEndpoint",
        "ec2:ModifyVerifiedAccessEndpointPolicy",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeLoadBalancers",
        "iam:CreateServiceLinkedRole",
        "iam:ListRoles",
        "sso:CreateManagedApplicationInstance",
        "sso:DeleteManagedApplicationInstance",
        "sso:GetManagedApplicationInstance",
        "sso:GetPeregrineStatus",
        "sso:GetSharedSsoConfiguration"
      ]
    }
  },
  "attributes": {
    "VerifiedAccessEndpointId": {
      "description": "The ID of the AWS Verified Access endpoint.",
      "type": "string",
      "markdownDescription": "The ID of the AWS Verified Access endpoint.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "VerifiedAccessInstanceId": {
      "description": "The ID of the AWS Verified Access instance.",
      "type": "string",
      "markdownDescription": "The ID of the AWS Verified Access instance.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Status": {
      "description": "The endpoint status.",
      "type": "string",
      "markdownDescription": "The endpoint status.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "EndpointDomain": {
      "description": "A DNS name that is generated for the endpoint.",
      "type": "string",
      "markdownDescription": "A DNS name that is generated for the endpoint.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DeviceValidationDomain": {
      "description": "Returned if endpoint has a device trust provider attached.",
      "type": "string",
      "markdownDescription": "Returned if endpoint has a device trust provider attached.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "CreationTime": {
      "description": "The creation time.",
      "type": "string",
      "markdownDescription": "The creation time.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastUpdatedTime": {
      "description": "The last updated time.",
      "type": "string",
      "markdownDescription": "The last updated time.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}