{
  "typeName": "AWS::QuickSight::DataSource",
  "description": "Definition of the AWS::QuickSight::DataSource Resource Type.",
  "definitions": {
    "AmazonElasticsearchParameters": {
      "type": "object",
      "description": "<p>The parameters for OpenSearch.</p>",
      "properties": {
        "Domain": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>The OpenSearch domain.</p>",
          "markdownDescription": "<p>The OpenSearch domain.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Domain"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for OpenSearch.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AmazonOpenSearchParameters": {
      "type": "object",
      "description": "<p>The parameters for OpenSearch.</p>",
      "properties": {
        "Domain": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>The OpenSearch domain.</p>",
          "markdownDescription": "<p>The OpenSearch domain.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Domain"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for OpenSearch.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AthenaParameters": {
      "type": "object",
      "description": "<p>Parameters for Amazon Athena.</p>",
      "properties": {
        "WorkGroup": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The workgroup that Amazon Athena uses.</p>",
          "markdownDescription": "<p>The workgroup that Amazon Athena uses.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "RoleArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 20,
          "description": "<p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>",
          "markdownDescription": "<p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific Athena data source. For example, say an account administrator has turned off all Athena access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow Athena access for the single Athena data source that is specified in the structure, even if the account-wide role forbidding Athena access is still active.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>Parameters for Amazon Athena.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AuroraParameters": {
      "type": "object",
      "description": "<p>Parameters for Amazon Aurora.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>Parameters for Amazon Aurora.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AuroraPostgreSqlParameters": {
      "type": "object",
      "description": "<p>Parameters for Amazon Aurora PostgreSQL-Compatible Edition.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The Amazon Aurora PostgreSQL-Compatible host to connect to.</p>",
          "markdownDescription": "<p>The Amazon Aurora PostgreSQL-Compatible host to connect to.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>The port that Amazon Aurora PostgreSQL is listening on.</p>",
          "markdownDescription": "<p>The port that Amazon Aurora PostgreSQL is listening on.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The Amazon Aurora PostgreSQL database to connect to.</p>",
          "markdownDescription": "<p>The Amazon Aurora PostgreSQL database to connect to.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>Parameters for Amazon Aurora PostgreSQL-Compatible Edition.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AwsIotAnalyticsParameters": {
      "type": "object",
      "description": "<p>The parameters for IoT Analytics.</p>",
      "properties": {
        "DataSetName": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Dataset name.</p>",
          "markdownDescription": "<p>Dataset name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DataSetName"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for IoT Analytics.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CredentialPair": {
      "type": "object",
      "description": "<p>The combination of user name and password that are used as credentials.</p>",
      "properties": {
        "Username": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>User name.</p>",
          "markdownDescription": "<p>User name.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "Password": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 1,
          "description": "<p>Password.</p>",
          "markdownDescription": "<p>Password.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "AlternateDataSourceParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSourceParameters"
          },
          "maxItems": 50,
          "minItems": 1,
          "description": "<p>A set of alternate data source parameters that you want to share for these\n            credentials. The credentials are applied in tandem with the data source parameters when\n            you copy a data source by using a create or update request. The API operation compares\n            the <code>DataSourceParameters</code> structure that's in the request with the\n            structures in the <code>AlternateDataSourceParameters</code> allow list. If the\n            structures are an exact match, the request is allowed to use the new data source with\n            the existing credentials. If the <code>AlternateDataSourceParameters</code> list is\n            null, the <code>DataSourceParameters</code> originally used with these\n                <code>Credentials</code> is automatically allowed.</p>",
          "markdownDescription": "<p>A set of alternate data source parameters that you want to share for these\n            credentials. The credentials are applied in tandem with the data source parameters when\n            you copy a data source by using a create or update request. The API operation compares\n            the <code>DataSourceParameters</code> structure that's in the request with the\n            structures in the <code>AlternateDataSourceParameters</code> allow list. If the\n            structures are an exact match, the request is allowed to use the new data source with\n            the existing credentials. If the <code>AlternateDataSourceParameters</code> list is\n            null, the <code>DataSourceParameters</code> originally used with these\n                <code>Credentials</code> is automatically allowed.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Password",
        "Username"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The combination of user name and password that are used as credentials.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSourceCredentials": {
      "type": "object",
      "description": "<p>Data source credentials. This is a variant type structure. For this structure to be\n            valid, only one of the attributes can be non-null.</p>",
      "properties": {
        "CredentialPair": {
          "$ref": "#/definitions/CredentialPair"
        },
        "CopySourceArn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you\n            want to use. When <code>CopySourceArn</code> is not null, the credential pair from the\n            data source in the ARN is used as the credentials for the\n            <code>DataSourceCredentials</code> structure.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of a data source that has the credential pair that you\n            want to use. When <code>CopySourceArn</code> is not null, the credential pair from the\n            data source in the ARN is used as the credentials for the\n            <code>DataSourceCredentials</code> structure.</p>\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:[-a-z0-9]*:quicksight:[-a-z0-9]*:[0-9]{12}:datasource/.+$  \nUpdate requires: No interruption"
        },
        "SecretArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "description": "<p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the secret associated with the data source in Amazon Secrets Manager.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:[-a-z0-9]*:secretsmanager:[-a-z0-9]*:[0-9]{12}:secret:.+$  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>Data source credentials. This is a variant type structure. For this structure to be\n            valid, only one of the attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSourceErrorInfo": {
      "type": "object",
      "description": "<p>Error information for the data source creation or update.</p>",
      "properties": {
        "Type": {
          "$ref": "#/definitions/DataSourceErrorInfoType"
        },
        "Message": {
          "type": "string",
          "description": "<p>Error message.</p>",
          "markdownDescription": "<p>Error message.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>Error information for the data source creation or update.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSourceErrorInfoType": {
      "type": "string",
      "enum": [
        "ACCESS_DENIED",
        "COPY_SOURCE_NOT_FOUND",
        "TIMEOUT",
        "ENGINE_VERSION_NOT_SUPPORTED",
        "UNKNOWN_HOST",
        "GENERIC_SQL_FAILURE",
        "CONFLICT",
        "UNKNOWN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ACCESS_DENIED | COPY_SOURCE_NOT_FOUND | TIMEOUT | ENGINE_VERSION_NOT_SUPPORTED | UNKNOWN_HOST | GENERIC_SQL_FAILURE | CONFLICT | UNKNOWN  \nUpdate requires: No interruption"
    },
    "DataSourceParameters": {
      "type": "object",
      "description": "<p>The parameters that Amazon QuickSight uses to connect to your underlying data source.\n            This is a variant type structure. For this structure to be valid, only one of the\n            attributes can be non-null.</p>",
      "properties": {
        "AmazonElasticsearchParameters": {
          "$ref": "#/definitions/AmazonElasticsearchParameters"
        },
        "AthenaParameters": {
          "$ref": "#/definitions/AthenaParameters"
        },
        "AuroraParameters": {
          "$ref": "#/definitions/AuroraParameters"
        },
        "AuroraPostgreSqlParameters": {
          "$ref": "#/definitions/AuroraPostgreSqlParameters"
        },
        "MariaDbParameters": {
          "$ref": "#/definitions/MariaDbParameters"
        },
        "MySqlParameters": {
          "$ref": "#/definitions/MySqlParameters"
        },
        "OracleParameters": {
          "$ref": "#/definitions/OracleParameters"
        },
        "PostgreSqlParameters": {
          "$ref": "#/definitions/PostgreSqlParameters"
        },
        "PrestoParameters": {
          "$ref": "#/definitions/PrestoParameters"
        },
        "RdsParameters": {
          "$ref": "#/definitions/RdsParameters"
        },
        "RedshiftParameters": {
          "$ref": "#/definitions/RedshiftParameters"
        },
        "S3Parameters": {
          "$ref": "#/definitions/S3Parameters"
        },
        "SnowflakeParameters": {
          "$ref": "#/definitions/SnowflakeParameters"
        },
        "SparkParameters": {
          "$ref": "#/definitions/SparkParameters"
        },
        "SqlServerParameters": {
          "$ref": "#/definitions/SqlServerParameters"
        },
        "TeradataParameters": {
          "$ref": "#/definitions/TeradataParameters"
        },
        "AmazonOpenSearchParameters": {
          "$ref": "#/definitions/AmazonOpenSearchParameters"
        },
        "DatabricksParameters": {
          "$ref": "#/definitions/DatabricksParameters"
        },
        "StarburstParameters": {
          "$ref": "#/definitions/StarburstParameters"
        },
        "TrinoParameters": {
          "$ref": "#/definitions/TrinoParameters"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters that Amazon QuickSight uses to connect to your underlying data source.\n            This is a variant type structure. For this structure to be valid, only one of the\n            attributes can be non-null.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSourceType": {
      "type": "string",
      "enum": [
        "ADOBE_ANALYTICS",
        "AMAZON_ELASTICSEARCH",
        "AMAZON_OPENSEARCH",
        "ATHENA",
        "AURORA",
        "AURORA_POSTGRESQL",
        "AWS_IOT_ANALYTICS",
        "DATABRICKS",
        "DENODO",
        "DREMIO",
        "DYNAMODB",
        "SAPHANA",
        "DB2_AS400",
        "EXASOL",
        "FILE",
        "GITHUB",
        "JIRA",
        "MARIADB",
        "MYSQL",
        "ORACLE",
        "POSTGRESQL",
        "PRESTO",
        "REDSHIFT",
        "S3",
        "SALESFORCE",
        "SERVICENOW",
        "SNOWFLAKE",
        "SPARK",
        "SQLSERVER",
        "TERADATA",
        "TIMESTREAM",
        "TWITTER",
        "BIGQUERY",
        "GOOGLE_ANALYTICS",
        "TRINO",
        "STARBURST",
        "MONGO",
        "MONGO_ATLAS",
        "DOCUMENTDB",
        "APPFLOW"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ADOBE_ANALYTICS | AMAZON_ELASTICSEARCH | AMAZON_OPENSEARCH | ATHENA | AURORA | AURORA_POSTGRESQL | AWS_IOT_ANALYTICS | DATABRICKS | DENODO | DREMIO | DYNAMODB | SAPHANA | DB2_AS400 | EXASOL | FILE | GITHUB | JIRA | MARIADB | MYSQL | ORACLE | POSTGRESQL | PRESTO | REDSHIFT | S3 | SALESFORCE | SERVICENOW | SNOWFLAKE | SPARK | SQLSERVER | TERADATA | TIMESTREAM | TWITTER | BIGQUERY | GOOGLE_ANALYTICS | TRINO | STARBURST | MONGO | MONGO_ATLAS | DOCUMENTDB | APPFLOW  \nUpdate requires: No interruption"
    },
    "DatabricksParameters": {
      "type": "object",
      "description": "<p>The parameters that are required to connect to a Databricks data source.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The host name of the Databricks data source.</p>",
          "markdownDescription": "<p>The host name of the Databricks data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>The port for the Databricks data source.</p>",
          "markdownDescription": "<p>The port for the Databricks data source.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "SqlEndpointPath": {
          "type": "string",
          "maxLength": 4096,
          "minLength": 1,
          "description": "<p>The HTTP path of the Databricks data source.</p>",
          "markdownDescription": "<p>The HTTP path of the Databricks data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 4096  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Host",
        "Port",
        "SqlEndpointPath"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters that are required to connect to a Databricks data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IdentityCenterConfiguration": {
      "type": "object",
      "description": "<p>The parameters for an IAM Identity Center configuration.</p>",
      "properties": {
        "EnableIdentityPropagation": {
          "type": "boolean",
          "default": null,
          "description": "<p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>",
          "markdownDescription": "<p>A Boolean option that controls whether Trusted Identity Propagation should be used.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for an IAM Identity Center configuration.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ManifestFileLocation": {
      "type": "object",
      "description": "<p>Amazon S3 manifest file location.</p>",
      "properties": {
        "Bucket": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 1,
          "description": "<p>Amazon S3 bucket.</p>",
          "markdownDescription": "<p>Amazon S3 bucket.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "Key": {
          "type": "string",
          "maxLength": 1024,
          "minLength": 1,
          "description": "<p>Amazon S3 key that identifies an object.</p>",
          "markdownDescription": "<p>Amazon S3 key that identifies an object.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>Amazon S3 manifest file location.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MariaDbParameters": {
      "type": "object",
      "description": "<p>The parameters for MariaDB.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for MariaDB.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MySqlParameters": {
      "type": "object",
      "description": "<p>The parameters for MySQL.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for MySQL.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OracleParameters": {
      "type": "object",
      "description": "<p>The parameters for Oracle.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>An Oracle host.</p>",
          "markdownDescription": "<p>An Oracle host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>The port.</p>",
          "markdownDescription": "<p>The port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The database.</p>",
          "markdownDescription": "<p>The database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Oracle.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PostgreSqlParameters": {
      "type": "object",
      "description": "<p>The parameters for PostgreSQL.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for PostgreSQL.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PrestoParameters": {
      "type": "object",
      "description": "<p>The parameters for Presto.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Catalog": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "description": "<p>Catalog.</p>",
          "markdownDescription": "<p>Catalog.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Catalog",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Presto.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RdsParameters": {
      "type": "object",
      "description": "<p>The parameters for Amazon RDS.</p>",
      "properties": {
        "InstanceId": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>Instance ID.</p>",
          "markdownDescription": "<p>Instance ID.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "InstanceId"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Amazon RDS.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedshiftIAMParameters": {
      "type": "object",
      "description": "<p>A structure that grants Amazon QuickSight access to your cluster and make a call to the <code>redshift:GetClusterCredentials</code> API. For more information on the <code>redshift:GetClusterCredentials</code> API, see <a href=\"https://docs.aws.amazon.com/redshift/latest/APIReference/API_GetClusterCredentials.html\">\n               <code>GetClusterCredentials</code>\n            </a>.</p>",
      "properties": {
        "RoleArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 20,
          "description": "<p>Use the <code>RoleArn</code> structure to allow Amazon QuickSight to call <code>redshift:GetClusterCredentials</code> on your cluster. The calling principal must have <code>iam:PassRole</code> access to pass the role to Amazon QuickSight. The role's trust policy must allow the Amazon QuickSight service principal to assume the role.</p>",
          "markdownDescription": "<p>Use the <code>RoleArn</code> structure to allow Amazon QuickSight to call <code>redshift:GetClusterCredentials</code> on your cluster. The calling principal must have <code>iam:PassRole</code> access to pass the role to Amazon QuickSight. The role's trust policy must allow the Amazon QuickSight service principal to assume the role.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        },
        "DatabaseUser": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>The user whose permissions and group memberships will be used by Amazon QuickSight to access the cluster. If this user already exists in your database, Amazon QuickSight is granted the same permissions that the user has. If the user doesn't exist, set the value of <code>AutoCreateDatabaseUser</code> to <code>True</code> to create a new user with PUBLIC permissions.</p>",
          "markdownDescription": "<p>The user whose permissions and group memberships will be used by Amazon QuickSight to access the cluster. If this user already exists in your database, Amazon QuickSight is granted the same permissions that the user has. If the user doesn't exist, set the value of <code>AutoCreateDatabaseUser</code> to <code>True</code> to create a new user with PUBLIC permissions.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "DatabaseGroups": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
          },
          "maxItems": 50,
          "minItems": 1,
          "description": "<p>A list of groups whose permissions will be granted to Amazon QuickSight to access the cluster. These permissions are combined with the permissions granted to Amazon QuickSight by the <code>DatabaseUser</code>. If you choose to include this parameter, the <code>RoleArn</code> must grant access to <code>redshift:JoinGroup</code>.</p>",
          "markdownDescription": "<p>A list of groups whose permissions will be granted to Amazon QuickSight to access the cluster. These permissions are combined with the permissions granted to Amazon QuickSight by the <code>DatabaseUser</code>. If you choose to include this parameter, the <code>RoleArn</code> must grant access to <code>redshift:JoinGroup</code>.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "AutoCreateDatabaseUser": {
          "type": "boolean",
          "default": false,
          "description": "<p>Automatically creates a database user. If your database doesn't have a <code>DatabaseUser</code>, set this parameter to <code>True</code>. If there is no <code>DatabaseUser</code>, Amazon QuickSight can't connect to your cluster. The <code>RoleArn</code> that you use for this operation must grant access to <code>redshift:CreateClusterUser</code> to successfully create the user.</p>",
          "markdownDescription": "<p>Automatically creates a database user. If your database doesn't have a <code>DatabaseUser</code>, set this parameter to <code>True</code>. If there is no <code>DatabaseUser</code>, Amazon QuickSight can't connect to your cluster. The <code>RoleArn</code> that you use for this operation must grant access to <code>redshift:CreateClusterUser</code> to successfully create the user.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "RoleArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>A structure that grants Amazon QuickSight access to your cluster and make a call to the <code>redshift:GetClusterCredentials</code> API. For more information on the <code>redshift:GetClusterCredentials</code> API, see <a href=\"https://docs.aws.amazon.com/redshift/latest/APIReference/API_GetClusterCredentials.html\">\n               <code>GetClusterCredentials</code>\n            </a>.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedshiftParameters": {
      "type": "object",
      "description": "<p>The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if\n            <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>",
          "markdownDescription": "<p>Host. This field can be blank if <code>ClusterId</code> is provided.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 0,
          "description": "<p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>",
          "markdownDescription": "<p>Port. This field can be blank if the <code>ClusterId</code> is provided.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "ClusterId": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are\n            provided.</p>",
          "markdownDescription": "<p>Cluster ID. This field can be blank if the <code>Host</code> and <code>Port</code> are\n            provided.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        },
        "IAMParameters": {
          "$ref": "#/definitions/RedshiftIAMParameters"
        },
        "IdentityCenterConfiguration": {
          "$ref": "#/definitions/IdentityCenterConfiguration"
        }
      },
      "required": [
        "Database"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Amazon Redshift. The <code>ClusterId</code> field can be blank if\n            <code>Host</code> and <code>Port</code> are both set. The <code>Host</code> and <code>Port</code> fields can be blank if the <code>ClusterId</code> field is set.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResourcePermission": {
      "type": "object",
      "description": "<p>Permission for the resource.</p>",
      "properties": {
        "Principal": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) of the principal. This can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>The ARN of an Amazon QuickSight user or group associated with a data source or dataset. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon QuickSight user, group, or namespace associated with an analysis, dashboard, template, or theme. (This is common.)</p>\n            </li>\n            <li>\n               <p>The ARN of an Amazon Web Services account root: This is an IAM ARN rather than a QuickSight\n                    ARN. Use this option only to share resources (templates) across Amazon Web Services accounts.\n                    (This is less common.) </p>\n            </li>\n         </ul>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Resource": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Actions": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "maxItems": 20,
          "minItems": 1,
          "description": "<p>The IAM action to grant or revoke permissions on.</p>",
          "markdownDescription": "<p>The IAM action to grant or revoke permissions on.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Actions",
        "Principal"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>Permission for the resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResourceStatus": {
      "type": "string",
      "enum": [
        "CREATION_IN_PROGRESS",
        "CREATION_SUCCESSFUL",
        "CREATION_FAILED",
        "UPDATE_IN_PROGRESS",
        "UPDATE_SUCCESSFUL",
        "UPDATE_FAILED",
        "DELETED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATION_IN_PROGRESS | CREATION_SUCCESSFUL | CREATION_FAILED | UPDATE_IN_PROGRESS | UPDATE_SUCCESSFUL | UPDATE_FAILED | DELETED  \nUpdate requires: No interruption"
    },
    "S3Parameters": {
      "type": "object",
      "description": "<p>The parameters for S3.</p>",
      "properties": {
        "ManifestFileLocation": {
          "$ref": "#/definitions/ManifestFileLocation"
        },
        "RoleArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 20,
          "description": "<p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>",
          "markdownDescription": "<p>Use the <code>RoleArn</code> structure to override an account-wide role for a specific S3 data source. For example, say an account administrator has turned off all S3 access with an account-wide role. The administrator can then use <code>RoleArn</code> to bypass the account-wide role and allow S3 access for the single S3 data source that is specified in the structure, even if the account-wide role forbidding S3 access is still active.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ManifestFileLocation"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for S3.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SnowflakeParameters": {
      "type": "object",
      "description": "<p>The parameters for Snowflake.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Warehouse": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "description": "<p>Warehouse.</p>",
          "markdownDescription": "<p>Warehouse.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Warehouse"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Snowflake.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SparkParameters": {
      "type": "object",
      "description": "<p>The parameters for Spark.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Spark.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SqlServerParameters": {
      "type": "object",
      "description": "<p>The parameters for SQL Server.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for SQL Server.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SslProperties": {
      "type": "object",
      "description": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your\n            underlying data source.</p>",
      "properties": {
        "DisableSsl": {
          "type": "boolean",
          "default": false,
          "description": "<p>A Boolean option to control whether SSL should be disabled.</p>",
          "markdownDescription": "<p>A Boolean option to control whether SSL should be disabled.</p>\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>Secure Socket Layer (SSL) properties that apply when Amazon QuickSight connects to your\n            underlying data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StarburstParameters": {
      "type": "object",
      "description": "<p>The parameters that are required to connect to a Starburst data source.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The host name of the Starburst data source.</p>",
          "markdownDescription": "<p>The host name of the Starburst data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>The port for the Starburst data source.</p>",
          "markdownDescription": "<p>The port for the Starburst data source.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Catalog": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "description": "<p>The catalog name for the Starburst data source.</p>",
          "markdownDescription": "<p>The catalog name for the Starburst data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "ProductType": {
          "$ref": "#/definitions/StarburstProductType"
        }
      },
      "required": [
        "Catalog",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters that are required to connect to a Starburst data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StarburstProductType": {
      "type": "string",
      "enum": [
        "GALAXY",
        "ENTERPRISE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: GALAXY | ENTERPRISE  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "description": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Tag key.</p>",
          "markdownDescription": "<p>Tag key.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Tag value.</p>",
          "markdownDescription": "<p>Tag value.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The key or keys of the key-value pairs for the resource tag or tags assigned to the\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TeradataParameters": {
      "type": "object",
      "description": "<p>The parameters for Teradata.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>Host.</p>",
          "markdownDescription": "<p>Host.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>Port.</p>",
          "markdownDescription": "<p>Port.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Database": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>Database.</p>",
          "markdownDescription": "<p>Database.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Database",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters for Teradata.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TrinoParameters": {
      "type": "object",
      "description": "<p>The parameters that are required to connect to a Trino data source.</p>",
      "properties": {
        "Host": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>The host name of the Trino data source.</p>",
          "markdownDescription": "<p>The host name of the Trino data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "number",
          "default": 0,
          "maximum": 65535,
          "minimum": 1,
          "description": "<p>The port for the Trino data source.</p>",
          "markdownDescription": "<p>The port for the Trino data source.</p>\n\n---\n\nRequired: Yes  \nType: Number  \nUpdate requires: No interruption"
        },
        "Catalog": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "description": "<p>The catalog name for the Trino data source.</p>",
          "markdownDescription": "<p>The catalog name for the Trino data source.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Catalog",
        "Host",
        "Port"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The parameters that are required to connect to a Trino data source.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcConnectionProperties": {
      "type": "object",
      "description": "<p>VPC connection properties.</p>",
      "properties": {
        "VpcConnectionArn": {
          "type": "string",
          "description": "<p>The Amazon Resource Name (ARN) for the VPC connection.</p>",
          "markdownDescription": "<p>The Amazon Resource Name (ARN) for the VPC connection.</p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "VpcConnectionArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>VPC connection properties.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "AlternateDataSourceParameters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataSourceParameters"
      },
      "maxItems": 50,
      "minItems": 1,
      "description": "<p>A set of alternate data source parameters that you want to share for the credentials\n            stored with this data source. The credentials are applied in tandem with the data source\n            parameters when you copy a data source by using a create or update request. The API\n            operation compares the <code>DataSourceParameters</code> structure that's in the request\n            with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the\n            structures are an exact match, the request is allowed to use the credentials from this\n            existing data source. If the <code>AlternateDataSourceParameters</code> list is null,\n            the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>\n            are automatically allowed.</p>",
      "markdownDescription": "<p>A set of alternate data source parameters that you want to share for the credentials\n            stored with this data source. The credentials are applied in tandem with the data source\n            parameters when you copy a data source by using a create or update request. The API\n            operation compares the <code>DataSourceParameters</code> structure that's in the request\n            with the structures in the <code>AlternateDataSourceParameters</code> allow list. If the\n            structures are an exact match, the request is allowed to use the credentials from this\n            existing data source. If the <code>AlternateDataSourceParameters</code> list is null,\n            the <code>Credentials</code> originally used with this <code>DataSourceParameters</code>\n            are automatically allowed.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AwsAccountId": {
      "type": "string",
      "maxLength": 12,
      "minLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nPattern: ^[0-9]{12}$  \nUpdate requires: Replacement"
    },
    "Credentials": {
      "$ref": "#/definitions/DataSourceCredentials"
    },
    "DataSourceId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement"
    },
    "DataSourceParameters": {
      "$ref": "#/definitions/DataSourceParameters"
    },
    "ErrorInfo": {
      "$ref": "#/definitions/DataSourceErrorInfo"
    },
    "Name": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "Permissions": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ResourcePermission"
      },
      "maxItems": 64,
      "minItems": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SslProperties": {
      "$ref": "#/definitions/SslProperties"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Type": {
      "$ref": "#/definitions/DataSourceType"
    },
    "VpcConnectionProperties": {
      "$ref": "#/definitions/VpcConnectionProperties"
    }
  },
  "required": [
    "Name",
    "Type"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreatedTime",
    "/properties/LastUpdatedTime",
    "/properties/Status"
  ],
  "writeOnlyProperties": [
    "/properties/Credentials"
  ],
  "createOnlyProperties": [
    "/properties/AwsAccountId",
    "/properties/DataSourceId",
    "/properties/Type"
  ],
  "primaryIdentifier": [
    "/properties/AwsAccountId",
    "/properties/DataSourceId"
  ],
  "handlers": {
    "read": {
      "permissions": [
        "quicksight:DescribeDataSource",
        "quicksight:DescribeDataSourcePermissions",
        "quicksight:ListTagsForResource"
      ]
    },
    "create": {
      "permissions": [
        "quicksight:CreateDataSource",
        "quicksight:DescribeDataSource",
        "quicksight:DescribeDataSourcePermissions",
        "quicksight:TagResource",
        "quicksight:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "quicksight:DescribeDataSource",
        "quicksight:DescribeDataSourcePermissions",
        "quicksight:UpdateDataSource",
        "quicksight:UpdateDataSourcePermissions",
        "quicksight:TagResource",
        "quicksight:UntagResource",
        "quicksight:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "quicksight:DescribeDataSource",
        "quicksight:DescribeDataSourcePermissions",
        "quicksight:DeleteDataSource",
        "quicksight:ListTagsForResource"
      ]
    },
    "list": {
      "permissions": [
        "quicksight:DescribeDataSource",
        "quicksight:ListDataSources"
      ]
    }
  },
  "additionalProperties": false,
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-quicksight",
  "attributes": {
    "Arn": {
      "type": "string",
      "description": "<p>The Amazon Resource Name (ARN) of the data source.</p>",
      "markdownDescription": "<p>The Amazon Resource Name (ARN) of the data source.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "CreatedTime": {
      "type": "string",
      "description": "<p>The time that this data source was created.</p>",
      "format": "date-time",
      "markdownDescription": "<p>The time that this data source was created.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastUpdatedTime": {
      "type": "string",
      "description": "<p>The last time that this data source was updated.</p>",
      "format": "date-time",
      "markdownDescription": "<p>The last time that this data source was updated.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Status": {
      "$ref": "#/definitions/ResourceStatus"
    }
  }
}