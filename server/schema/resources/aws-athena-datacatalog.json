{
  "typeName": "AWS::Athena::DataCatalog",
  "description": "Resource schema for AWS::Athena::DataCatalog",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-athena.git",
  "definitions": {
    "Tags": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Name": {
      "description": "The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. ",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters. \n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "A description of the data catalog to be created. ",
      "type": "string",
      "minLength": 1,
      "maxLength": 1024,
      "markdownDescription": "A description of the data catalog to be created. \n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
    },
    "Parameters": {
      "description": "Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type. ",
      "type": "object",
      "patternProperties": {
        ".*": {
          "type": "string",
          "maxLength": 51200,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 51200  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type. \n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "A list of comma separated tags to add to the data catalog that is created. ",
      "$ref": "#/definitions/Tags",
      "markdownDescription": "A list of comma separated tags to add to the data catalog that is created. \n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Type": {
      "description": "The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore. ",
      "type": "string",
      "enum": [
        "LAMBDA",
        "GLUE",
        "HIVE"
      ],
      "markdownDescription": "The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore. \n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: LAMBDA | GLUE | HIVE  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "Name",
    "Type"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "athena:CreateDataCatalog",
        "athena:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "athena:GetDataCatalog",
        "athena:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "athena:UpdateDataCatalog",
        "athena:TagResource",
        "athena:GetDataCatalog",
        "athena:UntagResource",
        "athena:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "athena:DeleteDataCatalog"
      ]
    },
    "list": {
      "permissions": [
        "athena:ListDataCatalog"
      ]
    }
  },
  "primaryIdentifier": [
    "/properties/Name"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "additionalProperties": false,
  "taggable": true,
  "attributes": {}
}