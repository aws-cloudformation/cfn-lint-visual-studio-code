{
  "typeName": "AWS::FraudDetector::List",
  "description": "A resource schema for a List in Amazon Fraud Detector.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Element": {
      "description": "An element in a list.",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "An element in a list.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^\\S+( +\\S+)*$  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Arn": {
      "description": "The list ARN.",
      "type": "string",
      "markdownDescription": "The list ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Name": {
      "description": "The name of the list.",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "The name of the list.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[0-9a-z_]+$  \nUpdate requires: Replacement\n"
    },
    "Description": {
      "description": "The description of the list.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "The description of the list.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
    },
    "VariableType": {
      "description": "The variable type of the list.",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "The variable type of the list.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[A-Z_]{1,64}$  \nUpdate requires: No interruption\n"
    },
    "CreatedTime": {
      "description": "The time when the list was created.",
      "type": "string",
      "markdownDescription": "The time when the list was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "LastUpdatedTime": {
      "description": "The time when the list was last updated.",
      "type": "string",
      "markdownDescription": "The time when the list was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Tags": {
      "description": "Tags associated with this list.",
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "Tags associated with this list.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Elements": {
      "description": "The elements in this list.",
      "type": "array",
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 100000,
      "items": {
        "$ref": "#/definitions/Element"
      },
      "markdownDescription": "The elements in this list.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "additionalProperties": false,
  "required": [
    "Name"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreatedTime",
    "/properties/LastUpdatedTime"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "frauddetector:CreateList",
        "frauddetector:GetListElements",
        "frauddetector:GetListsMetadata",
        "frauddetector:ListTagsForResource",
        "frauddetector:TagResource",
        "frauddetector:UpdateList"
      ]
    },
    "read": {
      "permissions": [
        "frauddetector:GetListElements",
        "frauddetector:GetListsMetadata",
        "frauddetector:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "frauddetector:GetListElements",
        "frauddetector:GetListsMetadata",
        "frauddetector:ListTagsForResource",
        "frauddetector:UntagResource",
        "frauddetector:UpdateList",
        "frauddetector:TagResource"
      ]
    },
    "delete": {
      "permissions": [
        "frauddetector:DeleteList",
        "frauddetector:GetListsMetadata"
      ]
    },
    "list": {
      "permissions": [
        "frauddetector:GetListElements",
        "frauddetector:GetListsMetadata",
        "frauddetector:ListTagsForResource"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "frauddetector:ListTagsForResource",
      "frauddetector:TagResource",
      "frauddetector:UntagResource"
    ]
  },
  "attributes": {
    "Arn": {
      "description": "The list ARN.",
      "type": "string",
      "markdownDescription": "The list ARN.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CreatedTime": {
      "description": "The time when the list was created.",
      "type": "string",
      "markdownDescription": "The time when the list was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "LastUpdatedTime": {
      "description": "The time when the list was last updated.",
      "type": "string",
      "markdownDescription": "The time when the list was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}