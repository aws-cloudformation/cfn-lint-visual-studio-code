{
  "typeName": "AWS::DataZone::Domain",
  "description": "A domain is an organizing entity for connecting together assets, users, and their projects",
  "definitions": {
    "AuthType": {
      "type": "string",
      "description": "The type of single sign-on in Amazon DataZone.",
      "enum": [
        "IAM_IDC",
        "DISABLED"
      ],
      "markdownDescription": "The type of single sign-on in Amazon DataZone.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: IAM_IDC | DISABLED  \nUpdate requires: No interruption"
    },
    "DomainStatus": {
      "type": "string",
      "description": "The status of the Amazon DataZone domain.",
      "enum": [
        "CREATING",
        "AVAILABLE",
        "CREATION_FAILED",
        "DELETING",
        "DELETED",
        "DELETION_FAILED"
      ],
      "markdownDescription": "The status of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATING | AVAILABLE | CREATION_FAILED | DELETING | DELETED | DELETION_FAILED  \nUpdate requires: No interruption"
    },
    "SingleSignOn": {
      "type": "object",
      "description": "The single-sign on configuration of the Amazon DataZone domain.",
      "properties": {
        "Type": {
          "$ref": "#/definitions/AuthType"
        },
        "UserAssignment": {
          "$ref": "#/definitions/UserAssignment"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The single-sign on configuration of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to associate with the domain.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with the domain.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "UserAssignment": {
      "type": "string",
      "description": "The single sign-on user assignment in Amazon DataZone.",
      "enum": [
        "AUTOMATIC",
        "MANUAL"
      ],
      "markdownDescription": "The single sign-on user assignment in Amazon DataZone.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AUTOMATIC | MANUAL  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Description": {
      "type": "string",
      "description": "The description of the Amazon DataZone domain.",
      "markdownDescription": "The description of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DomainExecutionRole": {
      "type": "string",
      "description": "The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.",
      "markdownDescription": "The domain execution role that is created when an Amazon DataZone domain is created. The domain execution role is created in the AWS account that houses the Amazon DataZone domain.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:aws[^:]*:iam::\\d{12}:(role|role/service-role)/[\\w+=,.@-]*$  \nUpdate requires: No interruption"
    },
    "KmsKeyIdentifier": {
      "type": "string",
      "maxLength": 1024,
      "description": "The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.",
      "minLength": 1,
      "markdownDescription": "The identifier of the AWS Key Management Service (KMS) key that is used to encrypt the Amazon DataZone domain, metadata, and reporting data.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nPattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$  \nUpdate requires: Replacement"
    },
    "Name": {
      "type": "string",
      "description": "The name of the Amazon DataZone domain.",
      "markdownDescription": "The name of the Amazon DataZone domain.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
    },
    "SingleSignOn": {
      "$ref": "#/definitions/SingleSignOn",
      "description": "The single-sign on configuration of the Amazon DataZone domain.",
      "markdownDescription": "The single-sign on configuration of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "description": "The tags specified for the Amazon DataZone domain.",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "The tags specified for the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "DomainExecutionRole",
    "Name"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreatedAt",
    "/properties/Id",
    "/properties/LastUpdatedAt",
    "/properties/ManagedAccountId",
    "/properties/PortalUrl",
    "/properties/Status"
  ],
  "createOnlyProperties": [
    "/properties/KmsKeyIdentifier"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "additionalIdentifiers": [
    [
      "/properties/Name"
    ]
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "datazone:CreateDomain",
        "datazone:UpdateDomain",
        "datazone:GetDomain",
        "datazone:TagResource",
        "sso:CreateManagedApplicationInstance",
        "sso:DeleteManagedApplicationInstance",
        "sso:PutApplicationAssignmentConfiguration"
      ]
    },
    "read": {
      "permissions": [
        "datazone:GetDomain"
      ]
    },
    "update": {
      "permissions": [
        "datazone:UpdateDomain",
        "datazone:GetDomain",
        "datazone:TagResource",
        "datazone:UntagResource",
        "sso:CreateManagedApplicationInstance",
        "sso:DeleteManagedApplicationInstance",
        "sso:PutApplicationAssignmentConfiguration"
      ]
    },
    "delete": {
      "permissions": [
        "datazone:DeleteDomain",
        "datazone:GetDomain"
      ]
    },
    "list": {
      "permissions": [
        "datazone:ListDomains"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "Arn": {
      "type": "string",
      "description": "The ARN of the Amazon DataZone domain.",
      "markdownDescription": "The ARN of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:aws(|-cn|-us-gov):datazone:\\w+(?:-\\w+)+:\\d{12}:domain/dzd[-_][a-zA-Z0-9_-]{1,36}$  \nUpdate requires: No interruption"
    },
    "CreatedAt": {
      "type": "string",
      "description": "The timestamp of when the Amazon DataZone domain was last updated.",
      "format": "date-time",
      "markdownDescription": "The timestamp of when the Amazon DataZone domain was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Id": {
      "type": "string",
      "description": "The id of the Amazon DataZone domain.",
      "markdownDescription": "The id of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^dzd[-_][a-zA-Z0-9_-]{1,36}$  \nUpdate requires: No interruption"
    },
    "LastUpdatedAt": {
      "type": "string",
      "description": "The timestamp of when the Amazon DataZone domain was last updated.",
      "format": "date-time",
      "markdownDescription": "The timestamp of when the Amazon DataZone domain was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ManagedAccountId": {
      "type": "string",
      "description": "The identifier of the AWS account that manages the domain.",
      "markdownDescription": "The identifier of the AWS account that manages the domain.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "PortalUrl": {
      "type": "string",
      "description": "The URL of the data portal for this Amazon DataZone domain.",
      "markdownDescription": "The URL of the data portal for this Amazon DataZone domain.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Status": {
      "$ref": "#/definitions/DomainStatus",
      "description": "The status of the Amazon DataZone domain.",
      "markdownDescription": "The status of the Amazon DataZone domain.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  }
}