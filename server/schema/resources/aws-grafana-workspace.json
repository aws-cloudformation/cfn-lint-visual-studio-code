{
  "typeName": "AWS::Grafana::Workspace",
  "description": "Definition of AWS::Grafana::Workspace Resource Type",
  "definitions": {
    "AssertionAttributes": {
      "type": "object",
      "description": "Maps Grafana friendly names to the IdPs SAML attributes.",
      "properties": {
        "Name": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users name in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users name in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Login": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users login handle in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users login handle in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Email": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users email in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users email in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Groups": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users groups in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users groups in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Role": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users roles in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users roles in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Org": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "Name of the attribute within the SAML assert to use as the users organizations in Grafana.",
          "markdownDescription": "Name of the attribute within the SAML assert to use as the users organizations in Grafana.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Maps Grafana friendly names to the IdPs SAML attributes.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IdpMetadata": {
      "type": "object",
      "description": "IdP Metadata used to configure SAML authentication in Grafana.",
      "properties": {
        "Url": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "description": "URL that vends the IdPs metadata.",
          "markdownDescription": "URL that vends the IdPs metadata.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        },
        "Xml": {
          "type": "string",
          "description": "XML blob of the IdPs metadata.",
          "markdownDescription": "XML blob of the IdPs metadata.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "IdP Metadata used to configure SAML authentication in Grafana.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RoleValues": {
      "type": "object",
      "description": "Maps SAML roles to the Grafana Editor and Admin roles.",
      "properties": {
        "Editor": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "description": "A single SAML role.",
            "markdownDescription": "A single SAML role.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
          },
          "description": "List of SAML roles which will be mapped into the Grafana Editor role.",
          "markdownDescription": "List of SAML roles which will be mapped into the Grafana Editor role.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Admin": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "description": "A single SAML role.",
            "markdownDescription": "A single SAML role.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
          },
          "description": "List of SAML roles which will be mapped into the Grafana Admin role.",
          "markdownDescription": "List of SAML roles which will be mapped into the Grafana Admin role.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Maps SAML roles to the Grafana Editor and Admin roles.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SamlConfiguration": {
      "type": "object",
      "description": "SAML configuration data associated with an AMG workspace.",
      "properties": {
        "IdpMetadata": {
          "$ref": "#/definitions/IdpMetadata"
        },
        "AssertionAttributes": {
          "$ref": "#/definitions/AssertionAttributes"
        },
        "RoleValues": {
          "$ref": "#/definitions/RoleValues"
        },
        "AllowedOrganizations": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "type": "string",
            "maxLength": 256,
            "minLength": 1,
            "description": "A single SAML organization.",
            "markdownDescription": "A single SAML organization.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
          },
          "description": "List of SAML organizations allowed to access Grafana.",
          "markdownDescription": "List of SAML organizations allowed to access Grafana.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "LoginValidityDuration": {
          "type": "number",
          "description": "The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.",
          "markdownDescription": "The maximum lifetime an authenticated user can be logged in (in minutes) before being required to re-authenticate.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "IdpMetadata"
      ],
      "additionalProperties": false,
      "markdownDescription": "SAML configuration data associated with an AMG workspace.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcConfiguration": {
      "type": "object",
      "description": "The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.",
      "properties": {
        "SecurityGroupIds": {
          "type": "array",
          "insertionOrder": false,
          "uniqueItems": true,
          "minItems": 1,
          "maxItems": 5,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "VPC Security Group Id",
            "markdownDescription": "VPC Security Group Id\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
          },
          "description": "The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.",
          "markdownDescription": "The list of Amazon EC2 security group IDs attached to the Amazon VPC for your Grafana workspace to connect.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "SubnetIds": {
          "type": "array",
          "insertionOrder": false,
          "uniqueItems": true,
          "minItems": 2,
          "maxItems": 6,
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "VPC Subnet Id",
            "markdownDescription": "VPC Subnet Id\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
          },
          "description": "The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.",
          "markdownDescription": "The list of Amazon EC2 subnet IDs created in the Amazon VPC for your Grafana workspace to connect.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "SecurityGroupIds",
        "SubnetIds"
      ],
      "additionalProperties": false,
      "markdownDescription": "The configuration settings for an Amazon VPC that contains data sources for your Grafana workspace to connect to.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AccountAccessType": {
      "type": "string",
      "description": "These enums represent valid account access types. Specifically these enums determine whether the workspace can access AWS resources in the AWS account only, or whether it can also access resources in other accounts in the same organization. If the value CURRENT_ACCOUNT is used, a workspace role ARN must be provided. If the value is ORGANIZATION, a list of organizational units must be provided.",
      "enum": [
        "CURRENT_ACCOUNT",
        "ORGANIZATION"
      ],
      "markdownDescription": "These enums represent valid account access types. Specifically these enums determine whether the workspace can access AWS resources in the AWS account only, or whether it can also access resources in other accounts in the same organization. If the value CURRENT_ACCOUNT is used, a workspace role ARN must be provided. If the value is ORGANIZATION, a list of organizational units must be provided.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CURRENT_ACCOUNT | ORGANIZATION  \nUpdate requires: No interruption"
    },
    "AuthenticationProviderTypes": {
      "type": "string",
      "description": "Valid workspace authentication providers.",
      "enum": [
        "AWS_SSO",
        "SAML"
      ],
      "markdownDescription": "Valid workspace authentication providers.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AWS_SSO | SAML  \nUpdate requires: No interruption"
    },
    "DataSourceType": {
      "type": "string",
      "description": "These enums represent valid AWS data sources that can be queried via the Grafana workspace. These data sources are primarily used to help customers visualize which data sources have been added to a service managed workspace IAM role.",
      "enum": [
        "AMAZON_OPENSEARCH_SERVICE",
        "CLOUDWATCH",
        "PROMETHEUS",
        "XRAY",
        "TIMESTREAM",
        "SITEWISE",
        "ATHENA",
        "REDSHIFT"
      ],
      "markdownDescription": "These enums represent valid AWS data sources that can be queried via the Grafana workspace. These data sources are primarily used to help customers visualize which data sources have been added to a service managed workspace IAM role.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AMAZON_OPENSEARCH_SERVICE | CLOUDWATCH | PROMETHEUS | XRAY | TIMESTREAM | SITEWISE | ATHENA | REDSHIFT  \nUpdate requires: No interruption"
    },
    "NotificationDestinationType": {
      "type": "string",
      "description": "These enums represent valid AWS notification destinations that the Grafana workspace has permission to use. These notification destinations are primarily used to help customers visualize which destinations have been added to a service managed IAM role.",
      "enum": [
        "SNS"
      ],
      "markdownDescription": "These enums represent valid AWS notification destinations that the Grafana workspace has permission to use. These notification destinations are primarily used to help customers visualize which destinations have been added to a service managed IAM role.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SNS  \nUpdate requires: No interruption"
    },
    "PermissionType": {
      "type": "string",
      "description": "These enums represent valid permission types to use when creating or configuring a Grafana workspace. The SERVICE_MANAGED permission type means the Managed Grafana service will create a workspace IAM role on your behalf. The CUSTOMER_MANAGED permission type means that the customer is expected to provide an IAM role that the Grafana workspace can use to query data sources.",
      "enum": [
        "CUSTOMER_MANAGED",
        "SERVICE_MANAGED"
      ],
      "markdownDescription": "These enums represent valid permission types to use when creating or configuring a Grafana workspace. The SERVICE_MANAGED permission type means the Managed Grafana service will create a workspace IAM role on your behalf. The CUSTOMER_MANAGED permission type means that the customer is expected to provide an IAM role that the Grafana workspace can use to query data sources.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CUSTOMER_MANAGED | SERVICE_MANAGED  \nUpdate requires: No interruption"
    },
    "WorkspaceStatus": {
      "type": "string",
      "description": "These enums represent the status of a workspace.",
      "enum": [
        "ACTIVE",
        "CREATING",
        "DELETING",
        "FAILED",
        "UPDATING",
        "UPGRADING",
        "DELETION_FAILED",
        "CREATION_FAILED",
        "UPDATE_FAILED",
        "UPGRADE_FAILED",
        "LICENSE_REMOVAL_FAILED"
      ],
      "markdownDescription": "These enums represent the status of a workspace.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ACTIVE | CREATING | DELETING | FAILED | UPDATING | UPGRADING | DELETION_FAILED | CREATION_FAILED | UPDATE_FAILED | UPGRADE_FAILED | LICENSE_REMOVAL_FAILED  \nUpdate requires: No interruption"
    },
    "SamlConfigurationStatus": {
      "type": "string",
      "description": "Valid SAML configuration statuses.",
      "enum": [
        "CONFIGURED",
        "NOT_CONFIGURED"
      ],
      "markdownDescription": "Valid SAML configuration statuses.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CONFIGURED | NOT_CONFIGURED  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "AuthenticationProviders": {
      "type": "array",
      "insertionOrder": false,
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/AuthenticationProviderTypes"
      },
      "description": "List of authentication providers to enable.",
      "markdownDescription": "List of authentication providers to enable.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SamlConfiguration": {
      "$ref": "#/definitions/SamlConfiguration"
    },
    "VpcConfiguration": {
      "$ref": "#/definitions/VpcConfiguration"
    },
    "ClientToken": {
      "type": "string",
      "description": "A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.",
      "markdownDescription": "A unique, case-sensitive, user-provided identifier to ensure the idempotency of the request.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[!-~]{1,64}$  \nUpdate requires: Replacement"
    },
    "AccountAccessType": {
      "$ref": "#/definitions/AccountAccessType"
    },
    "OrganizationRoleName": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 1,
      "description": "The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.",
      "markdownDescription": "The name of an IAM role that already exists to use with AWS Organizations to access AWS data sources and notification channels in other accounts in an organization.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "PermissionType": {
      "$ref": "#/definitions/PermissionType"
    },
    "StackSetName": {
      "type": "string",
      "description": "The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.",
      "markdownDescription": "The name of the AWS CloudFormation stack set to use to generate IAM roles to be used for this workspace.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DataSources": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/DataSourceType"
      },
      "description": "List of data sources on the service managed IAM role.",
      "markdownDescription": "List of data sources on the service managed IAM role.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Description": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 0,
      "description": "Description of a workspace.",
      "markdownDescription": "Description of a workspace.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "Name": {
      "type": "string",
      "description": "The user friendly name of a workspace.",
      "markdownDescription": "The user friendly name of a workspace.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[a-zA-Z0-9-._~]{1,255}$  \nUpdate requires: No interruption"
    },
    "NotificationDestinations": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/NotificationDestinationType"
      },
      "description": "List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.",
      "markdownDescription": "List of notification destinations on the customers service managed IAM role that the Grafana workspace can query.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "OrganizationalUnits": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string",
        "description": "Id of an organizational unit.",
        "markdownDescription": "Id of an organizational unit.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "description": "List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.",
      "markdownDescription": "List of Organizational Units containing AWS accounts the Grafana workspace can pull data from.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "RoleArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 1,
      "description": "IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.",
      "markdownDescription": "IAM Role that will be used to grant the Grafana workspace access to a customers AWS resources.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    }
  },
  "readOnlyProperties": [
    "/properties/Id",
    "/properties/SsoClientId",
    "/properties/SamlConfigurationStatus",
    "/properties/Endpoint",
    "/properties/Status",
    "/properties/GrafanaVersion",
    "/properties/CreationTimestamp",
    "/properties/ModificationTimestamp"
  ],
  "writeOnlyProperties": [
    "/properties/ClientToken"
  ],
  "createOnlyProperties": [
    "/properties/ClientToken"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "additionalProperties": false,
  "handlers": {
    "create": {
      "permissions": [
        "grafana:CreateWorkspace",
        "grafana:UpdateWorkspaceAuthentication",
        "sso:DescribeRegisteredRegions",
        "sso:CreateManagedApplicationInstance",
        "organizations:DescribeOrganization",
        "sso:GetSharedSsoConfiguration",
        "iam:PassRole",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "read": {
      "permissions": [
        "grafana:DescribeWorkspace",
        "grafana:DescribeWorkspaceAuthentication"
      ]
    },
    "update": {
      "permissions": [
        "grafana:UpdateWorkspace",
        "grafana:UpdateWorkspaceAuthentication",
        "sso:DescribeRegisteredRegions",
        "sso:CreateManagedApplicationInstance",
        "iam:PassRole",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "delete": {
      "permissions": [
        "grafana:DeleteWorkspace",
        "sso:DeleteManagedApplicationInstance",
        "sso:DescribeRegisteredRegions"
      ]
    },
    "list": {
      "permissions": [
        "grafana:ListWorkspaces",
        "grafana:DescribeWorkspaceAuthentication"
      ]
    }
  },
  "attributes": {
    "SsoClientId": {
      "type": "string",
      "description": "The client ID of the AWS SSO Managed Application.",
      "markdownDescription": "The client ID of the AWS SSO Managed Application.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SamlConfigurationStatus": {
      "$ref": "#/definitions/SamlConfigurationStatus"
    },
    "Status": {
      "$ref": "#/definitions/WorkspaceStatus"
    },
    "CreationTimestamp": {
      "type": "string",
      "description": "Timestamp when the workspace was created.",
      "format": "date-time",
      "markdownDescription": "Timestamp when the workspace was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ModificationTimestamp": {
      "type": "string",
      "description": "Timestamp when the workspace was last modified",
      "format": "date-time",
      "markdownDescription": "Timestamp when the workspace was last modified\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "GrafanaVersion": {
      "type": "string",
      "maxLength": 255,
      "minLength": 1,
      "description": "Version of Grafana the workspace is currently using.",
      "markdownDescription": "Version of Grafana the workspace is currently using.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "Endpoint": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 1,
      "description": "Endpoint for the Grafana workspace.",
      "markdownDescription": "Endpoint for the Grafana workspace.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "Id": {
      "type": "string",
      "description": "The id that uniquely identifies a Grafana workspace.",
      "markdownDescription": "The id that uniquely identifies a Grafana workspace.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^g-[0-9a-f]{10}$  \nUpdate requires: No interruption"
    }
  }
}