{
  "$schema": "https://schema.cloudformation.us-east-1.amazonaws.com/provider.definition.schema.v1.json",
  "typeName": "AWS::GameLift::GameServerGroup",
  "description": "The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-gamelift.git",
  "definitions": {
    "AutoScalingPolicy": {
      "type": "object",
      "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting",
      "properties": {
        "EstimatedInstanceWarmup": {
          "$ref": "#/definitions/EstimatedInstanceWarmup"
        },
        "TargetTrackingConfiguration": {
          "$ref": "#/definitions/TargetTrackingConfiguration"
        }
      },
      "required": [
        "TargetTrackingConfiguration"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "EstimatedInstanceWarmup": {
      "type": "number",
      "description": "Length of time, in seconds, it takes for a new instance to start new game server processes and register with GameLift FleetIQ.",
      "markdownDescription": "Length of time, in seconds, it takes for a new instance to start new game server processes and register with GameLift FleetIQ.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "TargetTrackingConfiguration": {
      "type": "object",
      "description": "Settings for a target-based scaling policy applied to Auto Scaling group.",
      "properties": {
        "TargetValue": {
          "$ref": "#/definitions/TargetValue"
        }
      },
      "required": [
        "TargetValue"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings for a target-based scaling policy applied to Auto Scaling group.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TargetValue": {
      "type": "number",
      "description": "Desired value to use with a game server group target-based scaling policy.",
      "markdownDescription": "Desired value to use with a game server group target-based scaling policy.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "BalancingStrategy": {
      "type": "string",
      "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.",
      "enum": [
        "SPOT_ONLY",
        "SPOT_PREFERRED",
        "ON_DEMAND_ONLY"
      ],
      "markdownDescription": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SPOT_ONLY | SPOT_PREFERRED | ON_DEMAND_ONLY  \nUpdate requires: No interruption"
    },
    "DeleteOption": {
      "description": "The type of delete to perform.",
      "type": "string",
      "enum": [
        "SAFE_DELETE",
        "FORCE_DELETE",
        "RETAIN"
      ],
      "markdownDescription": "The type of delete to perform.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SAFE_DELETE | FORCE_DELETE | RETAIN  \nUpdate requires: No interruption"
    },
    "GameServerGroupName": {
      "type": "string",
      "description": "An identifier for the new game server group.",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "An identifier for the new game server group.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: [a-zA-Z0-9-\\.]+  \nUpdate requires: No interruption"
    },
    "GameServerProtectionPolicy": {
      "type": "string",
      "description": "A flag that indicates whether instances in the game server group are protected from early termination.",
      "enum": [
        "NO_PROTECTION",
        "FULL_PROTECTION"
      ],
      "markdownDescription": "A flag that indicates whether instances in the game server group are protected from early termination.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NO_PROTECTION | FULL_PROTECTION  \nUpdate requires: No interruption"
    },
    "GameServerGroupArn": {
      "description": "A generated unique ID for the game server group.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "A generated unique ID for the game server group.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]*  \nUpdate requires: No interruption"
    },
    "InstanceDefinitions": {
      "type": "array",
      "description": "A set of EC2 instance types to use when creating instances in the group.",
      "items": {
        "$ref": "#/definitions/InstanceDefinition"
      },
      "maxItems": 20,
      "minItems": 2,
      "insertionOrder": false,
      "markdownDescription": "A set of EC2 instance types to use when creating instances in the group.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "InstanceDefinition": {
      "type": "object",
      "description": "An allowed instance type for your game server group.",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/InstanceType"
        },
        "WeightedCapacity": {
          "$ref": "#/definitions/WeightedCapacity"
        }
      },
      "required": [
        "InstanceType"
      ],
      "additionalProperties": false,
      "markdownDescription": "An allowed instance type for your game server group.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InstanceType": {
      "type": "string",
      "description": "An EC2 instance type designation.",
      "markdownDescription": "An EC2 instance type designation.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "WeightedCapacity": {
      "type": "string",
      "description": "Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group.",
      "markdownDescription": "Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[\\u0031-\\u0039][\\u0030-\\u0039]{0,2}$  \nUpdate requires: No interruption"
    },
    "LaunchTemplate": {
      "type": "object",
      "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.",
      "properties": {
        "LaunchTemplateId": {
          "$ref": "#/definitions/LaunchTemplateId"
        },
        "LaunchTemplateName": {
          "$ref": "#/definitions/LaunchTemplateName"
        },
        "Version": {
          "$ref": "#/definitions/Version"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LaunchTemplateId": {
      "type": "string",
      "description": "A unique identifier for an existing EC2 launch template.",
      "markdownDescription": "A unique identifier for an existing EC2 launch template.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LaunchTemplateName": {
      "type": "string",
      "description": "A readable identifier for an existing EC2 launch template.",
      "markdownDescription": "A readable identifier for an existing EC2 launch template.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Version": {
      "type": "string",
      "description": "The version of the EC2 launch template to use.",
      "markdownDescription": "The version of the EC2 launch template to use.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "MaxSize": {
      "type": "number",
      "description": "The maximum number of instances allowed in the EC2 Auto Scaling group.",
      "minimum": 1,
      "markdownDescription": "The maximum number of instances allowed in the EC2 Auto Scaling group.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "MinSize": {
      "type": "number",
      "description": "The minimum number of instances allowed in the EC2 Auto Scaling group.",
      "minimum": 0,
      "markdownDescription": "The minimum number of instances allowed in the EC2 Auto Scaling group.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "RoleArn": {
      "type": "string",
      "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^arn:.*:role\\/[\\w+=,.@-]+  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "description": "A list of labels to assign to the new game server group resource.",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 0,
      "maxItems": 200,
      "insertionOrder": false,
      "markdownDescription": "A list of labels to assign to the new game server group resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key for a developer-defined key:value pair for tagging an AWS resource.",
          "markdownDescription": "The key for a developer-defined key:value pair for tagging an AWS resource.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for a developer-defined key:value pair for tagging an AWS resource.",
          "markdownDescription": "The value for a developer-defined key:value pair for tagging an AWS resource.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcSubnets": {
      "type": "array",
      "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.",
      "items": {
        "type": "string",
        "minLength": 15,
        "maxLength": 24,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 15  \nMaximum Length: 24  \nPattern: ^subnet-[0-9a-z]+$  \nUpdate requires: No interruption"
      },
      "minItems": 1,
      "maxItems": 20,
      "insertionOrder": false,
      "markdownDescription": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "GameServerGroup": {
      "type": "object",
      "description": "Properties that describe a game server group resource. A game server group manages certain properties of a corresponding EC2 Auto Scaling group.",
      "properties": {
        "AutoScalingGroupArn": {
          "$ref": "#/definitions/AutoScalingGroupArn"
        },
        "BalancingStrategy": {
          "$ref": "#/definitions/BalancingStrategy"
        },
        "CreationTime": {
          "$ref": "#/definitions/CreationTime"
        },
        "GameServerGroupArn": {
          "$ref": "#/definitions/GameServerGroupArn"
        },
        "GameServerGroupName": {
          "$ref": "#/definitions/GameServerGroupName"
        },
        "GameServerProtectionPolicy": {
          "$ref": "#/definitions/GameServerProtectionPolicy"
        },
        "InstanceDefinitions": {
          "$ref": "#/definitions/InstanceDefinitions"
        },
        "LastUpdatedTime": {
          "$ref": "#/definitions/LastUpdatedTime"
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "StatusReason": {
          "$ref": "#/definitions/StatusReason"
        },
        "SuspendedActions": {
          "$ref": "#/definitions/SuspendedActions"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Properties that describe a game server group resource. A game server group manages certain properties of a corresponding EC2 Auto Scaling group.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AutoScalingGroupArn": {
      "type": "string",
      "description": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.",
      "minLength": 0,
      "maxLength": 256,
      "markdownDescription": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: [ -\ud7ff\ue000-\ufffd\ud800\udc00-\udbff\udfff\r\n\t]*  \nUpdate requires: No interruption"
    },
    "CreationTime": {
      "type": "string",
      "description": "A timestamp that indicates when this data object was created.",
      "markdownDescription": "A timestamp that indicates when this data object was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastUpdatedTime": {
      "type": "string",
      "description": "A timestamp that indicates when this game server group was last updated.",
      "markdownDescription": "A timestamp that indicates when this game server group was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Status": {
      "type": "string",
      "description": "The current status of the game server group.",
      "enum": [
        "NEW",
        "ACTIVATING",
        "ACTIVE",
        "DELETE_SCHEDULED",
        "DELETING",
        "DELETED",
        "ERROR"
      ],
      "markdownDescription": "The current status of the game server group.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: NEW | ACTIVATING | ACTIVE | DELETE_SCHEDULED | DELETING | DELETED | ERROR  \nUpdate requires: No interruption"
    },
    "StatusReason": {
      "type": "string",
      "description": "Additional information about the current game server group status.",
      "minLength": 1,
      "maxLength": 1024,
      "markdownDescription": "Additional information about the current game server group status.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
    },
    "SuspendedActions": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "REPLACE_INSTANCE_TYPES"
        ],
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: REPLACE_INSTANCE_TYPES  \nUpdate requires: No interruption"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "AutoScalingPolicy": {
      "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting",
      "$ref": "#/definitions/AutoScalingPolicy",
      "markdownDescription": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "BalancingStrategy": {
      "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.",
      "$ref": "#/definitions/BalancingStrategy",
      "markdownDescription": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "DeleteOption": {
      "description": "The type of delete to perform.",
      "$ref": "#/definitions/DeleteOption",
      "markdownDescription": "The type of delete to perform.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "GameServerGroupName": {
      "description": "An identifier for the new game server group.",
      "$ref": "#/definitions/GameServerGroupName",
      "markdownDescription": "An identifier for the new game server group.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
    },
    "GameServerProtectionPolicy": {
      "description": "A flag that indicates whether instances in the game server group are protected from early termination.",
      "$ref": "#/definitions/GameServerProtectionPolicy",
      "markdownDescription": "A flag that indicates whether instances in the game server group are protected from early termination.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "InstanceDefinitions": {
      "description": "A set of EC2 instance types to use when creating instances in the group.",
      "$ref": "#/definitions/InstanceDefinitions",
      "markdownDescription": "A set of EC2 instance types to use when creating instances in the group.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
    },
    "LaunchTemplate": {
      "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.",
      "$ref": "#/definitions/LaunchTemplate",
      "markdownDescription": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "MaxSize": {
      "description": "The maximum number of instances allowed in the EC2 Auto Scaling group.",
      "$ref": "#/definitions/MaxSize",
      "markdownDescription": "The maximum number of instances allowed in the EC2 Auto Scaling group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "MinSize": {
      "description": "The minimum number of instances allowed in the EC2 Auto Scaling group.",
      "$ref": "#/definitions/MinSize",
      "markdownDescription": "The minimum number of instances allowed in the EC2 Auto Scaling group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "RoleArn": {
      "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.",
      "$ref": "#/definitions/RoleArn",
      "markdownDescription": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "A list of labels to assign to the new game server group resource.",
      "$ref": "#/definitions/Tags",
      "markdownDescription": "A list of labels to assign to the new game server group resource.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "VpcSubnets": {
      "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.",
      "$ref": "#/definitions/VpcSubnets",
      "markdownDescription": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  },
  "required": [
    "GameServerGroupName",
    "InstanceDefinitions",
    "RoleArn"
  ],
  "additionalProperties": false,
  "readOnlyProperties": [
    "/properties/GameServerGroupArn",
    "/properties/AutoScalingGroupArn"
  ],
  "writeOnlyProperties": [
    "/properties/DeleteOption",
    "/properties/LaunchTemplate",
    "/properties/MinSize",
    "/properties/MaxSize",
    "/properties/AutoScalingPolicy",
    "/properties/VpcSubnets",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/GameServerGroupArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "gamelift:CreateGameServerGroup",
        "gamelift:TagResource",
        "gamelift:DescribeGameServerGroup",
        "iam:assumeRole",
        "iam:PassRole",
        "iam:CreateServiceLinkedRole",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeSubnets",
        "ec2:RunInstances",
        "ec2:CreateTags",
        "ec2:DescribeLaunchTemplateVersions",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:CreateOrUpdateTags",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutScalingPolicy",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetInstanceProtection",
        "autoscaling:UpdateAutoScalingGroup",
        "events:PutRule",
        "events:PutTargets"
      ]
    },
    "read": {
      "permissions": [
        "gamelift:DescribeGameServerGroup"
      ]
    },
    "update": {
      "permissions": [
        "gamelift:UpdateGameServerGroup",
        "iam:assumeRole",
        "iam:PassRole",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:UpdateAutoScalingGroup",
        "autoscaling:SetInstanceProtection"
      ]
    },
    "delete": {
      "permissions": [
        "gamelift:DeleteGameServerGroup",
        "gamelift:DescribeGameServerGroup",
        "iam:assumeRole",
        "iam:PassRole",
        "iam:CreateServiceLinkedRole",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeSubnets",
        "ec2:DescribeLaunchTemplateVersions",
        "autoscaling:CreateAutoScalingGroup",
        "autoscaling:DescribeLifecycleHooks",
        "autoscaling:DescribeNotificationConfigurations",
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:ExitStandby",
        "autoscaling:PutLifecycleHook",
        "autoscaling:PutScalingPolicy",
        "autoscaling:ResumeProcesses",
        "autoscaling:SetInstanceProtection",
        "autoscaling:UpdateAutoScalingGroup",
        "autoscaling:DeleteAutoScalingGroup",
        "events:PutRule",
        "events:PutTargets"
      ]
    },
    "list": {
      "permissions": [
        "gamelift:ListGameServerGroups"
      ]
    }
  },
  "taggable": true,
  "attributes": {
    "AutoScalingGroupArn": {
      "description": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.",
      "$ref": "#/definitions/AutoScalingGroupArn",
      "markdownDescription": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "GameServerGroupArn": {
      "description": "A generated unique ID for the game server group.",
      "$ref": "#/definitions/GameServerGroupArn",
      "markdownDescription": "A generated unique ID for the game server group.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  }
}