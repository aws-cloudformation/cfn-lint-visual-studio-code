{
  "typeName": "AWS::IoTEvents::Input",
  "description": "The AWS::IoTEvents::Input resource creates an input. To monitor your devices and processes, they must have a way to get telemetry data into AWS IoT Events. This is done by sending messages as *inputs* to AWS IoT Events. For more information, see [How to Use AWS IoT Events](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *AWS IoT Events Developer Guide*.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-iotevents.git",
  "definitions": {
    "InputDefinition": {
      "type": "object",
      "additionalProperties": false,
      "description": "The definition of the input.",
      "properties": {
        "Attributes": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "description": "The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.",
          "minItems": 1,
          "maxItems": 200,
          "items": {
            "$ref": "#/definitions/Attribute"
          },
          "markdownDescription": "The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Attributes"
      ],
      "markdownDescription": "The definition of the input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Attribute": {
      "type": "object",
      "additionalProperties": false,
      "description": "The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.",
      "properties": {
        "JsonPath": {
          "description": "An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.\n\n_Syntax_: `<field-name>.<field-name>...`",
          "minLength": 1,
          "maxLength": 128,
          "type": "string",
          "markdownDescription": "An expression that specifies an attribute-value pair in a JSON structure. Use this to specify an attribute from the JSON payload that is made available by the input. Inputs are derived from messages sent to AWS IoT Events (`BatchPutMessage`). Each such message contains a JSON payload. The attribute (and its paired value) specified here are available for use in the `condition` expressions used by detectors.\n\n_Syntax_: `<field-name>.<field-name>...`\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^((`[a-zA-Z0-9_\\- ]+`)|([a-zA-Z0-9_\\-]+))(\\.((`[a-zA-Z0-9_\\- ]+`)|([a-zA-Z0-9_\\-]+)))*$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "JsonPath"
      ],
      "markdownDescription": "The attributes from the JSON payload that are made available by the input. Inputs are derived from messages sent to the AWS IoT Events system using `BatchPutMessage`. Each such message contains a JSON payload, and those attributes (and their paired values) specified here are available for use in the `condition` expressions used by detectors that monitor this input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "description": "Tags to be applied to Input.",
      "properties": {
        "Key": {
          "description": "Key of the Tag.",
          "type": "string",
          "markdownDescription": "Key of the Tag.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "Value of the Tag.",
          "type": "string",
          "markdownDescription": "Value of the Tag.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "Tags to be applied to Input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "InputDefinition": {
      "$ref": "#/definitions/InputDefinition"
    },
    "InputDescription": {
      "description": "A brief description of the input.",
      "minLength": 1,
      "maxLength": 128,
      "type": "string",
      "markdownDescription": "A brief description of the input.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "InputName": {
      "description": "The name of the input.",
      "minLength": 1,
      "maxLength": 128,
      "type": "string",
      "markdownDescription": "The name of the input.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z][a-zA-Z0-9_]*$  \nUpdate requires: Replacement"
    },
    "Tags": {
      "type": "array",
      "uniqueItems": false,
      "insertionOrder": false,
      "description": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "InputDefinition"
  ],
  "primaryIdentifier": [
    "/properties/InputName"
  ],
  "createOnlyProperties": [
    "/properties/InputName"
  ],
  "taggable": true,
  "handlers": {
    "create": {
      "permissions": [
        "iotevents:CreateInput",
        "iotevents:TagResource",
        "iotevents:DescribeInput",
        "iotevents:ListTagsForResource"
      ]
    },
    "read": {
      "permissions": [
        "iotevents:DescribeInput",
        "iotevents:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iotevents:UpdateInput",
        "iotevents:DescribeInput",
        "iotevents:ListTagsForResource",
        "iotevents:UntagResource",
        "iotevents:TagResource"
      ]
    },
    "delete": {
      "permissions": [
        "iotevents:DeleteInput",
        "iotevents:DescribeInput"
      ]
    },
    "list": {
      "permissions": [
        "iotevents:ListInputs"
      ]
    }
  },
  "attributes": {}
}