{
  "typeName": "AWS::NimbleStudio::StudioComponent",
  "description": "Represents a studio component that connects a non-Nimble Studio resource in your account to your studio",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio",
  "definitions": {
    "ActiveDirectoryComputerAttribute": {
      "type": "object",
      "description": "<p>An LDAP attribute of an Active Directory computer account, in the form of a name:value\n            pair.</p>",
      "properties": {
        "Name": {
          "type": "string",
          "maxLength": 40,
          "minLength": 1,
          "description": "<p>The name for the LDAP attribute.</p>",
          "markdownDescription": "<p>The name for the LDAP attribute.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 40  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>The value for the LDAP attribute.</p>",
          "markdownDescription": "<p>The value for the LDAP attribute.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>An LDAP attribute of an Active Directory computer account, in the form of a name:value\n            pair.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ActiveDirectoryConfiguration": {
      "type": "object",
      "description": "<p>The configuration for a Microsoft Active Directory (Microsoft AD) studio\n            resource.</p>",
      "properties": {
        "ComputerAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveDirectoryComputerAttribute"
          },
          "maxItems": 50,
          "minItems": 0,
          "description": "<p>A collection of custom attributes for an Active Directory computer.</p>",
          "markdownDescription": "<p>A collection of custom attributes for an Active Directory computer.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "DirectoryId": {
          "type": "string",
          "description": "<p>The directory ID of the Directory Service for Microsoft Active Directory to access\n            using this studio component.</p>",
          "markdownDescription": "<p>The directory ID of the Directory Service for Microsoft Active Directory to access\n            using this studio component.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "OrganizationalUnitDistinguishedName": {
          "type": "string",
          "maxLength": 2000,
          "minLength": 1,
          "description": "<p>The distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.</p>",
          "markdownDescription": "<p>The distinguished name (DN) and organizational unit (OU) of an Active Directory\n            computer.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2000  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The configuration for a Microsoft Active Directory (Microsoft AD) studio\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ComputeFarmConfiguration": {
      "type": "object",
      "description": "<p>The configuration for a render farm that is associated with a studio resource.</p>",
      "properties": {
        "ActiveDirectoryUser": {
          "type": "string",
          "description": "<p>The name of an Active Directory user that is used on ComputeFarm worker\n            instances.</p>",
          "markdownDescription": "<p>The name of an Active Directory user that is used on ComputeFarm worker\n            instances.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Endpoint": {
          "type": "string",
          "description": "<p>The endpoint of the ComputeFarm that is accessed by the studio component\n            resource.</p>",
          "markdownDescription": "<p>The endpoint of the ComputeFarm that is accessed by the studio component\n            resource.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The configuration for a render farm that is associated with a studio resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LaunchProfilePlatform": {
      "type": "string",
      "enum": [
        "LINUX",
        "WINDOWS"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: LINUX | WINDOWS  \nUpdate requires: No interruption"
    },
    "LicenseServiceConfiguration": {
      "type": "object",
      "description": "<p>The configuration for a license service that is associated with a studio\n            resource.</p>",
      "properties": {
        "Endpoint": {
          "type": "string",
          "description": "<p>The endpoint of the license service that is accessed by the studio component\n            resource.</p>",
          "markdownDescription": "<p>The endpoint of the license service that is accessed by the studio component\n            resource.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The configuration for a license service that is associated with a studio\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ScriptParameterKeyValue": {
      "type": "object",
      "description": "<p>A parameter for a studio component script, in the form of a key:value pair.</p>",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "description": "<p>A script parameter key.</p>",
          "markdownDescription": "<p>A script parameter key.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[a-zA-Z_][a-zA-Z0-9_]+$  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "description": "<p>A script parameter value.</p>",
          "markdownDescription": "<p>A script parameter value.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>A parameter for a studio component script, in the form of a key:value pair.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SharedFileSystemConfiguration": {
      "type": "object",
      "description": "<p>The configuration for a shared file storage system that is associated with a studio\n            resource.</p>",
      "properties": {
        "Endpoint": {
          "type": "string",
          "description": "<p>The endpoint of the shared file system that is accessed by the studio component\n            resource.</p>",
          "markdownDescription": "<p>The endpoint of the shared file system that is accessed by the studio component\n            resource.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "FileSystemId": {
          "type": "string",
          "description": "<p>The unique identifier for a file system.</p>",
          "markdownDescription": "<p>The unique identifier for a file system.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "LinuxMountPoint": {
          "type": "string",
          "maxLength": 128,
          "minLength": 0,
          "description": "<p>The mount location for a shared file system on a Linux virtual workstation.</p>",
          "markdownDescription": "<p>The mount location for a shared file system on a Linux virtual workstation.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 128  \nPattern: ^(/?|(\\$HOME)?(/[^/\\n\\s\\\\]+)*)$  \nUpdate requires: No interruption"
        },
        "ShareName": {
          "type": "string",
          "description": "<p>The name of the file share.</p>",
          "markdownDescription": "<p>The name of the file share.</p>\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "WindowsMountDrive": {
          "type": "string",
          "description": "<p>The mount location for a shared file system on a Windows virtual workstation.</p>",
          "markdownDescription": "<p>The mount location for a shared file system on a Windows virtual workstation.</p>\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[A-Z]$  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The configuration for a shared file storage system that is associated with a studio\n            resource.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StudioComponentConfiguration": {
      "description": "<p>The configuration of the studio component, based on component type.</p>",
      "oneOf": [
        {
          "type": "object",
          "title": "ActiveDirectoryConfiguration",
          "properties": {
            "ActiveDirectoryConfiguration": {
              "$ref": "#/definitions/ActiveDirectoryConfiguration"
            }
          },
          "required": [
            "ActiveDirectoryConfiguration"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "ComputeFarmConfiguration",
          "properties": {
            "ComputeFarmConfiguration": {
              "$ref": "#/definitions/ComputeFarmConfiguration"
            }
          },
          "required": [
            "ComputeFarmConfiguration"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "LicenseServiceConfiguration",
          "properties": {
            "LicenseServiceConfiguration": {
              "$ref": "#/definitions/LicenseServiceConfiguration"
            }
          },
          "required": [
            "LicenseServiceConfiguration"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "SharedFileSystemConfiguration",
          "properties": {
            "SharedFileSystemConfiguration": {
              "$ref": "#/definitions/SharedFileSystemConfiguration"
            }
          },
          "required": [
            "SharedFileSystemConfiguration"
          ],
          "additionalProperties": false
        }
      ],
      "markdownDescription": "<p>The configuration of the studio component, based on component type.</p>\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "StudioComponentInitializationScript": {
      "type": "object",
      "description": "<p>Initialization scripts for studio components.</p>",
      "properties": {
        "LaunchProfileProtocolVersion": {
          "type": "string",
          "maxLength": 10,
          "minLength": 0,
          "description": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
          "markdownDescription": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 10  \nPattern: ^2021\\-03\\-31$  \nUpdate requires: No interruption"
        },
        "Platform": {
          "$ref": "#/definitions/LaunchProfilePlatform"
        },
        "RunContext": {
          "$ref": "#/definitions/StudioComponentInitializationScriptRunContext"
        },
        "Script": {
          "type": "string",
          "maxLength": 5120,
          "minLength": 1,
          "description": "<p>The initialization script.</p>",
          "markdownDescription": "<p>The initialization script.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 5120  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>Initialization scripts for studio components.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StudioComponentInitializationScriptRunContext": {
      "type": "string",
      "enum": [
        "SYSTEM_INITIALIZATION",
        "USER_INITIALIZATION"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: SYSTEM_INITIALIZATION | USER_INITIALIZATION  \nUpdate requires: No interruption"
    },
    "StudioComponentSubtype": {
      "type": "string",
      "enum": [
        "AWS_MANAGED_MICROSOFT_AD",
        "AMAZON_FSX_FOR_WINDOWS",
        "AMAZON_FSX_FOR_LUSTRE",
        "CUSTOM"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AWS_MANAGED_MICROSOFT_AD | AMAZON_FSX_FOR_WINDOWS | AMAZON_FSX_FOR_LUSTRE | CUSTOM  \nUpdate requires: No interruption"
    },
    "StudioComponentType": {
      "type": "string",
      "enum": [
        "ACTIVE_DIRECTORY",
        "SHARED_FILE_SYSTEM",
        "COMPUTE_FARM",
        "LICENSE_SERVICE",
        "CUSTOM"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ACTIVE_DIRECTORY | SHARED_FILE_SYSTEM | COMPUTE_FARM | LICENSE_SERVICE | CUSTOM  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "object",
      "patternProperties": {
        ".+": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Configuration": {
      "$ref": "#/definitions/StudioComponentConfiguration"
    },
    "Description": {
      "type": "string",
      "maxLength": 256,
      "minLength": 0,
      "description": "<p>The description.</p>",
      "markdownDescription": "<p>The description.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
    },
    "Ec2SecurityGroupIds": {
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "maxItems": 30,
      "minItems": 0,
      "description": "<p>The EC2 security groups that control access to the studio component.</p>",
      "markdownDescription": "<p>The EC2 security groups that control access to the studio component.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "InitializationScripts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StudioComponentInitializationScript"
      },
      "description": "<p>Initialization scripts for studio components.</p>",
      "markdownDescription": "<p>Initialization scripts for studio components.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Name": {
      "type": "string",
      "maxLength": 64,
      "minLength": 0,
      "description": "<p>The name for the studio component.</p>",
      "markdownDescription": "<p>The name for the studio component.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 64  \nUpdate requires: No interruption"
    },
    "RuntimeRoleArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "ScriptParameters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ScriptParameterKeyValue"
      },
      "maxItems": 30,
      "minItems": 0,
      "description": "<p>Parameters for the studio component scripts.</p>",
      "markdownDescription": "<p>Parameters for the studio component scripts.</p>\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SecureInitializationRoleArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption"
    },
    "StudioId": {
      "type": "string",
      "description": "<p>The studio ID. </p>",
      "markdownDescription": "<p>The studio ID. </p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "Subtype": {
      "$ref": "#/definitions/StudioComponentSubtype"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    },
    "Type": {
      "$ref": "#/definitions/StudioComponentType"
    }
  },
  "required": [
    "StudioId",
    "Name",
    "Type"
  ],
  "readOnlyProperties": [
    "/properties/StudioComponentId"
  ],
  "createOnlyProperties": [
    "/properties/StudioId",
    "/properties/Subtype",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/StudioComponentId",
    "/properties/StudioId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "nimble:CreateStudioComponent",
        "nimble:GetStudioComponent",
        "nimble:TagResource",
        "ds:AuthorizeApplication",
        "ec2:DescribeSecurityGroups",
        "fsx:DescribeFilesystems",
        "ds:DescribeDirectories"
      ]
    },
    "read": {
      "permissions": [
        "nimble:GetStudioComponent"
      ]
    },
    "update": {
      "permissions": [
        "iam:PassRole",
        "nimble:UpdateStudioComponent",
        "nimble:GetStudioComponent",
        "ds:AuthorizeApplication",
        "ec2:DescribeSecurityGroups",
        "fsx:DescribeFilesystems",
        "ds:DescribeDirectories"
      ]
    },
    "delete": {
      "permissions": [
        "nimble:DeleteStudioComponent",
        "nimble:GetStudioComponent",
        "nimble:UntagResource",
        "ds:UnauthorizeApplication"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "StudioId": {
            "$ref": "resource-schema.json#/properties/StudioId"
          }
        },
        "required": [
          "StudioId"
        ]
      },
      "permissions": [
        "nimble:ListStudioComponents"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "StudioComponentId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}