{
  "typeName": "AWS::AIOps::InvestigationGroup",
  "description": "Definition of AWS::AIOps::InvestigationGroup Resource Type",
  "resourceLink": {
    "templateUri": "/cloudwatch/home?region=${awsRegion}#/investigations/configuration",
    "mappings": {}
  },
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "required": [
    "Name"
  ],
  "readOnlyProperties": [
    "/properties/CreatedBy",
    "/properties/CreatedAt",
    "/properties/LastModifiedBy",
    "/properties/LastModifiedAt",
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/RetentionInDays"
  ],
  "definitions": {
    "RoleArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "description": "The Investigation Role's ARN.",
      "markdownDescription": "The Investigation Role's ARN.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
    },
    "StringWithPatternAndLengthLimits": {
      "type": "string",
      "maxLength": 512,
      "minLength": 1,
      "description": "User friendly name for resources.",
      "markdownDescription": "User friendly name for resources.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
    },
    "Timestamp": {
      "type": "string",
      "description": "The timestamp value.",
      "markdownDescription": "The timestamp value.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "InvestigationGroupArn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "description": "The Investigation Group's ARN.",
      "markdownDescription": "The Investigation Group's ARN.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
    },
    "ChatbotNotificationChannel": {
      "type": "object",
      "properties": {
        "SNSTopicArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 20,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
        },
        "ChatConfigurationArns": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CrossAccountConfiguration": {
      "type": "object",
      "properties": {
        "SourceRoleArn": {
          "$ref": "#/definitions/RoleArn"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EncryptionConfigMap": {
      "type": "object",
      "properties": {
        "EncryptionConfigurationType": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "KmsKeyId": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "RoleArn": {
      "$ref": "#/definitions/RoleArn"
    },
    "Name": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "CreatedBy": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "CreatedAt": {
      "$ref": "#/definitions/Timestamp"
    },
    "LastModifiedBy": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "LastModifiedAt": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "Arn": {
      "$ref": "#/definitions/InvestigationGroupArn"
    },
    "RetentionInDays": {
      "type": "integer",
      "description": "The number of days to retain the investigation group",
      "markdownDescription": "The number of days to retain the investigation group\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: Replacement\n"
    },
    "EncryptionConfig": {
      "$ref": "#/definitions/EncryptionConfigMap"
    },
    "InvestigationGroupPolicy": {
      "type": "string",
      "description": "Investigation Group policy",
      "markdownDescription": "Investigation Group policy\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "IsCloudTrailEventHistoryEnabled": {
      "type": "boolean",
      "description": "Flag to enable cloud trail history",
      "markdownDescription": "Flag to enable cloud trail history\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "TagKeyBoundaries": {
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "type": "string",
        "maxLength": 200,
        "minLength": 1,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nUpdate requires: No interruption\n"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "ChatbotNotificationChannels": {
      "description": "An array of key-value pairs of notification channels to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/ChatbotNotificationChannel"
      },
      "markdownDescription": "An array of key-value pairs of notification channels to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "CrossAccountConfigurations": {
      "description": "An array of cross account configurations.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/CrossAccountConfiguration"
      },
      "markdownDescription": "An array of cross account configurations.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "aiops:TagResource",
      "aiops:UntagResource",
      "aiops:ListTagsForResource"
    ]
  },
  "handlers": {
    "create": {
      "permissions": [
        "aiops:CreateInvestigationGroup",
        "aiops:GetInvestigationGroup",
        "aiops:GetInvestigationGroupPolicy",
        "aiops:PutInvestigationGroupPolicy",
        "aiops:TagResource",
        "aiops:ListTagsForResource",
        "iam:PassRole",
        "kms:DescribeKey",
        "kms:ListAliases",
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey"
      ]
    },
    "read": {
      "permissions": [
        "aiops:GetInvestigationGroup",
        "aiops:GetInvestigationGroupPolicy",
        "aiops:ListTagsForResource",
        "kms:DescribeKey",
        "kms:ListAliases",
        "kms:Decrypt",
        "kms:Encrypt"
      ]
    },
    "update": {
      "permissions": [
        "aiops:GetInvestigationGroup",
        "aiops:UpdateInvestigationGroup",
        "aiops:GetInvestigationGroupPolicy",
        "aiops:PutInvestigationGroupPolicy",
        "aiops:DeleteInvestigationGroupPolicy",
        "aiops:TagResource",
        "aiops:UntagResource",
        "aiops:ListTagsForResource",
        "iam:PassRole",
        "kms:DescribeKey",
        "kms:ListAliases",
        "kms:Decrypt",
        "kms:Encrypt",
        "kms:GenerateDataKey"
      ]
    },
    "delete": {
      "permissions": [
        "aiops:DeleteInvestigationGroup",
        "aiops:GetInvestigationGroup",
        "aiops:DeleteInvestigationGroupPolicy",
        "aiops:GetInvestigationGroupPolicy",
        "aiops:UntagResource",
        "kms:DescribeKey",
        "kms:ListAliases"
      ]
    },
    "list": {
      "permissions": [
        "aiops:ListInvestigationGroups",
        "kms:DescribeKey",
        "kms:ListAliases"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "CreatedBy": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "CreatedAt": {
      "$ref": "#/definitions/Timestamp"
    },
    "LastModifiedBy": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "LastModifiedAt": {
      "$ref": "#/definitions/StringWithPatternAndLengthLimits"
    },
    "Arn": {
      "$ref": "#/definitions/InvestigationGroupArn"
    }
  }
}