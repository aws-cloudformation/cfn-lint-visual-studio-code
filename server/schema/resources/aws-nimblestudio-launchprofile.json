{
  "typeName": "AWS::NimbleStudio::LaunchProfile",
  "description": "Represents a launch profile which delegates access to a collection of studio components to studio users",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-nimblestudio",
  "definitions": {
    "StreamConfiguration": {
      "type": "object",
      "description": "<p>A configuration for a streaming session.</p>",
      "properties": {
        "ClipboardMode": {
          "$ref": "#/definitions/StreamingClipboardMode"
        },
        "Ec2InstanceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingInstanceType"
          },
          "maxItems": 30,
          "minItems": 1,
          "description": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>",
          "markdownDescription": "<p>The EC2 instance types that users can select from when launching a streaming session\n            with this launch profile.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "MaxSessionLengthInMinutes": {
          "type": "number",
          "maximum": 43200,
          "minimum": 1,
          "description": "<p>The length of time, in minutes, that a streaming session can be active before it is\n            stopped or terminated. After this point, Nimble Studio automatically terminates or\n            stops the session. The default length of time is 690 minutes, and the maximum length of\n            time is 30 days.</p>",
          "markdownDescription": "<p>The length of time, in minutes, that a streaming session can be active before it is\n            stopped or terminated. After this point, Nimble Studio automatically terminates or\n            stops the session. The default length of time is 690 minutes, and the maximum length of\n            time is 30 days.</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "StreamingImageIds": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 22,
            "minLength": 0,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 22  \nPattern: ^[a-zA-Z0-9-_]*$  \nUpdate requires: No interruption"
          },
          "maxItems": 20,
          "minItems": 1,
          "description": "<p>The streaming images that users can select from when launching a streaming session\n            with this launch profile.</p>",
          "markdownDescription": "<p>The streaming images that users can select from when launching a streaming session\n            with this launch profile.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "MaxStoppedSessionLengthInMinutes": {
          "type": "number",
          "maximum": 5760,
          "minimum": 0,
          "description": "<p>Integer that determines if you can start and stop your sessions and how long a session\n            can stay in the STOPPED state. The default value is 0. The maximum value is 5760.</p>\n        <p>If the value is missing or set to 0, your sessions can\u2019t be stopped. If you then call\n                <code>StopStreamingSession</code>, the session fails. If the time that a session\n            stays in the READY state exceeds the <code>maxSessionLengthInMinutes</code> value, the\n            session will automatically be terminated (instead of stopped).</p>\n        <p>If the value is set to a positive number, the session can be stopped. You can call\n                <code>StopStreamingSession</code> to stop sessions in the READY state. If the time\n            that a session stays in the READY state exceeds the\n                <code>maxSessionLengthInMinutes</code> value, the session will automatically be\n            stopped (instead of terminated).</p>",
          "markdownDescription": "<p>Integer that determines if you can start and stop your sessions and how long a session\n            can stay in the STOPPED state. The default value is 0. The maximum value is 5760.</p>\n        <p>If the value is missing or set to 0, your sessions can\u2019t be stopped. If you then call\n                <code>StopStreamingSession</code>, the session fails. If the time that a session\n            stays in the READY state exceeds the <code>maxSessionLengthInMinutes</code> value, the\n            session will automatically be terminated (instead of stopped).</p>\n        <p>If the value is set to a positive number, the session can be stopped. You can call\n                <code>StopStreamingSession</code> to stop sessions in the READY state. If the time\n            that a session stays in the READY state exceeds the\n                <code>maxSessionLengthInMinutes</code> value, the session will automatically be\n            stopped (instead of terminated).</p>\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "SessionStorage": {
          "$ref": "#/definitions/StreamConfigurationSessionStorage"
        }
      },
      "required": [
        "ClipboardMode",
        "Ec2InstanceTypes",
        "StreamingImageIds"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>A configuration for a streaming session.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StreamConfigurationSessionStorage": {
      "type": "object",
      "description": "<p>The configuration for a streaming session\u2019s upload storage.</p>",
      "properties": {
        "Root": {
          "$ref": "#/definitions/StreamingSessionStorageRoot"
        },
        "Mode": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StreamingSessionStorageMode"
          },
          "minItems": 1,
          "description": "<p>Allows artists to upload files to their workstations. The only valid option is\n                <code>UPLOAD</code>.</p>",
          "markdownDescription": "<p>Allows artists to upload files to their workstations. The only valid option is\n                <code>UPLOAD</code>.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Mode"
      ],
      "additionalProperties": false,
      "markdownDescription": "<p>The configuration for a streaming session\u2019s upload storage.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StreamingClipboardMode": {
      "type": "string",
      "enum": [
        "ENABLED",
        "DISABLED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLED | DISABLED  \nUpdate requires: No interruption"
    },
    "StreamingInstanceType": {
      "type": "string",
      "enum": [
        "g4dn.xlarge",
        "g4dn.2xlarge",
        "g4dn.4xlarge",
        "g4dn.8xlarge",
        "g4dn.12xlarge",
        "g4dn.16xlarge",
        "g3.4xlarge",
        "g3s.xlarge",
        "g5.xlarge",
        "g5.2xlarge",
        "g5.4xlarge",
        "g5.8xlarge",
        "g5.16xlarge"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: g4dn.xlarge | g4dn.2xlarge | g4dn.4xlarge | g4dn.8xlarge | g4dn.12xlarge | g4dn.16xlarge | g3.4xlarge | g3s.xlarge | g5.xlarge | g5.2xlarge | g5.4xlarge | g5.8xlarge | g5.16xlarge  \nUpdate requires: No interruption"
    },
    "StreamingSessionStorageMode": {
      "type": "string",
      "enum": [
        "UPLOAD"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: UPLOAD  \nUpdate requires: No interruption"
    },
    "StreamingSessionStorageRoot": {
      "type": "object",
      "description": "<p>The upload storage root location (folder) on streaming workstations where files are\n            uploaded.</p>",
      "properties": {
        "Linux": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The folder path in Linux workstations where files are uploaded.</p>",
          "markdownDescription": "<p>The folder path in Linux workstations where files are uploaded.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^(\\$HOME|/)[/]?([A-Za-z0-9-_]+/)*([A-Za-z0-9_-]+)$  \nUpdate requires: No interruption"
        },
        "Windows": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "<p>The folder path in Windows workstations where files are uploaded.</p>",
          "markdownDescription": "<p>The folder path in Windows workstations where files are uploaded.</p>\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^((\\%HOMEPATH\\%)|[a-zA-Z]:)[\\\\/](?:[a-zA-Z0-9_-]+[\\\\/])*[a-zA-Z0-9_-]+$  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "<p>The upload storage root location (folder) on streaming workstations where files are\n            uploaded.</p>\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "object",
      "patternProperties": {
        ".+": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Description": {
      "type": "string",
      "maxLength": 256,
      "minLength": 0,
      "description": "<p>The description.</p>",
      "markdownDescription": "<p>The description.</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
    },
    "Ec2SubnetIds": {
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "maxItems": 6,
      "minItems": 0,
      "description": "<p>Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from.\n            These subnets must support the specified instance types. </p>",
      "markdownDescription": "<p>Specifies the IDs of the EC2 subnets where streaming sessions will be accessible from.\n            These subnets must support the specified instance types. </p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: Replacement"
    },
    "LaunchProfileProtocolVersions": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 10,
        "minLength": 0,
        "description": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
        "markdownDescription": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 10  \nPattern: ^2021\\-03\\-31$  \nUpdate requires: No interruption"
      },
      "description": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>",
      "markdownDescription": "<p>The version number of the protocol that is used by the launch profile. The only valid\n            version is \"2021-03-31\".</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
    },
    "Name": {
      "type": "string",
      "maxLength": 64,
      "minLength": 1,
      "description": "<p>The name for the launch profile.</p>",
      "markdownDescription": "<p>The name for the launch profile.</p>\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption"
    },
    "StreamConfiguration": {
      "$ref": "#/definitions/StreamConfiguration"
    },
    "StudioComponentIds": {
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "maxItems": 100,
      "minItems": 1,
      "description": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>",
      "markdownDescription": "<p>Unique identifiers for a collection of studio components that can be used with this\n            launch profile.</p>\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
    },
    "StudioId": {
      "type": "string",
      "description": "<p>The studio ID. </p>",
      "markdownDescription": "<p>The studio ID. </p>\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "required": [
    "StudioId",
    "Name",
    "StudioComponentIds",
    "Ec2SubnetIds",
    "StreamConfiguration",
    "LaunchProfileProtocolVersions"
  ],
  "readOnlyProperties": [
    "/properties/LaunchProfileId"
  ],
  "createOnlyProperties": [
    "/properties/Ec2SubnetIds",
    "/properties/StudioId",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/LaunchProfileId",
    "/properties/StudioId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "nimble:CreateLaunchProfile",
        "nimble:TagResource",
        "ec2:CreateNetworkInterface",
        "ec2:CreateNetworkInterfacePermission",
        "ec2:RunInstances",
        "ec2:DescribeSubnets"
      ]
    },
    "read": {
      "permissions": [
        "nimble:GetLaunchProfile"
      ]
    },
    "update": {
      "permissions": [
        "nimble:UpdateLaunchProfile"
      ]
    },
    "delete": {
      "permissions": [
        "nimble:DeleteLaunchProfile",
        "nimble:UntagResource"
      ]
    },
    "list": {
      "permissions": [
        "nimble:ListLaunchProfiles"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "LaunchProfileId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}