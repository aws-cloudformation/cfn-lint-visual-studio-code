{
  "typeName": "AWS::Connect::IntegrationAssociation",
  "description": "Resource Type definition for AWS::Connect::IntegrationAssociation",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-connect",
  "definitions": {
    "IntegrationArn": {
      "description": "ARN of Integration being associated with the instance",
      "type": "string",
      "minLength": 1,
      "maxLength": 140,
      "markdownDescription": "ARN of Integration being associated with the instance\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 140  \nUpdate requires: No interruption"
    },
    "IntegrationType": {
      "description": "Specifies the integration type to be associated with the instance",
      "type": "string",
      "enum": [
        "LEX_BOT",
        "LAMBDA_FUNCTION",
        "APPLICATION"
      ],
      "markdownDescription": "Specifies the integration type to be associated with the instance\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: LEX_BOT | LAMBDA_FUNCTION | APPLICATION  \nUpdate requires: No interruption"
    },
    "InstanceId": {
      "description": "Amazon Connect instance identifier",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "Amazon Connect instance identifier\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nPattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$  \nUpdate requires: No interruption"
    },
    "IntegrationAssociationId": {
      "description": "Identifier of the association with Connect Instance",
      "type": "string",
      "markdownDescription": "Identifier of the association with Connect Instance\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[a-zA-Z]{1}(?:-?[a-zA-Z0-9])*$  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "InstanceId": {
      "$ref": "#/definitions/InstanceId"
    },
    "IntegrationArn": {
      "$ref": "#/definitions/IntegrationArn"
    },
    "IntegrationType": {
      "$ref": "#/definitions/IntegrationType"
    }
  },
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "additionalProperties": false,
  "required": [
    "InstanceId",
    "IntegrationType",
    "IntegrationArn"
  ],
  "readOnlyProperties": [
    "/properties/IntegrationAssociationId"
  ],
  "createOnlyProperties": [
    "/properties/InstanceId",
    "/properties/IntegrationArn",
    "/properties/IntegrationType"
  ],
  "primaryIdentifier": [
    "/properties/InstanceId",
    "/properties/IntegrationType",
    "/properties/IntegrationArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "connect:DescribeInstance",
        "ds:DescribeDirectories",
        "app-integrations:CreateEventIntegrationAssociation",
        "mobiletargeting:GetApp",
        "cases:GetDomain",
        "wisdom:GetAssistant",
        "wisdom:GetKnowledgeBase",
        "wisdom:TagResource",
        "voiceid:DescribeDomain",
        "events:PutTargets",
        "events:PutRule",
        "connect:AssociateBot",
        "connect:AssociateLambdaFunction",
        "connect:CreateIntegrationAssociation",
        "connect:ListBots",
        "connect:ListLambdaFunctions",
        "connect:ListIntegrationAssociations",
        "lambda:addPermission",
        "lex:GetBot",
        "lex:DescribeBotAlias",
        "lex:CreateResourcePolicy",
        "lex:UpdateResourcePolicy",
        "lex:CreateResourcePolicyStatement",
        "lambda:AddPermission",
        "app-integrations:GetApplication",
        "iam:AttachRolePolicy",
        "iam:CreateServiceLinkedRole",
        "iam:GetRolePolicy",
        "iam:PutRolePolicy"
      ]
    },
    "read": {
      "permissions": [
        "connect:ListBots",
        "connect:ListLambdaFunctions",
        "connect:ListIntegrationAssociations"
      ]
    },
    "update": {
      "permissions": []
    },
    "delete": {
      "permissions": [
        "connect:DescribeInstance",
        "ds:DescribeDirectories",
        "app-integrations:DeleteEventIntegrationAssociation",
        "events:ListTargetsByRule",
        "events:RemoveTargets",
        "events:DeleteRule",
        "connect:DisassociateBot",
        "connect:DisassociateLambdaFunction",
        "connect:DeleteIntegrationAssociation",
        "connect:ListBots",
        "connect:ListLambdaFunctions",
        "connect:ListIntegrationAssociations",
        "lex:DeleteResourcePolicy",
        "lex:DeleteResourcePolicyStatement",
        "lambda:RemovePermission",
        "iam:GetRolePolicy",
        "iam:DeleteRolePolicy",
        "iam:PutRolePolicy"
      ]
    },
    "list": {
      "permissions": [
        "connect:ListBots",
        "connect:ListLambdaFunctions",
        "connect:ListIntegrationAssociations"
      ]
    }
  },
  "attributes": {
    "IntegrationAssociationId": {
      "$ref": "#/definitions/IntegrationAssociationId"
    }
  }
}