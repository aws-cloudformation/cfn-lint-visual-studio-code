{
  "typeName": "AWS::AppFlow::ConnectorProfile",
  "description": "Resource Type definition for AWS::AppFlow::ConnectorProfile",
  "additionalProperties": false,
  "properties": {
    "ConnectorLabel": {
      "description": "The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for CUSTOMCONNECTOR connector type/.",
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "The label of the connector. The label is unique for each ConnectorRegistration in your AWS account. Only needed if calling for CUSTOMCONNECTOR connector type/.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: [\\w!@#.-]+  \nUpdate requires: No interruption"
    },
    "ConnectorProfileName": {
      "description": "The maximum number of items to retrieve in a single batch.",
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "The maximum number of items to retrieve in a single batch.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: [\\w/!@#+=.-]+  \nUpdate requires: Replacement"
    },
    "KMSArn": {
      "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: arn:aws:kms:.*:[0-9]+:.*  \nUpdate requires: Replacement"
    },
    "ConnectorType": {
      "description": "List of Saas providers that need connector profile to be created",
      "$ref": "#/definitions/ConnectorType",
      "markdownDescription": "List of Saas providers that need connector profile to be created\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "ConnectionMode": {
      "description": "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular",
      "type": "string",
      "enum": [
        "Public",
        "Private"
      ],
      "markdownDescription": "Mode in which data transfer should be enabled. Private connection mode is currently enabled for Salesforce, Snowflake, Trendmicro and Singular\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Public | Private  \nUpdate requires: No interruption"
    },
    "ConnectorProfileConfig": {
      "description": "Connector specific configurations needed to create connector profile",
      "$ref": "#/definitions/ConnectorProfileConfig",
      "markdownDescription": "Connector specific configurations needed to create connector profile\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  },
  "definitions": {
    "ConnectorType": {
      "type": "string",
      "enum": [
        "Salesforce",
        "Pardot",
        "Singular",
        "Slack",
        "Redshift",
        "Marketo",
        "Googleanalytics",
        "Zendesk",
        "Servicenow",
        "SAPOData",
        "Datadog",
        "Trendmicro",
        "Snowflake",
        "Dynatrace",
        "Infornexus",
        "Amplitude",
        "Veeva",
        "CustomConnector"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Salesforce | Pardot | Singular | Slack | Redshift | Marketo | Googleanalytics | Zendesk | Servicenow | SAPOData | Datadog | Trendmicro | Snowflake | Dynatrace | Infornexus | Amplitude | Veeva | CustomConnector  \nUpdate requires: No interruption"
    },
    "ConnectorProfileConfig": {
      "description": "Connector specific configurations needed to create connector profile",
      "type": "object",
      "properties": {
        "ConnectorProfileProperties": {
          "$ref": "#/definitions/ConnectorProfileProperties"
        },
        "ConnectorProfileCredentials": {
          "$ref": "#/definitions/ConnectorProfileCredentials"
        }
      },
      "markdownDescription": "Connector specific configurations needed to create connector profile\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConnectorProfileProperties": {
      "description": "Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular",
      "type": "object",
      "properties": {
        "Datadog": {
          "$ref": "#/definitions/DatadogConnectorProfileProperties"
        },
        "Dynatrace": {
          "$ref": "#/definitions/DynatraceConnectorProfileProperties"
        },
        "InforNexus": {
          "$ref": "#/definitions/InforNexusConnectorProfileProperties"
        },
        "Marketo": {
          "$ref": "#/definitions/MarketoConnectorProfileProperties"
        },
        "Redshift": {
          "$ref": "#/definitions/RedshiftConnectorProfileProperties"
        },
        "SAPOData": {
          "$ref": "#/definitions/SAPODataConnectorProfileProperties"
        },
        "Salesforce": {
          "$ref": "#/definitions/SalesforceConnectorProfileProperties"
        },
        "Pardot": {
          "$ref": "#/definitions/PardotConnectorProfileProperties"
        },
        "ServiceNow": {
          "$ref": "#/definitions/ServiceNowConnectorProfileProperties"
        },
        "Slack": {
          "$ref": "#/definitions/SlackConnectorProfileProperties"
        },
        "Snowflake": {
          "$ref": "#/definitions/SnowflakeConnectorProfileProperties"
        },
        "Veeva": {
          "$ref": "#/definitions/VeevaConnectorProfileProperties"
        },
        "Zendesk": {
          "$ref": "#/definitions/ZendeskConnectorProfileProperties"
        },
        "CustomConnector": {
          "$ref": "#/definitions/CustomConnectorProfileProperties"
        }
      },
      "markdownDescription": "Connector specific properties needed to create connector profile - currently not needed for Amplitude, Trendmicro, Googleanalytics and Singular\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConnectorProfileCredentials": {
      "description": "Connector specific configuration needed to create connector profile based on Authentication mechanism",
      "type": "object",
      "properties": {
        "Amplitude": {
          "$ref": "#/definitions/AmplitudeConnectorProfileCredentials"
        },
        "Datadog": {
          "$ref": "#/definitions/DatadogConnectorProfileCredentials"
        },
        "Dynatrace": {
          "$ref": "#/definitions/DynatraceConnectorProfileCredentials"
        },
        "GoogleAnalytics": {
          "$ref": "#/definitions/GoogleAnalyticsConnectorProfileCredentials"
        },
        "InforNexus": {
          "$ref": "#/definitions/InforNexusConnectorProfileCredentials"
        },
        "Marketo": {
          "$ref": "#/definitions/MarketoConnectorProfileCredentials"
        },
        "Redshift": {
          "$ref": "#/definitions/RedshiftConnectorProfileCredentials"
        },
        "SAPOData": {
          "$ref": "#/definitions/SAPODataConnectorProfileCredentials"
        },
        "Salesforce": {
          "$ref": "#/definitions/SalesforceConnectorProfileCredentials"
        },
        "Pardot": {
          "$ref": "#/definitions/PardotConnectorProfileCredentials"
        },
        "ServiceNow": {
          "$ref": "#/definitions/ServiceNowConnectorProfileCredentials"
        },
        "Singular": {
          "$ref": "#/definitions/SingularConnectorProfileCredentials"
        },
        "Slack": {
          "$ref": "#/definitions/SlackConnectorProfileCredentials"
        },
        "Snowflake": {
          "$ref": "#/definitions/SnowflakeConnectorProfileCredentials"
        },
        "Trendmicro": {
          "$ref": "#/definitions/TrendmicroConnectorProfileCredentials"
        },
        "Veeva": {
          "$ref": "#/definitions/VeevaConnectorProfileCredentials"
        },
        "Zendesk": {
          "$ref": "#/definitions/ZendeskConnectorProfileCredentials"
        },
        "CustomConnector": {
          "$ref": "#/definitions/CustomConnectorProfileCredentials"
        }
      },
      "markdownDescription": "Connector specific configuration needed to create connector profile based on Authentication mechanism\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AmplitudeConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ApiKey",
        "SecretKey"
      ],
      "properties": {
        "ApiKey": {
          "description": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.",
          "$ref": "#/definitions/ApiKey",
          "markdownDescription": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "SecretKey": {
          "$ref": "#/definitions/SecretKey"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatadogConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ApiKey",
        "ApplicationKey"
      ],
      "properties": {
        "ApiKey": {
          "description": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.",
          "$ref": "#/definitions/ApiKey",
          "markdownDescription": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ApplicationKey": {
          "description": "Application keys, in conjunction with your API key, give you full access to Datadog\u2019s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.",
          "$ref": "#/definitions/ApplicationKey",
          "markdownDescription": "Application keys, in conjunction with your API key, give you full access to Datadog\u2019s programmatic API. Application keys are associated with the user account that created them. The application key is used to log all requests made to the API.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DatadogConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Datadog resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Datadog resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DynatraceConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ApiToken"
      ],
      "properties": {
        "ApiToken": {
          "description": "The API tokens used by Dynatrace API to authenticate various API calls.",
          "$ref": "#/definitions/ApiToken",
          "markdownDescription": "The API tokens used by Dynatrace API to authenticate various API calls.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DynatraceConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Dynatrace resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Dynatrace resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GoogleAnalyticsConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ClientId",
        "ClientSecret"
      ],
      "properties": {
        "ClientId": {
          "description": "The identi\ufb01er for the desired client.",
          "$ref": "#/definitions/ClientId",
          "markdownDescription": "The identi\ufb01er for the desired client.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ClientSecret": {
          "description": "The client secret used by the oauth client to authenticate to the authorization server.",
          "$ref": "#/definitions/ClientSecret",
          "markdownDescription": "The client secret used by the oauth client to authenticate to the authorization server.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "RefreshToken": {
          "description": "The credentials used to acquire new access tokens.",
          "$ref": "#/definitions/RefreshToken",
          "markdownDescription": "The credentials used to acquire new access tokens.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InforNexusConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "AccessKeyId",
        "UserId",
        "SecretAccessKey",
        "Datakey"
      ],
      "properties": {
        "AccessKeyId": {
          "description": "The Access Key portion of the credentials.",
          "$ref": "#/definitions/AccessKeyId",
          "markdownDescription": "The Access Key portion of the credentials.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "UserId": {
          "description": "The identi\ufb01er for the user.",
          "$ref": "#/definitions/Username",
          "markdownDescription": "The identi\ufb01er for the user.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "SecretAccessKey": {
          "description": "The secret key used to sign requests.",
          "$ref": "#/definitions/Key",
          "markdownDescription": "The secret key used to sign requests.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Datakey": {
          "description": "The encryption keys used to encrypt data.",
          "$ref": "#/definitions/Key",
          "markdownDescription": "The encryption keys used to encrypt data.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InforNexusConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the InforNexus resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the InforNexus resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MarketoConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ClientId",
        "ClientSecret"
      ],
      "properties": {
        "ClientId": {
          "description": "The identi\ufb01er for the desired client.",
          "$ref": "#/definitions/ClientId",
          "markdownDescription": "The identi\ufb01er for the desired client.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ClientSecret": {
          "description": "The client secret used by the oauth client to authenticate to the authorization server.",
          "$ref": "#/definitions/ClientSecret",
          "markdownDescription": "The client secret used by the oauth client to authenticate to the authorization server.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MarketoConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Marketo resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Marketo resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedshiftConnectorProfileCredentials": {
      "type": "object",
      "properties": {
        "Username": {
          "description": "The name of the user.",
          "$ref": "#/definitions/Username",
          "markdownDescription": "The name of the user.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Password": {
          "description": "The password that corresponds to the username.",
          "$ref": "#/definitions/Password",
          "markdownDescription": "The password that corresponds to the username.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedshiftConnectorProfileProperties": {
      "type": "object",
      "required": [
        "BucketName",
        "RoleArn"
      ],
      "properties": {
        "DatabaseUrl": {
          "description": "The JDBC URL of the Amazon Redshift cluster.",
          "$ref": "#/definitions/DatabaseUrl",
          "markdownDescription": "The JDBC URL of the Amazon Redshift cluster.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "BucketName": {
          "description": "The name of the Amazon S3 bucket associated with Redshift.",
          "$ref": "#/definitions/BucketName",
          "markdownDescription": "The name of the Amazon S3 bucket associated with Redshift.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "BucketPrefix": {
          "description": "The object key for the destination bucket in which Amazon AppFlow will place the \ufb01les.",
          "$ref": "#/definitions/BucketPrefix",
          "markdownDescription": "The object key for the destination bucket in which Amazon AppFlow will place the \ufb01les.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "RoleArn": {
          "description": "The Amazon Resource Name (ARN) of the IAM role.",
          "$ref": "#/definitions/RoleArn",
          "markdownDescription": "The Amazon Resource Name (ARN) of the IAM role.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "IsRedshiftServerless": {
          "description": "If Amazon AppFlow will connect to Amazon Redshift Serverless or Amazon Redshift cluster.",
          "type": "boolean",
          "markdownDescription": "If Amazon AppFlow will connect to Amazon Redshift Serverless or Amazon Redshift cluster.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "DataApiRoleArn": {
          "description": "The Amazon Resource Name (ARN) of the IAM role that grants Amazon AppFlow access to the data through the Amazon Redshift Data API.",
          "$ref": "#/definitions/DataApiRoleArn",
          "markdownDescription": "The Amazon Resource Name (ARN) of the IAM role that grants Amazon AppFlow access to the data through the Amazon Redshift Data API.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ClusterIdentifier": {
          "description": "The unique identifier of the Amazon Redshift cluster.",
          "$ref": "#/definitions/ClusterIdentifier",
          "markdownDescription": "The unique identifier of the Amazon Redshift cluster.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "WorkgroupName": {
          "description": "The name of the Amazon Redshift serverless workgroup",
          "$ref": "#/definitions/WorkgroupName",
          "markdownDescription": "The name of the Amazon Redshift serverless workgroup\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DatabaseName": {
          "description": "The name of the Amazon Redshift database that will store the transferred data.",
          "$ref": "#/definitions/DatabaseName",
          "markdownDescription": "The name of the Amazon Redshift database that will store the transferred data.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SAPODataConnectorProfileCredentials": {
      "type": "object",
      "properties": {
        "BasicAuthCredentials": {
          "$ref": "#/definitions/BasicAuthCredentials"
        },
        "OAuthCredentials": {
          "type": "object",
          "properties": {
            "AccessToken": {
              "$ref": "#/definitions/AccessToken"
            },
            "RefreshToken": {
              "$ref": "#/definitions/RefreshToken"
            },
            "ConnectorOAuthRequest": {
              "$ref": "#/definitions/ConnectorOAuthRequest"
            },
            "ClientId": {
              "$ref": "#/definitions/ClientId"
            },
            "ClientSecret": {
              "$ref": "#/definitions/ClientSecret"
            }
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SAPODataConnectorProfileProperties": {
      "type": "object",
      "properties": {
        "ApplicationHostUrl": {
          "$ref": "#/definitions/ApplicationHostUrl"
        },
        "ApplicationServicePath": {
          "$ref": "#/definitions/ApplicationServicePath"
        },
        "PortNumber": {
          "$ref": "#/definitions/PortNumber"
        },
        "ClientNumber": {
          "$ref": "#/definitions/ClientNumber"
        },
        "LogonLanguage": {
          "$ref": "#/definitions/LogonLanguage"
        },
        "PrivateLinkServiceName": {
          "$ref": "#/definitions/PrivateLinkServiceName"
        },
        "OAuthProperties": {
          "$ref": "#/definitions/OAuthProperties"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SalesforceConnectorProfileCredentials": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "RefreshToken": {
          "description": "The credentials used to acquire new access tokens.",
          "$ref": "#/definitions/RefreshToken",
          "markdownDescription": "The credentials used to acquire new access tokens.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ClientCredentialsArn": {
          "description": "The client credentials to fetch access token and refresh token.",
          "$ref": "#/definitions/ClientCredentialsArn",
          "markdownDescription": "The client credentials to fetch access token and refresh token.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SalesforceConnectorProfileProperties": {
      "type": "object",
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Salesforce resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Salesforce resource\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "isSandboxEnvironment": {
          "description": "Indicates whether the connector profile applies to a sandbox or production environment",
          "type": "boolean",
          "markdownDescription": "Indicates whether the connector profile applies to a sandbox or production environment\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PardotConnectorProfileProperties": {
      "type": "object",
      "required": [
        "BusinessUnitId"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Salesforce Pardot resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Salesforce Pardot resource\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "IsSandboxEnvironment": {
          "description": "Indicates whether the connector profile applies to a demo or production environment",
          "type": "boolean",
          "markdownDescription": "Indicates whether the connector profile applies to a demo or production environment\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "BusinessUnitId": {
          "description": "The Business unit id of Salesforce Pardot instance to be connected",
          "$ref": "#/definitions/BusinessUnitId",
          "markdownDescription": "The Business unit id of Salesforce Pardot instance to be connected\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PardotConnectorProfileCredentials": {
      "type": "object",
      "properties": {
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "RefreshToken": {
          "description": "The credentials used to acquire new access tokens.",
          "$ref": "#/definitions/RefreshToken",
          "markdownDescription": "The credentials used to acquire new access tokens.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ClientCredentialsArn": {
          "description": "The client credentials to fetch access token and refresh token.",
          "$ref": "#/definitions/ClientCredentialsArn",
          "markdownDescription": "The client credentials to fetch access token and refresh token.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServiceNowConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "Username",
        "Password"
      ],
      "properties": {
        "Username": {
          "description": "The name of the user.",
          "$ref": "#/definitions/Username",
          "markdownDescription": "The name of the user.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Password": {
          "description": "The password that corresponds to the username.",
          "$ref": "#/definitions/Password",
          "markdownDescription": "The password that corresponds to the username.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServiceNowConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the ServiceNow resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the ServiceNow resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SingularConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ApiKey"
      ],
      "properties": {
        "ApiKey": {
          "description": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.",
          "$ref": "#/definitions/ApiKey",
          "markdownDescription": "A unique alphanumeric identi\ufb01er used to authenticate a user, developer, or calling program to your API.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlackConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ClientId",
        "ClientSecret"
      ],
      "properties": {
        "ClientId": {
          "description": "The identi\ufb01er for the desired client.",
          "$ref": "#/definitions/ClientId",
          "markdownDescription": "The identi\ufb01er for the desired client.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ClientSecret": {
          "description": "The client secret used by the oauth client to authenticate to the authorization server.",
          "$ref": "#/definitions/ClientSecret",
          "markdownDescription": "The client secret used by the oauth client to authenticate to the authorization server.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlackConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Slack resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Slack resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SnowflakeConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "Username",
        "Password"
      ],
      "properties": {
        "Username": {
          "description": "The name of the user.",
          "$ref": "#/definitions/Username",
          "markdownDescription": "The name of the user.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Password": {
          "description": "The password that corresponds to the username.",
          "$ref": "#/definitions/Password",
          "markdownDescription": "The password that corresponds to the username.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SnowflakeConnectorProfileProperties": {
      "type": "object",
      "required": [
        "Warehouse",
        "Stage",
        "BucketName"
      ],
      "properties": {
        "Warehouse": {
          "description": "The name of the Snow\ufb02ake warehouse.",
          "$ref": "#/definitions/Warehouse",
          "markdownDescription": "The name of the Snow\ufb02ake warehouse.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Stage": {
          "description": "The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the\nSnow\ufb02ake account. This is written in the following format: < Database>< Schema><Stage Name>.",
          "$ref": "#/definitions/Stage",
          "markdownDescription": "The name of the Amazon S3 stage that was created while setting up an Amazon S3 stage in the\nSnow\ufb02ake account. This is written in the following format: < Database>< Schema><Stage Name>.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "BucketName": {
          "description": "The name of the Amazon S3 bucket associated with Snow\ufb02ake.",
          "$ref": "#/definitions/BucketName",
          "markdownDescription": "The name of the Amazon S3 bucket associated with Snow\ufb02ake.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "BucketPrefix": {
          "description": "The bucket prefix that refers to the Amazon S3 bucket associated with Snow\ufb02ake.",
          "$ref": "#/definitions/BucketPrefix",
          "markdownDescription": "The bucket prefix that refers to the Amazon S3 bucket associated with Snow\ufb02ake.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "PrivateLinkServiceName": {
          "description": "The Snow\ufb02ake Private Link service name to be used for private data transfers.",
          "$ref": "#/definitions/PrivateLinkServiceName",
          "markdownDescription": "The Snow\ufb02ake Private Link service name to be used for private data transfers.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "AccountName": {
          "description": "The name of the account.",
          "$ref": "#/definitions/AccountName",
          "markdownDescription": "The name of the account.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Region": {
          "description": "The region of the Snow\ufb02ake account.",
          "$ref": "#/definitions/Region",
          "markdownDescription": "The region of the Snow\ufb02ake account.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TrendmicroConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ApiSecretKey"
      ],
      "properties": {
        "ApiSecretKey": {
          "description": "The Secret Access Key portion of the credentials.",
          "$ref": "#/definitions/ApiSecretKey",
          "markdownDescription": "The Secret Access Key portion of the credentials.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VeevaConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "Username",
        "Password"
      ],
      "properties": {
        "Username": {
          "description": "The name of the user.",
          "$ref": "#/definitions/Username",
          "markdownDescription": "The name of the user.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Password": {
          "description": "The password that corresponds to the username.",
          "$ref": "#/definitions/Password",
          "markdownDescription": "The password that corresponds to the username.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VeevaConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Veeva resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Veeva resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ZendeskConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "ClientId",
        "ClientSecret"
      ],
      "properties": {
        "ClientId": {
          "description": "The identi\ufb01er for the desired client.",
          "$ref": "#/definitions/ClientId",
          "markdownDescription": "The identi\ufb01er for the desired client.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ClientSecret": {
          "description": "The client secret used by the oauth client to authenticate to the authorization server.",
          "$ref": "#/definitions/ClientSecret",
          "markdownDescription": "The client secret used by the oauth client to authenticate to the authorization server.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "AccessToken": {
          "description": "The credentials used to access protected resources.",
          "$ref": "#/definitions/AccessToken",
          "markdownDescription": "The credentials used to access protected resources.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConnectorOAuthRequest": {
          "description": "The oauth needed to request security tokens from the connector endpoint.",
          "$ref": "#/definitions/ConnectorOAuthRequest",
          "markdownDescription": "The oauth needed to request security tokens from the connector endpoint.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ZendeskConnectorProfileProperties": {
      "type": "object",
      "required": [
        "InstanceUrl"
      ],
      "properties": {
        "InstanceUrl": {
          "description": "The location of the Zendesk resource",
          "$ref": "#/definitions/InstanceUrl",
          "markdownDescription": "The location of the Zendesk resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomConnectorProfileCredentials": {
      "type": "object",
      "required": [
        "AuthenticationType"
      ],
      "properties": {
        "AuthenticationType": {
          "$ref": "#/definitions/AuthenticationType"
        },
        "Basic": {
          "$ref": "#/definitions/BasicAuthCredentials"
        },
        "Oauth2": {
          "$ref": "#/definitions/OAuth2Credentials"
        },
        "ApiKey": {
          "$ref": "#/definitions/ApiKeyCredentials"
        },
        "Custom": {
          "$ref": "#/definitions/CustomAuthCredentials"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomConnectorProfileProperties": {
      "type": "object",
      "properties": {
        "ProfileProperties": {
          "$ref": "#/definitions/ProfileProperties"
        },
        "OAuth2Properties": {
          "$ref": "#/definitions/OAuth2Properties"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ApiKeyCredentials": {
      "type": "object",
      "required": [
        "ApiKey"
      ],
      "properties": {
        "ApiKey": {
          "$ref": "#/definitions/ApiKey"
        },
        "ApiSecretKey": {
          "$ref": "#/definitions/ApiSecretKey"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomAuthCredentials": {
      "type": "object",
      "required": [
        "CustomAuthenticationType"
      ],
      "properties": {
        "CustomAuthenticationType": {
          "$ref": "#/definitions/CustomAuthenticationType"
        },
        "CredentialsMap": {
          "$ref": "#/definitions/CredentialsMap"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CredentialsMap": {
      "description": "A map for properties for custom authentication.",
      "type": "object",
      "patternProperties": {
        "^[\\w]{1,128}$": {
          "description": "A string containing the value for the property",
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "markdownDescription": "A string containing the value for the property\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: \\S+  \nUpdate requires: No interruption"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "A map for properties for custom authentication.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OAuth2Credentials": {
      "type": "object",
      "properties": {
        "ClientId": {
          "$ref": "#/definitions/ClientId"
        },
        "ClientSecret": {
          "$ref": "#/definitions/ClientSecret"
        },
        "AccessToken": {
          "$ref": "#/definitions/AccessToken"
        },
        "RefreshToken": {
          "$ref": "#/definitions/RefreshToken"
        },
        "OAuthRequest": {
          "$ref": "#/definitions/ConnectorOAuthRequest"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "BasicAuthCredentials": {
      "type": "object",
      "required": [
        "Username",
        "Password"
      ],
      "properties": {
        "Username": {
          "$ref": "#/definitions/Username"
        },
        "Password": {
          "$ref": "#/definitions/Password"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AuthenticationType": {
      "type": "string",
      "enum": [
        "OAUTH2",
        "APIKEY",
        "BASIC",
        "CUSTOM"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: OAUTH2 | APIKEY | BASIC | CUSTOM  \nUpdate requires: No interruption"
    },
    "OAuth2Properties": {
      "type": "object",
      "properties": {
        "TokenUrl": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]  \nUpdate requires: No interruption"
        },
        "OAuth2GrantType": {
          "$ref": "#/definitions/OAuth2GrantType"
        },
        "TokenUrlCustomProperties": {
          "$ref": "#/definitions/TokenUrlCustomProperties"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ProfileProperties": {
      "description": "A map for properties for custom connector.",
      "type": "object",
      "patternProperties": {
        "^[\\w]{1,256}$": {
          "description": "A string containing the value for the property",
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "markdownDescription": "A string containing the value for the property\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: \\S+  \nUpdate requires: No interruption"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "A map for properties for custom connector.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OAuth2GrantType": {
      "type": "string",
      "enum": [
        "CLIENT_CREDENTIALS",
        "AUTHORIZATION_CODE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CLIENT_CREDENTIALS | AUTHORIZATION_CODE  \nUpdate requires: No interruption"
    },
    "TokenUrlCustomProperties": {
      "description": "A map for properties for custom connector Token Url.",
      "type": "object",
      "patternProperties": {
        "^[\\w]{1,128}$": {
          "description": "A string containing the value for the property",
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "markdownDescription": "A string containing the value for the property\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: \\S+  \nUpdate requires: No interruption"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "A map for properties for custom connector Token Url.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomAuthenticationType": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ClientId": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ClientSecret": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "InstanceUrl": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "AccessToken": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ApiKey": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ApiSecretKey": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ApiToken": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ApplicationKey": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "AuthCode": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "BucketName": {
      "type": "string",
      "maxLength": 63,
      "minLength": 3,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "BucketPrefix": {
      "type": "string",
      "maxLength": 128,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "Key": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "DatabaseUrl": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "RoleArn": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: arn:aws:iam:.*:[0-9]+:.*  \nUpdate requires: No interruption"
    },
    "DataApiRoleArn": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: arn:aws:iam:.*:[0-9]+:.*  \nUpdate requires: No interruption"
    },
    "ClusterIdentifier": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "WorkgroupName": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "DatabaseName": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "Warehouse": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: [\\s\\w/!@#+=.-]*  \nUpdate requires: No interruption"
    },
    "Stage": {
      "type": "string",
      "maxLength": 16,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 16  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "PrivateLinkServiceName": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "AccountName": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "RefreshToken": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "Region": {
      "type": "string",
      "maxLength": 64,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 64  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "SecretKey": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "AccessKeyId": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "Username": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "Password": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "BusinessUnitId": {
      "type": "string",
      "maxLength": 18,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 18  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ConnectorOAuthRequest": {
      "type": "object",
      "properties": {
        "AuthCode": {
          "description": "The code provided by the connector when it has been authenticated via the connected app.",
          "type": "string",
          "markdownDescription": "The code provided by the connector when it has been authenticated via the connected app.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "RedirectUri": {
          "description": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.",
          "type": "string",
          "markdownDescription": "The URL to which the authentication server redirects the browser after authorization has been\ngranted.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ClientCredentialsArn": {
      "type": "string",
      "maxLength": 2048,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nPattern: arn:aws:secretsmanager:.*:[0-9]+:.*  \nUpdate requires: No interruption"
    },
    "ApplicationHostUrl": {
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]  \nUpdate requires: No interruption"
    },
    "ApplicationServicePath": {
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: \\S+  \nUpdate requires: No interruption"
    },
    "ClientNumber": {
      "type": "string",
      "minLength": 3,
      "maxLength": 3,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 3  \nPattern: ^\\d{3}$  \nUpdate requires: No interruption"
    },
    "LogonLanguage": {
      "type": "string",
      "maxLength": 2,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2  \nPattern: ^[a-zA-Z0-9_]*$  \nUpdate requires: No interruption"
    },
    "PortNumber": {
      "type": "integer",
      "minimum": 1,
      "maximum": 65535,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "OAuthProperties": {
      "type": "object",
      "properties": {
        "AuthCodeUrl": {
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]  \nUpdate requires: No interruption"
        },
        "TokenUrl": {
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^(https?)://[-a-zA-Z0-9+&amp;@#/%?=~_|!:,.;]*[-a-zA-Z0-9+&amp;@#/%=~_|]  \nUpdate requires: No interruption"
        },
        "OAuthScopes": {
          "type": "array",
          "uniqueItems": true,
          "items": {
            "type": "string",
            "maxLength": 128,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 128  \nPattern: [/\\w]*  \nUpdate requires: No interruption"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "ConnectorProfileName",
    "ConnectionMode",
    "ConnectorType"
  ],
  "createOnlyProperties": [
    "/properties/ConnectorProfileName",
    "/properties/KMSArn",
    "/properties/ConnectorType"
  ],
  "readOnlyProperties": [
    "/properties/ConnectorProfileArn",
    "/properties/CredentialsArn"
  ],
  "writeOnlyProperties": [
    "/properties/ConnectorProfileConfig"
  ],
  "primaryIdentifier": [
    "/properties/ConnectorProfileName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "appflow:CreateConnectorProfile",
        "kms:ListKeys",
        "kms:DescribeKey",
        "kms:ListAliases",
        "kms:CreateGrant",
        "kms:ListGrants",
        "iam:PassRole",
        "secretsmanager:CreateSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:PutResourcePolicy"
      ]
    },
    "delete": {
      "permissions": [
        "appflow:DeleteConnectorProfile"
      ]
    },
    "list": {
      "permissions": [
        "appflow:DescribeConnectorProfiles"
      ]
    },
    "read": {
      "permissions": [
        "appflow:DescribeConnectorProfiles"
      ]
    },
    "update": {
      "permissions": [
        "appflow:UpdateConnectorProfile",
        "kms:ListKeys",
        "kms:DescribeKey",
        "kms:ListAliases",
        "kms:CreateGrant",
        "kms:ListGrants",
        "iam:PassRole",
        "secretsmanager:CreateSecret",
        "secretsmanager:GetSecretValue",
        "secretsmanager:PutResourcePolicy"
      ]
    }
  },
  "attributes": {
    "ConnectorProfileArn": {
      "description": "Unique identifier for connector profile resources",
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "Unique identifier for connector profile resources\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: arn:aws:appflow:.*:[0-9]+:.*  \nUpdate requires: No interruption"
    },
    "CredentialsArn": {
      "description": "A unique Arn for Connector-Profile resource",
      "type": "string",
      "maxLength": 512,
      "markdownDescription": "A unique Arn for Connector-Profile resource\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nPattern: arn:aws:.*:.*:[0-9]+:.*  \nUpdate requires: No interruption"
    }
  }
}