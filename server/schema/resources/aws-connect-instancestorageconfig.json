{
  "typeName": "AWS::Connect::InstanceStorageConfig",
  "description": "Resource Type definition for AWS::Connect::InstanceStorageConfig",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-connect",
  "definitions": {
    "KinesisStreamArn": {
      "description": "An ARN is a unique AWS resource identifier.",
      "type": "string",
      "markdownDescription": "An ARN is a unique AWS resource identifier.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:aws[-a-z0-9]*:kinesis:[-a-z0-9]*:[0-9]{12}:stream/[-a-zA-Z0-9_.]*$  \nUpdate requires: No interruption"
    },
    "FirehoseDeliveryStreamArn": {
      "description": "An ARN is a unique AWS resource identifier.",
      "type": "string",
      "markdownDescription": "An ARN is a unique AWS resource identifier.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:aws[-a-z0-9]*:firehose:[-a-z0-9]*:[0-9]{12}:deliverystream/[-a-zA-Z0-9_.]*$  \nUpdate requires: No interruption"
    },
    "AssociationId": {
      "description": "An associationID is automatically generated when a storage config is associated with an instance",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "An associationID is automatically generated when a storage config is associated with an instance\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nPattern: ^[-a-z0-9]*$  \nUpdate requires: No interruption"
    },
    "InstanceStorageResourceType": {
      "description": "Specifies the type of storage resource available for the instance",
      "type": "string",
      "enum": [
        "CHAT_TRANSCRIPTS",
        "CALL_RECORDINGS",
        "SCHEDULED_REPORTS",
        "MEDIA_STREAMS",
        "CONTACT_TRACE_RECORDS",
        "AGENT_EVENTS"
      ],
      "markdownDescription": "Specifies the type of storage resource available for the instance\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CHAT_TRANSCRIPTS | CALL_RECORDINGS | SCHEDULED_REPORTS | MEDIA_STREAMS | CONTACT_TRACE_RECORDS | AGENT_EVENTS  \nUpdate requires: No interruption"
    },
    "StorageType": {
      "description": "Specifies the storage type to be associated with the instance",
      "type": "string",
      "enum": [
        "S3",
        "KINESIS_VIDEO_STREAM",
        "KINESIS_STREAM",
        "KINESIS_FIREHOSE"
      ],
      "markdownDescription": "Specifies the storage type to be associated with the instance\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: S3 | KINESIS_VIDEO_STREAM | KINESIS_STREAM | KINESIS_FIREHOSE  \nUpdate requires: No interruption"
    },
    "BucketName": {
      "description": "A name for the S3 Bucket",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "A name for the S3 Bucket\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "Hours": {
      "description": "Number of hours",
      "type": "number",
      "markdownDescription": "Number of hours\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "Prefix": {
      "description": "Prefixes are used to infer logical hierarchy",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "Prefixes are used to infer logical hierarchy\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "EncryptionType": {
      "description": "Specifies default encryption using AWS KMS-Managed Keys",
      "type": "string",
      "enum": [
        "KMS"
      ],
      "markdownDescription": "Specifies default encryption using AWS KMS-Managed Keys\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: KMS  \nUpdate requires: No interruption"
    },
    "KeyId": {
      "description": "Specifies the encryption key id",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "Specifies the encryption key id\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
    },
    "EncryptionConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "EncryptionType": {
          "$ref": "#/definitions/EncryptionType"
        },
        "KeyId": {
          "$ref": "#/definitions/KeyId"
        }
      },
      "required": [
        "EncryptionType",
        "KeyId"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3Config": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketName": {
          "$ref": "#/definitions/BucketName"
        },
        "BucketPrefix": {
          "$ref": "#/definitions/Prefix"
        },
        "EncryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig"
        }
      },
      "required": [
        "BucketName",
        "BucketPrefix"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "KinesisVideoStreamConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Prefix": {
          "$ref": "#/definitions/Prefix"
        },
        "RetentionPeriodHours": {
          "$ref": "#/definitions/Hours"
        },
        "EncryptionConfig": {
          "$ref": "#/definitions/EncryptionConfig"
        }
      },
      "required": [
        "Prefix",
        "RetentionPeriodHours"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "KinesisStreamConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "StreamArn": {
          "$ref": "#/definitions/KinesisStreamArn"
        }
      },
      "required": [
        "StreamArn"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "KinesisFirehoseConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "FirehoseArn": {
          "$ref": "#/definitions/FirehoseDeliveryStreamArn"
        }
      },
      "required": [
        "FirehoseArn"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "InstanceArn": {
      "description": "Connect Instance ID with which the storage config will be associated",
      "type": "string",
      "markdownDescription": "Connect Instance ID with which the storage config will be associated\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$  \nUpdate requires: Replacement"
    },
    "ResourceType": {
      "$ref": "#/definitions/InstanceStorageResourceType"
    },
    "StorageType": {
      "$ref": "#/definitions/StorageType"
    },
    "S3Config": {
      "$ref": "#/definitions/S3Config"
    },
    "KinesisVideoStreamConfig": {
      "$ref": "#/definitions/KinesisVideoStreamConfig"
    },
    "KinesisStreamConfig": {
      "$ref": "#/definitions/KinesisStreamConfig"
    },
    "KinesisFirehoseConfig": {
      "$ref": "#/definitions/KinesisFirehoseConfig"
    }
  },
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "required": [
    "InstanceArn",
    "ResourceType",
    "StorageType"
  ],
  "additionalProperties": false,
  "readOnlyProperties": [
    "/properties/AssociationId"
  ],
  "createOnlyProperties": [
    "/properties/InstanceArn",
    "/properties/ResourceType"
  ],
  "primaryIdentifier": [
    "/properties/InstanceArn",
    "/properties/AssociationId",
    "/properties/ResourceType"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "connect:AssociateInstanceStorageConfig",
        "connect:DescribeInstance",
        "ds:DescribeDirectories",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "iam:PutRolePolicy",
        "kinesis:DescribeStream",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "firehose:DescribeDeliveryStream"
      ]
    },
    "read": {
      "permissions": [
        "connect:DescribeInstanceStorageConfig",
        "connect:ListInstanceStorageConfigs",
        "connect:DescribeInstance",
        "ds:DescribeDirectories",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation"
      ]
    },
    "update": {
      "permissions": [
        "connect:UpdateInstanceStorageConfig",
        "ds:DescribeDirectories",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "kinesis:DescribeStream",
        "iam:PutRolePolicy",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:RetireGrant",
        "firehose:DescribeDeliveryStream"
      ]
    },
    "delete": {
      "permissions": [
        "connect:DisassociateInstanceStorageConfig",
        "connect:DescribeInstance",
        "s3:GetBucketAcl",
        "s3:GetBucketLocation",
        "kms:RetireGrant"
      ]
    },
    "list": {
      "permissions": [
        "connect:DescribeInstance",
        "connect:ListInstanceStorageConfigs",
        "ds:DescribeDirectories"
      ]
    }
  },
  "attributes": {
    "AssociationId": {
      "$ref": "#/definitions/AssociationId"
    }
  }
}