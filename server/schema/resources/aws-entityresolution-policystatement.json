{
  "typeName": "AWS::EntityResolution::PolicyStatement",
  "description": "Policy Statement defined in AWS Entity Resolution Service",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-entity-resolution.git",
  "definitions": {
    "VeniceGlobalArn": {
      "description": "Arn of the resource to which the policy statement is being attached.",
      "type": "string",
      "markdownDescription": "Arn of the resource to which the policy statement is being attached.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:(aws|aws-us-gov|aws-cn):entityresolution:[a-z]{2}-[a-z]{1,10}-[0-9]:[0-9]{12}:((schemamapping|matchingworkflow|idmappingworkflow|idnamespace)/[a-zA-Z_0-9-]{1,255})$  \nUpdate requires: No interruption"
    },
    "StatementId": {
      "description": "The Statement Id of the policy statement that is being attached.",
      "type": "string",
      "minLength": 1,
      "maxLength": 64,
      "markdownDescription": "The Statement Id of the policy statement that is being attached.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[0-9A-Za-z]+$  \nUpdate requires: No interruption"
    },
    "StatementEffect": {
      "type": "string",
      "enum": [
        "Allow",
        "Deny"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Allow | Deny  \nUpdate requires: No interruption"
    },
    "StatementAction": {
      "type": "string",
      "minLength": 3,
      "maxLength": 64,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 64  \nPattern: ^(entityresolution:[a-zA-Z0-9]+)$  \nUpdate requires: No interruption"
    },
    "StatementActionList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StatementAction"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "StatementPrincipal": {
      "type": "string",
      "minLength": 12,
      "maxLength": 64,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 64  \nPattern: ^(\\\\d{12})|([a-z0-9\\\\.]+)$  \nUpdate requires: No interruption"
    },
    "StatementPrincipalList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/StatementPrincipal"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "StatementCondition": {
      "type": "string",
      "minLength": 1,
      "maxLength": 40960,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 40960  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Arn": {
      "$ref": "#/definitions/VeniceGlobalArn"
    },
    "StatementId": {
      "$ref": "#/definitions/StatementId"
    },
    "Effect": {
      "$ref": "#/definitions/StatementEffect"
    },
    "Action": {
      "$ref": "#/definitions/StatementActionList"
    },
    "Principal": {
      "$ref": "#/definitions/StatementPrincipalList"
    },
    "Condition": {
      "$ref": "#/definitions/StatementCondition"
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "required": [
    "Arn",
    "StatementId"
  ],
  "createOnlyProperties": [
    "/properties/StatementId",
    "/properties/Arn"
  ],
  "primaryIdentifier": [
    "/properties/Arn",
    "/properties/StatementId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "entityresolution:AddPolicyStatement"
      ]
    },
    "read": {
      "permissions": [
        "entityresolution:GetPolicy"
      ]
    },
    "update": {
      "permissions": [
        "entityresolution:AddPolicyStatement",
        "entityresolution:DeletePolicyStatement"
      ]
    },
    "delete": {
      "permissions": [
        "entityresolution:DeletePolicyStatement",
        "entityresolution:GetPolicy"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "Arn": {
            "$ref": "resource-schema.json#/properties/Arn"
          }
        },
        "required": [
          "Arn"
        ]
      },
      "permissions": [
        "entityresolution:GetPolicy"
      ]
    }
  },
  "attributes": {}
}