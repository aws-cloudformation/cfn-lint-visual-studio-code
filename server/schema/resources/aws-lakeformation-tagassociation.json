{
  "typeName": "AWS::LakeFormation::TagAssociation",
  "description": "A resource schema representing a Lake Formation Tag Association. While tag associations are not explicit Lake Formation resources, this CloudFormation resource can be used to associate tags with Lake Formation entities.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "CatalogIdString": {
      "type": "string",
      "minLength": 12,
      "maxLength": 12,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nUpdate requires: No interruption\n"
    },
    "NameString": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
    },
    "LFTagPair": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString"
        },
        "TagKey": {
          "$ref": "#/definitions/LFTagKey"
        },
        "TagValues": {
          "$ref": "#/definitions/TagValueList"
        }
      },
      "required": [
        "CatalogId",
        "TagKey",
        "TagValues"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LFTagsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LFTagPair"
      },
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "DataLakePrincipalString": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption\n"
    },
    "DataLakePrincipal": {
      "type": "object",
      "properties": {
        "DataLakePrincipalIdentifier": {
          "$ref": "#/definitions/DataLakePrincipalString"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ResourceType": {
      "type": "string",
      "enum": [
        "DATABASE",
        "TABLE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DATABASE | TABLE  \nUpdate requires: No interruption\n"
    },
    "CatalogResource": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DatabaseResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString"
        },
        "Name": {
          "$ref": "#/definitions/NameString"
        }
      },
      "required": [
        "CatalogId",
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TableWildcard": {
      "type": "object",
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TableResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString"
        },
        "DatabaseName": {
          "$ref": "#/definitions/NameString"
        },
        "Name": {
          "$ref": "#/definitions/NameString"
        },
        "TableWildcard": {
          "$ref": "#/definitions/TableWildcard"
        }
      },
      "required": [
        "CatalogId",
        "DatabaseName"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ColumnNames": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NameString"
      },
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "TableWithColumnsResource": {
      "type": "object",
      "properties": {
        "CatalogId": {
          "$ref": "#/definitions/CatalogIdString"
        },
        "DatabaseName": {
          "$ref": "#/definitions/NameString"
        },
        "Name": {
          "$ref": "#/definitions/NameString"
        },
        "ColumnNames": {
          "$ref": "#/definitions/ColumnNames"
        }
      },
      "required": [
        "CatalogId",
        "DatabaseName",
        "Name",
        "ColumnNames"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "Catalog": {
          "$ref": "#/definitions/CatalogResource"
        },
        "Database": {
          "$ref": "#/definitions/DatabaseResource"
        },
        "Table": {
          "$ref": "#/definitions/TableResource"
        },
        "TableWithColumns": {
          "$ref": "#/definitions/TableWithColumnsResource"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "LFTagKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
    },
    "LFTagValue": {
      "type": "string",
      "minLength": 0,
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
    },
    "TagValueList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/LFTagValue"
      },
      "insertionOrder": false,
      "minItems": 1,
      "maxItems": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Resource": {
      "description": "Resource to tag with the Lake Formation Tags",
      "$ref": "#/definitions/Resource",
      "markdownDescription": "Resource to tag with the Lake Formation Tags\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement\n"
    },
    "LFTags": {
      "description": "List of Lake Formation Tags to associate with the Lake Formation Resource",
      "$ref": "#/definitions/LFTagsList",
      "markdownDescription": "List of Lake Formation Tags to associate with the Lake Formation Resource\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement\n"
    },
    "ResourceIdentifier": {
      "description": "Unique string identifying the resource. Used as primary identifier, which ideally should be a string",
      "type": "string",
      "markdownDescription": "Unique string identifying the resource. Used as primary identifier, which ideally should be a string\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "TagsIdentifier": {
      "description": "Unique string identifying the resource's tags. Used as primary identifier, which ideally should be a string",
      "type": "string",
      "markdownDescription": "Unique string identifying the resource's tags. Used as primary identifier, which ideally should be a string\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  },
  "additionalProperties": false,
  "required": [
    "Resource",
    "LFTags"
  ],
  "createOnlyProperties": [
    "/properties/Resource",
    "/properties/LFTags"
  ],
  "readOnlyProperties": [
    "/properties/ResourceIdentifier",
    "/properties/TagsIdentifier"
  ],
  "replacementStrategy": "delete_then_create",
  "tagging": {
    "taggable": false
  },
  "primaryIdentifier": [
    "/properties/ResourceIdentifier",
    "/properties/TagsIdentifier"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lakeformation:AddLFTagsToResource",
        "glue:GetDatabase",
        "glue:GetTable"
      ]
    },
    "read": {
      "permissions": [
        "lakeformation:GetResourceLFTags",
        "glue:GetDatabase",
        "glue:GetTable"
      ]
    },
    "delete": {
      "permissions": [
        "lakeformation:RemoveLFTagsFromResource",
        "glue:GetDatabase",
        "glue:GetTable"
      ]
    }
  },
  "attributes": {
    "ResourceIdentifier": {
      "description": "Unique string identifying the resource. Used as primary identifier, which ideally should be a string",
      "type": "string",
      "markdownDescription": "Unique string identifying the resource. Used as primary identifier, which ideally should be a string\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "TagsIdentifier": {
      "description": "Unique string identifying the resource's tags. Used as primary identifier, which ideally should be a string",
      "type": "string",
      "markdownDescription": "Unique string identifying the resource's tags. Used as primary identifier, which ideally should be a string\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}