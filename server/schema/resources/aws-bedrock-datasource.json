{
  "typeName": "AWS::Bedrock::DataSource",
  "description": "Definition of AWS::Bedrock::DataSource Resource Type",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-aps",
  "definitions": {
    "ChunkingConfiguration": {
      "type": "object",
      "description": "Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.",
      "properties": {
        "ChunkingStrategy": {
          "$ref": "#/definitions/ChunkingStrategy"
        },
        "FixedSizeChunkingConfiguration": {
          "$ref": "#/definitions/FixedSizeChunkingConfiguration"
        }
      },
      "required": [
        "ChunkingStrategy"
      ],
      "additionalProperties": false,
      "markdownDescription": "Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ChunkingStrategy": {
      "type": "string",
      "description": "Knowledge base can split your source data into chunks. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for NONE, then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.",
      "enum": [
        "FIXED_SIZE",
        "NONE"
      ],
      "markdownDescription": "Knowledge base can split your source data into chunks. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried. You have the following options for chunking your data. If you opt for NONE, then you may want to pre-process your files by splitting them up such that each file corresponds to a chunk.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: FIXED_SIZE | NONE  \nUpdate requires: No interruption"
    },
    "DataSourceConfiguration": {
      "type": "object",
      "description": "Specifies a raw data source location to ingest.",
      "properties": {
        "Type": {
          "$ref": "#/definitions/DataSourceType"
        },
        "S3Configuration": {
          "$ref": "#/definitions/S3DataSourceConfiguration"
        }
      },
      "required": [
        "Type",
        "S3Configuration"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies a raw data source location to ingest.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSourceStatus": {
      "type": "string",
      "description": "The status of a data source.",
      "enum": [
        "AVAILABLE",
        "DELETING"
      ],
      "markdownDescription": "The status of a data source.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AVAILABLE | DELETING  \nUpdate requires: No interruption"
    },
    "DataSourceType": {
      "type": "string",
      "description": "The type of the data source location.",
      "enum": [
        "S3"
      ],
      "markdownDescription": "The type of the data source location.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: S3  \nUpdate requires: No interruption"
    },
    "FixedSizeChunkingConfiguration": {
      "type": "object",
      "description": "Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.",
      "properties": {
        "MaxTokens": {
          "type": "integer",
          "minimum": 1,
          "description": "The maximum number of tokens to include in a chunk.",
          "markdownDescription": "The maximum number of tokens to include in a chunk.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "OverlapPercentage": {
          "type": "integer",
          "maximum": 99,
          "minimum": 1,
          "description": "The percentage of overlap between adjacent chunks of a data source.",
          "markdownDescription": "The percentage of overlap between adjacent chunks of a data source.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MaxTokens",
        "OverlapPercentage"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configurations for when you choose fixed-size chunking. If you set the chunkingStrategy as NONE, exclude this field.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3DataSourceConfiguration": {
      "type": "object",
      "description": "Contains information about the S3 configuration of the data source.",
      "properties": {
        "BucketArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "description": "The ARN of the bucket that contains the data source.",
          "markdownDescription": "The ARN of the bucket that contains the data source.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:aws(|-cn|-us-gov):s3:::[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$  \nUpdate requires: No interruption"
        },
        "InclusionPrefixes": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 300,
            "minLength": 1,
            "description": "Prefix for s3 object.",
            "markdownDescription": "Prefix for s3 object.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 300  \nUpdate requires: No interruption"
          },
          "maxItems": 1,
          "minItems": 1,
          "description": "A list of S3 prefixes that define the object containing the data sources.",
          "insertionOrder": false,
          "markdownDescription": "A list of S3 prefixes that define the object containing the data sources.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "BucketArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains information about the S3 configuration of the data source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServerSideEncryptionConfiguration": {
      "type": "object",
      "description": "Contains details about the server-side encryption for the data source.",
      "properties": {
        "KmsKeyArn": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "description": "The ARN of the AWS KMS key used to encrypt the resource.",
          "markdownDescription": "The ARN of the AWS KMS key used to encrypt the resource.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:aws(|-cn|-us-gov):kms:[a-zA-Z0-9-]*:[0-9]{12}:key/[a-zA-Z0-9-]{36}$  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Contains details about the server-side encryption for the data source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VectorIngestionConfiguration": {
      "type": "object",
      "description": "Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.",
      "properties": {
        "ChunkingConfiguration": {
          "$ref": "#/definitions/ChunkingConfiguration"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Details about how to chunk the documents in the data source. A chunk refers to an excerpt from a data source that is returned when the knowledge base that it belongs to is queried.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "DataSourceConfiguration": {
      "$ref": "#/definitions/DataSourceConfiguration"
    },
    "Description": {
      "type": "string",
      "maxLength": 200,
      "minLength": 1,
      "description": "Description of the Resource.",
      "markdownDescription": "Description of the Resource.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nUpdate requires: No interruption"
    },
    "KnowledgeBaseId": {
      "type": "string",
      "description": "The unique identifier of the knowledge base to which to add the data source.",
      "markdownDescription": "The unique identifier of the knowledge base to which to add the data source.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^[0-9a-zA-Z]{10}$  \nUpdate requires: Replacement"
    },
    "Name": {
      "type": "string",
      "description": "The name of the data source.",
      "markdownDescription": "The name of the data source.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^([0-9a-zA-Z][_-]?){1,100}$  \nUpdate requires: No interruption"
    },
    "ServerSideEncryptionConfiguration": {
      "$ref": "#/definitions/ServerSideEncryptionConfiguration"
    },
    "VectorIngestionConfiguration": {
      "$ref": "#/definitions/VectorIngestionConfiguration"
    }
  },
  "required": [
    "DataSourceConfiguration",
    "Name",
    "KnowledgeBaseId"
  ],
  "readOnlyProperties": [
    "/properties/DataSourceId",
    "/properties/DataSourceStatus",
    "/properties/CreatedAt",
    "/properties/UpdatedAt"
  ],
  "createOnlyProperties": [
    "/properties/KnowledgeBaseId",
    "/properties/VectorIngestionConfiguration"
  ],
  "primaryIdentifier": [
    "/properties/KnowledgeBaseId",
    "/properties/DataSourceId"
  ],
  "tagging": {
    "taggable": false,
    "cloudFormationSystemTags": true
  },
  "handlers": {
    "create": {
      "permissions": [
        "bedrock:CreateDataSource",
        "bedrock:GetDataSource",
        "bedrock:GetKnowledgeBase"
      ]
    },
    "read": {
      "permissions": [
        "bedrock:GetDataSource"
      ]
    },
    "update": {
      "permissions": [
        "bedrock:GetDataSource",
        "bedrock:UpdateDataSource"
      ]
    },
    "delete": {
      "permissions": [
        "bedrock:GetDataSource",
        "bedrock:DeleteDataSource"
      ]
    },
    "list": {
      "permissions": [
        "bedrock:ListDataSources"
      ],
      "handlerSchema": {
        "properties": {
          "KnowledgeBaseId": {
            "$ref": "resource-schema.json#/properties/KnowledgeBaseId"
          }
        },
        "required": [
          "KnowledgeBaseId"
        ]
      }
    }
  },
  "additionalProperties": false,
  "attributes": {
    "DataSourceId": {
      "type": "string",
      "description": "Identifier for a resource.",
      "markdownDescription": "Identifier for a resource.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[0-9a-zA-Z]{10}$  \nUpdate requires: No interruption"
    },
    "DataSourceStatus": {
      "$ref": "#/definitions/DataSourceStatus"
    },
    "CreatedAt": {
      "type": "string",
      "description": "The time at which the data source was created.",
      "markdownDescription": "The time at which the data source was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "UpdatedAt": {
      "type": "string",
      "description": "The time at which the knowledge base was last updated.",
      "markdownDescription": "The time at which the knowledge base was last updated.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}