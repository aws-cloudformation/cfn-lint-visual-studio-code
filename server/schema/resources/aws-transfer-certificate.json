{
  "typeName": "AWS::Transfer::Certificate",
  "description": "Resource Type definition for AWS::Transfer::Certificate",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Usage": {
      "description": "Specifies the usage type for the certificate.",
      "type": "string",
      "enum": [
        "SIGNING",
        "ENCRYPTION",
        "TLS"
      ],
      "markdownDescription": "Specifies the usage type for the certificate.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: SIGNING | ENCRYPTION | TLS  \nUpdate requires: No interruption\n"
    },
    "Certificate": {
      "description": "Specifies the certificate body to be imported.",
      "type": "string",
      "minLength": 1,
      "maxLength": 16384,
      "markdownDescription": "Specifies the certificate body to be imported.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 16384  \nPattern: ^[\\t\\n\\r\\u0020-\\u00FF]+$  \nUpdate requires: Replacement\n"
    },
    "CertificateChain": {
      "description": "Specifies the certificate chain to be imported.",
      "type": "string",
      "minLength": 1,
      "maxLength": 2097152,
      "markdownDescription": "Specifies the certificate chain to be imported.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2097152  \nPattern: ^[\\t\\n\\r\\u0020-\\u00FF]+$  \nUpdate requires: Replacement\n"
    },
    "PrivateKey": {
      "description": "Specifies the private key for the certificate.",
      "type": "string",
      "minLength": 1,
      "maxLength": 16384,
      "markdownDescription": "Specifies the private key for the certificate.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 16384  \nPattern: ^[\\t\\n\\r\\u0020-\\u00FF]+$  \nUpdate requires: Replacement\n"
    },
    "ActiveDate": {
      "description": "Specifies the active date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the active date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "InactiveDate": {
      "description": "Specifies the inactive date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the inactive date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Description": {
      "description": "A textual description for the certificate.",
      "type": "string",
      "minLength": 1,
      "maxLength": 200,
      "markdownDescription": "A textual description for the certificate.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nPattern: ^[\\u0021-\\u007E]+$  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "description": "Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose.",
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "Key-value pairs that can be used to group and search for certificates. Tags are metadata attached to certificates for any purpose.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Arn": {
      "description": "Specifies the unique Amazon Resource Name (ARN) for the agreement.",
      "type": "string",
      "minLength": 20,
      "maxLength": 1600,
      "markdownDescription": "Specifies the unique Amazon Resource Name (ARN) for the agreement.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 1600  \nPattern: arn:.*  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CertificateId": {
      "description": "A unique identifier for the certificate.",
      "type": "string",
      "minLength": 22,
      "maxLength": 22,
      "markdownDescription": "A unique identifier for the certificate.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 22  \nMaximum Length: 22  \nPattern: ^cert-([0-9a-f]{17})$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Status": {
      "description": "A status description for the certificate.",
      "type": "string",
      "enum": [
        "ACTIVE",
        "PENDING",
        "INACTIVE"
      ],
      "markdownDescription": "A status description for the certificate.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ACTIVE | PENDING | INACTIVE  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Type": {
      "description": "Describing the type of certificate. With or without a private key.",
      "type": "string",
      "enum": [
        "CERTIFICATE",
        "CERTIFICATE_WITH_PRIVATE_KEY"
      ],
      "markdownDescription": "Describing the type of certificate. With or without a private key.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CERTIFICATE | CERTIFICATE_WITH_PRIVATE_KEY  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Serial": {
      "description": "Specifies Certificate's serial.",
      "type": "string",
      "minLength": 0,
      "maxLength": 48,
      "markdownDescription": "Specifies Certificate's serial.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 48  \nPattern: ^[0-9a-fA-F{}:?]*$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "NotBeforeDate": {
      "description": "Specifies the not before date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the not before date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "NotAfterDate": {
      "description": "Specifies the not after date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the not after date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  },
  "additionalProperties": false,
  "required": [
    "Certificate",
    "Usage"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CertificateId",
    "/properties/Status",
    "/properties/Type",
    "/properties/Serial",
    "/properties/NotAfterDate",
    "/properties/NotBeforeDate"
  ],
  "writeOnlyProperties": [
    "/properties/PrivateKey"
  ],
  "createOnlyProperties": [
    "/properties/Certificate",
    "/properties/CertificateChain",
    "/properties/PrivateKey"
  ],
  "primaryIdentifier": [
    "/properties/CertificateId"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "transfer:ImportCertificate",
        "transfer:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "transfer:DescribeCertificate"
      ]
    },
    "update": {
      "permissions": [
        "transfer:UpdateCertificate",
        "transfer:UnTagResource",
        "transfer:TagResource"
      ]
    },
    "delete": {
      "permissions": [
        "transfer:DeleteCertificate"
      ]
    },
    "list": {
      "permissions": [
        "transfer:ListCertificates"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "description": "Specifies the unique Amazon Resource Name (ARN) for the agreement.",
      "type": "string",
      "minLength": 20,
      "maxLength": 1600,
      "markdownDescription": "Specifies the unique Amazon Resource Name (ARN) for the agreement.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 1600  \nPattern: arn:.*  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CertificateId": {
      "description": "A unique identifier for the certificate.",
      "type": "string",
      "minLength": 22,
      "maxLength": 22,
      "markdownDescription": "A unique identifier for the certificate.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 22  \nMaximum Length: 22  \nPattern: ^cert-([0-9a-f]{17})$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Status": {
      "description": "A status description for the certificate.",
      "type": "string",
      "enum": [
        "ACTIVE",
        "PENDING",
        "INACTIVE"
      ],
      "markdownDescription": "A status description for the certificate.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ACTIVE | PENDING | INACTIVE  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Type": {
      "description": "Describing the type of certificate. With or without a private key.",
      "type": "string",
      "enum": [
        "CERTIFICATE",
        "CERTIFICATE_WITH_PRIVATE_KEY"
      ],
      "markdownDescription": "Describing the type of certificate. With or without a private key.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CERTIFICATE | CERTIFICATE_WITH_PRIVATE_KEY  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Serial": {
      "description": "Specifies Certificate's serial.",
      "type": "string",
      "minLength": 0,
      "maxLength": 48,
      "markdownDescription": "Specifies Certificate's serial.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 48  \nPattern: ^[0-9a-fA-F{}:?]*$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "NotBeforeDate": {
      "description": "Specifies the not before date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the not before date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "NotAfterDate": {
      "description": "Specifies the not after date for the certificate.",
      "type": "string",
      "markdownDescription": "Specifies the not after date for the certificate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}