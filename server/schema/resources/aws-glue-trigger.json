{
  "typeName": "AWS::Glue::Trigger",
  "description": "Resource Type definition for AWS::Glue::Trigger",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-glue.git",
  "additionalProperties": false,
  "properties": {
    "Type": {
      "type": "string",
      "description": "The type of trigger that this is.",
      "markdownDescription": "The type of trigger that this is.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: Replacement\n"
    },
    "StartOnCreation": {
      "type": "boolean",
      "description": "Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.",
      "markdownDescription": "Set to true to start SCHEDULED and CONDITIONAL triggers when created. True is not supported for ON_DEMAND triggers.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "Description": {
      "type": "string",
      "description": "A description of this trigger.",
      "markdownDescription": "A description of this trigger.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Actions": {
      "type": "array",
      "description": "The actions initiated by this trigger.",
      "uniqueItems": false,
      "items": {
        "$ref": "#/definitions/Action"
      },
      "markdownDescription": "The actions initiated by this trigger.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "EventBatchingCondition": {
      "$ref": "#/definitions/EventBatchingCondition",
      "description": "Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.",
      "markdownDescription": "Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "WorkflowName": {
      "type": "string",
      "description": "The name of the workflow associated with the trigger.",
      "markdownDescription": "The name of the workflow associated with the trigger.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Schedule": {
      "type": "string",
      "description": "A cron expression used to specify the schedule.",
      "markdownDescription": "A cron expression used to specify the schedule.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "type": "object",
      "description": "The tags to use with this trigger.",
      "markdownDescription": "The tags to use with this trigger.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Name": {
      "type": "string",
      "description": "The name of the trigger.",
      "markdownDescription": "The name of the trigger.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    },
    "Predicate": {
      "$ref": "#/definitions/Predicate",
      "description": "The predicate of this trigger, which defines when it will fire.",
      "markdownDescription": "The predicate of this trigger, which defines when it will fire.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "Condition": {
      "type": "object",
      "description": "Defines a condition under which a trigger fires.",
      "additionalProperties": false,
      "properties": {
        "JobName": {
          "type": "string",
          "description": "The name of the job whose JobRuns this condition applies to, and on which this trigger waits.",
          "markdownDescription": "The name of the job whose JobRuns this condition applies to, and on which this trigger waits.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "CrawlerName": {
          "type": "string",
          "description": "The name of the crawler to which this condition applies.",
          "markdownDescription": "The name of the crawler to which this condition applies.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "State": {
          "type": "string",
          "description": "The condition state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT, and FAILED.",
          "markdownDescription": "The condition state. Currently, the values supported are SUCCEEDED, STOPPED, TIMEOUT, and FAILED.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "CrawlState": {
          "type": "string",
          "description": "The state of the crawler to which this condition applies.",
          "markdownDescription": "The state of the crawler to which this condition applies.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "LogicalOperator": {
          "type": "string",
          "description": "A logical operator.",
          "markdownDescription": "A logical operator.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Defines a condition under which a trigger fires.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "NotificationProperty": {
      "type": "object",
      "description": "Specifies configuration properties of a job run notification.",
      "additionalProperties": false,
      "properties": {
        "NotifyDelayAfter": {
          "type": "integer",
          "description": "After a job run starts, the number of minutes to wait before sending a job run delay notification",
          "markdownDescription": "After a job run starts, the number of minutes to wait before sending a job run delay notification\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "Specifies configuration properties of a job run notification.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Action": {
      "type": "object",
      "description": "The actions initiated by this trigger.",
      "additionalProperties": false,
      "properties": {
        "NotificationProperty": {
          "$ref": "#/definitions/NotificationProperty",
          "description": "Specifies configuration properties of a job run notification.",
          "markdownDescription": "Specifies configuration properties of a job run notification.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "CrawlerName": {
          "type": "string",
          "description": "The name of the crawler to be used with this action.",
          "markdownDescription": "The name of the crawler to be used with this action.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Timeout": {
          "type": "integer",
          "description": "The JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.",
          "markdownDescription": "The JobRun timeout in minutes. This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status. The default is 2,880 minutes (48 hours). This overrides the timeout value set in the parent job.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "JobName": {
          "type": "string",
          "description": "The name of a job to be executed.",
          "markdownDescription": "The name of a job to be executed.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Arguments": {
          "type": "object",
          "description": "The job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.",
          "markdownDescription": "The job arguments used when this trigger fires. For this job run, they replace the default arguments set in the job definition itself.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
        },
        "SecurityConfiguration": {
          "type": "string",
          "description": "The name of the SecurityConfiguration structure to be used with this action.",
          "markdownDescription": "The name of the SecurityConfiguration structure to be used with this action.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "The actions initiated by this trigger.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "EventBatchingCondition": {
      "type": "object",
      "description": "Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.",
      "additionalProperties": false,
      "properties": {
        "BatchSize": {
          "type": "integer",
          "description": "Number of events that must be received from Amazon EventBridge before EventBridge event trigger fires.",
          "markdownDescription": "Number of events that must be received from Amazon EventBridge before EventBridge event trigger fires.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        },
        "BatchWindow": {
          "type": "integer",
          "description": "Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.",
          "markdownDescription": "Window of time in seconds after which EventBridge event trigger fires. Window starts when first event is received.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "BatchSize"
      ],
      "markdownDescription": "Batch condition that must be met (specified number of events received or batch time window expired) before EventBridge event trigger fires.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Predicate": {
      "type": "object",
      "description": "The predicate of this trigger, which defines when it will fire.",
      "additionalProperties": false,
      "properties": {
        "Logical": {
          "type": "string",
          "description": "An optional field if only one condition is listed. If multiple conditions are listed, then this field is required.",
          "markdownDescription": "An optional field if only one condition is listed. If multiple conditions are listed, then this field is required.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Conditions": {
          "type": "array",
          "description": "A list of the conditions that determine when the trigger will fire.",
          "uniqueItems": false,
          "items": {
            "$ref": "#/definitions/Condition"
          },
          "markdownDescription": "A list of the conditions that determine when the trigger will fire.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "markdownDescription": "The predicate of this trigger, which defines when it will fire.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "required": [
    "Type",
    "Actions"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/WorkflowName",
    "/properties/Type"
  ],
  "writeOnlyProperties": [
    "/properties/StartOnCreation"
  ],
  "primaryIdentifier": [
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "glue:CreateTrigger",
        "glue:GetTrigger",
        "glue:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "glue:GetTrigger",
        "glue:GetTags"
      ]
    },
    "update": {
      "permissions": [
        "glue:UpdateTrigger",
        "glue:UntagResource",
        "glue:TagResource"
      ]
    },
    "delete": {
      "permissions": [
        "glue:DeleteTrigger",
        "glue:GetTrigger"
      ]
    },
    "list": {
      "permissions": [
        "glue:ListTriggers"
      ]
    }
  },
  "attributes": {}
}