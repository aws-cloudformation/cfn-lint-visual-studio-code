{
  "typeName": "AWS::BedrockAgentCore::GatewayTarget",
  "description": "Definition of AWS::BedrockAgentCore::GatewayTarget Resource Type",
  "definitions": {
    "ApiKeyCredentialLocation": {
      "type": "string",
      "enum": [
        "HEADER",
        "QUERY_PARAMETER"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: HEADER | QUERY_PARAMETER  \nUpdate requires: No interruption\n"
    },
    "ApiKeyCredentialProvider": {
      "type": "object",
      "properties": {
        "ProviderArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:([^:]*):([^:]*):([^:]*):([0-9]{12})?:(.+)$  \nUpdate requires: No interruption\n"
        },
        "CredentialParameterName": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption\n"
        },
        "CredentialPrefix": {
          "type": "string",
          "maxLength": 64,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption\n"
        },
        "CredentialLocation": {
          "$ref": "#/definitions/ApiKeyCredentialLocation"
        }
      },
      "required": [
        "ProviderArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ApiSchemaConfiguration": {
      "oneOf": [
        {
          "type": "object",
          "title": "S3",
          "properties": {
            "S3": {
              "$ref": "#/definitions/S3Configuration"
            }
          },
          "required": [
            "S3"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "InlinePayload",
          "properties": {
            "InlinePayload": {
              "type": "string"
            }
          },
          "required": [
            "InlinePayload"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CredentialProvider": {
      "oneOf": [
        {
          "type": "object",
          "title": "OauthCredentialProvider",
          "properties": {
            "OauthCredentialProvider": {
              "$ref": "#/definitions/OAuthCredentialProvider"
            }
          },
          "required": [
            "OauthCredentialProvider"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "ApiKeyCredentialProvider",
          "properties": {
            "ApiKeyCredentialProvider": {
              "$ref": "#/definitions/ApiKeyCredentialProvider"
            }
          },
          "required": [
            "ApiKeyCredentialProvider"
          ],
          "additionalProperties": false
        }
      ]
    },
    "CredentialProviderConfiguration": {
      "type": "object",
      "properties": {
        "CredentialProviderType": {
          "$ref": "#/definitions/CredentialProviderType"
        },
        "CredentialProvider": {
          "$ref": "#/definitions/CredentialProvider"
        }
      },
      "required": [
        "CredentialProviderType"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "CredentialProviderType": {
      "type": "string",
      "enum": [
        "GATEWAY_IAM_ROLE",
        "OAUTH",
        "API_KEY"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: GATEWAY_IAM_ROLE | OAUTH | API_KEY  \nUpdate requires: No interruption\n"
    },
    "McpLambdaTargetConfiguration": {
      "type": "object",
      "properties": {
        "LambdaArn": {
          "type": "string",
          "maxLength": 170,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 170  \nPattern: ^arn:(aws[a-zA-Z-]*)?:lambda:([a-z]{2}(-gov)?-[a-z]+-\\d{1}):(\\d{12}):function:([a-zA-Z0-9-_.]+)(:(\\$LATEST|[a-zA-Z0-9-_]+))?$  \nUpdate requires: No interruption\n"
        },
        "ToolSchema": {
          "$ref": "#/definitions/ToolSchema"
        }
      },
      "required": [
        "LambdaArn",
        "ToolSchema"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "McpTargetConfiguration": {
      "oneOf": [
        {
          "type": "object",
          "title": "OpenApiSchema",
          "properties": {
            "OpenApiSchema": {
              "$ref": "#/definitions/ApiSchemaConfiguration"
            }
          },
          "required": [
            "OpenApiSchema"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "SmithyModel",
          "properties": {
            "SmithyModel": {
              "$ref": "#/definitions/ApiSchemaConfiguration"
            }
          },
          "required": [
            "SmithyModel"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "Lambda",
          "properties": {
            "Lambda": {
              "$ref": "#/definitions/McpLambdaTargetConfiguration"
            }
          },
          "required": [
            "Lambda"
          ],
          "additionalProperties": false
        }
      ]
    },
    "OAuthCredentialProvider": {
      "type": "object",
      "properties": {
        "ProviderArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:([^:]*):([^:]*):([^:]*):([0-9]{12})?:(.+)$  \nUpdate requires: No interruption\n"
        },
        "Scopes": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nUpdate requires: No interruption\n"
          },
          "maxItems": 100,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "CustomParameters": {
          "$ref": "#/definitions/OAuthCustomParameters"
        }
      },
      "required": [
        "ProviderArn",
        "Scopes"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "OAuthCustomParameters": {
      "type": "object",
      "maxProperties": 10,
      "minProperties": 1,
      "patternProperties": {
        ".+": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "S3Configuration": {
      "type": "object",
      "properties": {
        "Uri": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^s3://.{1,2043}$  \nUpdate requires: No interruption\n"
        },
        "BucketOwnerAccountId": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[0-9]{12}$  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SchemaDefinition": {
      "type": "object",
      "properties": {
        "Type": {
          "$ref": "#/definitions/SchemaType"
        },
        "Properties": {
          "$ref": "#/definitions/SchemaProperties"
        },
        "Required": {
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        },
        "Items": {
          "$ref": "#/definitions/SchemaDefinition"
        },
        "Description": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SchemaProperties": {
      "type": "object",
      "patternProperties": {
        ".+": {
          "$ref": "#/definitions/SchemaDefinition"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SchemaType": {
      "type": "string",
      "enum": [
        "string",
        "number",
        "object",
        "array",
        "boolean",
        "integer"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: string | number | object | array | boolean | integer  \nUpdate requires: No interruption\n"
    },
    "TargetConfiguration": {
      "oneOf": [
        {
          "type": "object",
          "title": "Mcp",
          "properties": {
            "Mcp": {
              "$ref": "#/definitions/McpTargetConfiguration"
            }
          },
          "required": [
            "Mcp"
          ],
          "additionalProperties": false
        }
      ]
    },
    "TargetStatus": {
      "type": "string",
      "enum": [
        "CREATING",
        "UPDATING",
        "UPDATE_UNSUCCESSFUL",
        "DELETING",
        "READY",
        "FAILED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATING | UPDATING | UPDATE_UNSUCCESSFUL | DELETING | READY | FAILED  \nUpdate requires: No interruption\n"
    },
    "ToolDefinition": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "InputSchema": {
          "$ref": "#/definitions/SchemaDefinition"
        },
        "OutputSchema": {
          "$ref": "#/definitions/SchemaDefinition"
        }
      },
      "required": [
        "Description",
        "InputSchema",
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ToolSchema": {
      "oneOf": [
        {
          "type": "object",
          "title": "S3",
          "properties": {
            "S3": {
              "$ref": "#/definitions/S3Configuration"
            }
          },
          "required": [
            "S3"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "title": "InlinePayload",
          "properties": {
            "InlinePayload": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ToolDefinition"
              }
            }
          },
          "required": [
            "InlinePayload"
          ],
          "additionalProperties": false
        }
      ]
    }
  },
  "properties": {
    "CreatedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "CredentialProviderConfigurations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CredentialProviderConfiguration"
      },
      "maxItems": 1,
      "minItems": 1,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Description": {
      "type": "string",
      "maxLength": 200,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 200  \nUpdate requires: No interruption\n"
    },
    "GatewayArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:aws(|-cn|-us-gov):bedrock-agentcore:[a-z0-9-]{1,20}:[0-9]{12}:gateway/([0-9a-z][-]?){1,100}-[a-z0-9]{10}$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GatewayIdentifier": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^([0-9a-z][-]?){1,100}-[0-9a-z]{10}$  \nUpdate requires: Replacement\n"
    },
    "Name": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^([0-9a-zA-Z][-]?){1,100}$  \nUpdate requires: No interruption\n"
    },
    "Status": {
      "$ref": "#/definitions/TargetStatus"
    },
    "StatusReasons": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 2048,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
      },
      "maxItems": 100,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "TargetConfiguration": {
      "$ref": "#/definitions/TargetConfiguration"
    },
    "TargetId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[0-9a-zA-Z]{10}$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "UpdatedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  },
  "required": [
    "CredentialProviderConfigurations",
    "Name",
    "TargetConfiguration"
  ],
  "createOnlyProperties": [
    "/properties/GatewayIdentifier"
  ],
  "readOnlyProperties": [
    "/properties/CreatedAt",
    "/properties/GatewayArn",
    "/properties/Status",
    "/properties/StatusReasons",
    "/properties/TargetId",
    "/properties/UpdatedAt"
  ],
  "primaryIdentifier": [
    "/properties/GatewayIdentifier",
    "/properties/TargetId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "bedrock-agentcore:CreateGatewayTarget",
        "bedrock-agentcore:GetGatewayTarget",
        "bedrock-agentcore:GetResourceOauth2Token",
        "bedrock-agentcore:GetWorkloadAccessToken",
        "bedrock-agentcore:SynchronizeGatewayTargets",
        "kms:Decrypt",
        "kms:GenerateDataKey",
        "s3:GetObject",
        "secretsmanager:GetSecretValue"
      ]
    },
    "read": {
      "permissions": [
        "bedrock-agentcore:GetGatewayTarget"
      ]
    },
    "update": {
      "permissions": [
        "bedrock-agentcore:GetGatewayTarget",
        "bedrock-agentcore:GetResourceOauth2Token",
        "bedrock-agentcore:GetWorkloadAccessToken",
        "bedrock-agentcore:SynchronizeGatewayTargets",
        "bedrock-agentcore:UpdateGatewayTarget",
        "kms:Decrypt",
        "kms:GenerateDataKey",
        "s3:GetObject",
        "secretsmanager:GetSecretValue"
      ]
    },
    "delete": {
      "permissions": [
        "bedrock-agentcore:DeleteGatewayTarget",
        "bedrock-agentcore:GetGatewayTarget",
        "kms:Decrypt",
        "kms:GenerateDataKey"
      ]
    },
    "list": {
      "permissions": [
        "bedrock-agentcore:ListGatewayTargets"
      ]
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": false,
    "cloudFormationSystemTags": false
  },
  "attributes": {
    "CreatedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "GatewayArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:aws(|-cn|-us-gov):bedrock-agentcore:[a-z0-9-]{1,20}:[0-9]{12}:gateway/([0-9a-z][-]?){1,100}-[a-z0-9]{10}$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Status": {
      "$ref": "#/definitions/TargetStatus"
    },
    "StatusReasons": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 2048,
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
      },
      "maxItems": 100,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "TargetId": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^[0-9a-zA-Z]{10}$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "UpdatedAt": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}