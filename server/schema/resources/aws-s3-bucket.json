{
  "typeName": "AWS::S3::Bucket",
  "description": "Resource Type definition for AWS::S3::Bucket",
  "additionalProperties": false,
  "properties": {
    "AccelerateConfiguration": {
      "$ref": "#/definitions/AccelerateConfiguration",
      "description": "Configuration for the transfer acceleration state.",
      "markdownDescription": "Configuration for the transfer acceleration state.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "AccessControl": {
      "description": "A canned access control list (ACL) that grants predefined permissions to the bucket.",
      "enum": [
        "AuthenticatedRead",
        "AwsExecRead",
        "BucketOwnerFullControl",
        "BucketOwnerRead",
        "LogDeliveryWrite",
        "Private",
        "PublicRead",
        "PublicReadWrite"
      ],
      "type": "string",
      "markdownDescription": "A canned access control list (ACL) that grants predefined permissions to the bucket.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: AuthenticatedRead | AwsExecRead | BucketOwnerFullControl | BucketOwnerRead | LogDeliveryWrite | Private | PublicRead | PublicReadWrite  \nUpdate requires: No interruption"
    },
    "AnalyticsConfigurations": {
      "description": "The configuration and any analyses for the analytics filter of an Amazon S3 bucket.",
      "items": {
        "$ref": "#/definitions/AnalyticsConfiguration"
      },
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": true,
      "markdownDescription": "The configuration and any analyses for the analytics filter of an Amazon S3 bucket.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "BucketEncryption": {
      "$ref": "#/definitions/BucketEncryption"
    },
    "BucketName": {
      "description": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.",
      "maxLength": 63,
      "minLength": 3,
      "type": "string",
      "markdownDescription": "A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the bucket name.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: ^[a-z0-9][a-z0-9//.//-]*[a-z0-9]$  \nUpdate requires: Replacement"
    },
    "CorsConfiguration": {
      "$ref": "#/definitions/CorsConfiguration",
      "description": "Rules that define cross-origin resource sharing of objects in this bucket.",
      "markdownDescription": "Rules that define cross-origin resource sharing of objects in this bucket.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "IntelligentTieringConfigurations": {
      "description": "Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.",
      "items": {
        "$ref": "#/definitions/IntelligentTieringConfiguration"
      },
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": true,
      "markdownDescription": "Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "InventoryConfigurations": {
      "description": "The inventory configuration for an Amazon S3 bucket.",
      "items": {
        "$ref": "#/definitions/InventoryConfiguration"
      },
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": true,
      "markdownDescription": "The inventory configuration for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "LifecycleConfiguration": {
      "$ref": "#/definitions/LifecycleConfiguration",
      "description": "Rules that define how Amazon S3 manages objects during their lifetime.",
      "markdownDescription": "Rules that define how Amazon S3 manages objects during their lifetime.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "LoggingConfiguration": {
      "$ref": "#/definitions/LoggingConfiguration",
      "description": "Settings that define where logs are stored.",
      "markdownDescription": "Settings that define where logs are stored.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "MetricsConfigurations": {
      "description": "Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.",
      "items": {
        "$ref": "#/definitions/MetricsConfiguration"
      },
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": true,
      "markdownDescription": "Settings that define a metrics configuration for the CloudWatch request metrics from the bucket.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "NotificationConfiguration": {
      "$ref": "#/definitions/NotificationConfiguration",
      "description": "Configuration that defines how Amazon S3 handles bucket notifications.",
      "markdownDescription": "Configuration that defines how Amazon S3 handles bucket notifications.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "ObjectLockConfiguration": {
      "$ref": "#/definitions/ObjectLockConfiguration",
      "description": "Places an Object Lock configuration on the specified bucket.",
      "markdownDescription": "Places an Object Lock configuration on the specified bucket.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "ObjectLockEnabled": {
      "description": "Indicates whether this bucket has an Object Lock configuration enabled.",
      "type": "boolean",
      "markdownDescription": "Indicates whether this bucket has an Object Lock configuration enabled.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: Replacement"
    },
    "OwnershipControls": {
      "description": "Specifies the container element for object ownership rules.",
      "$ref": "#/definitions/OwnershipControls",
      "markdownDescription": "Specifies the container element for object ownership rules.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "PublicAccessBlockConfiguration": {
      "$ref": "#/definitions/PublicAccessBlockConfiguration"
    },
    "ReplicationConfiguration": {
      "$ref": "#/definitions/ReplicationConfiguration",
      "description": "Configuration for replicating objects in an S3 bucket.",
      "markdownDescription": "Configuration for replicating objects in an S3 bucket.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "An arbitrary set of tags (key-value pairs) for this S3 bucket.",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "type": "array",
      "markdownDescription": "An arbitrary set of tags (key-value pairs) for this S3 bucket.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "VersioningConfiguration": {
      "$ref": "#/definitions/VersioningConfiguration"
    },
    "WebsiteConfiguration": {
      "$ref": "#/definitions/WebsiteConfiguration"
    }
  },
  "definitions": {
    "TagFilter": {
      "description": "Tags to use to identify a subset of objects for an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Key": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "Tags to use to identify a subset of objects for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Destination": {
      "description": "Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketArn": {
          "description": "The Amazon Resource Name (ARN) of the bucket to which data is exported.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the bucket to which data is exported.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "BucketAccountId": {
          "description": "The account ID that owns the destination S3 bucket. ",
          "type": "string",
          "markdownDescription": "The account ID that owns the destination S3 bucket. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Format": {
          "description": "Specifies the file format used when exporting data to Amazon S3.",
          "type": "string",
          "enum": [
            "CSV",
            "ORC",
            "Parquet"
          ],
          "markdownDescription": "Specifies the file format used when exporting data to Amazon S3.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: CSV | ORC | Parquet  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "description": "The prefix to use when exporting data. The prefix is prepended to all results.",
          "type": "string",
          "markdownDescription": "The prefix to use when exporting data. The prefix is prepended to all results.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "BucketArn",
        "Format"
      ],
      "markdownDescription": "Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket and S3 Replication Time Control (S3 RTC).\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AccelerateConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AccelerationStatus": {
          "description": "Configures the transfer acceleration state for an Amazon S3 bucket.",
          "type": "string",
          "enum": [
            "Enabled",
            "Suspended"
          ],
          "markdownDescription": "Configures the transfer acceleration state for an Amazon S3 bucket.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Enabled | Suspended  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AccelerationStatus"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AnalyticsConfiguration": {
      "description": "Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TagFilters": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TagFilter"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "StorageClassAnalysis": {
          "$ref": "#/definitions/StorageClassAnalysis"
        },
        "Id": {
          "description": "The ID that identifies the analytics configuration.",
          "type": "string",
          "markdownDescription": "The ID that identifies the analytics configuration.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "description": "The prefix that an object must have to be included in the analytics results.",
          "type": "string",
          "markdownDescription": "The prefix that an object must have to be included in the analytics results.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "StorageClassAnalysis",
        "Id"
      ],
      "markdownDescription": "Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StorageClassAnalysis": {
      "description": "Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DataExport": {
          "$ref": "#/definitions/DataExport"
        }
      },
      "markdownDescription": "Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataExport": {
      "description": "Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Destination": {
          "$ref": "#/definitions/Destination"
        },
        "OutputSchemaVersion": {
          "description": "The version of the output schema to use when exporting data.",
          "type": "string",
          "const": "V_1",
          "markdownDescription": "The version of the output schema to use when exporting data.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Destination",
        "OutputSchemaVersion"
      ],
      "markdownDescription": "Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "BucketEncryption": {
      "description": "Specifies default encryption for a bucket using server-side encryption with either Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS).",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ServerSideEncryptionConfiguration": {
          "description": "Specifies the default server-side-encryption configuration.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/ServerSideEncryptionRule"
          },
          "markdownDescription": "Specifies the default server-side-encryption configuration.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ServerSideEncryptionConfiguration"
      ],
      "markdownDescription": "Specifies default encryption for a bucket using server-side encryption with either Amazon S3-managed keys (SSE-S3) or AWS KMS-managed keys (SSE-KMS).\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServerSideEncryptionRule": {
      "description": "Specifies the default server-side encryption configuration.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BucketKeyEnabled": {
          "description": "Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.",
          "type": "boolean",
          "markdownDescription": "Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the BucketKeyEnabled element to true causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ServerSideEncryptionByDefault": {
          "$ref": "#/definitions/ServerSideEncryptionByDefault"
        }
      },
      "markdownDescription": "Specifies the default server-side encryption configuration.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ServerSideEncryptionByDefault": {
      "description": "Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.",
      "type": "object",
      "properties": {
        "KMSMasterKeyID": {
          "description": "\"KMSMasterKeyID\" can only be used when you set the value of SSEAlgorithm as aws:kms.",
          "type": "string",
          "markdownDescription": "\"KMSMasterKeyID\" can only be used when you set the value of SSEAlgorithm as aws:kms.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "SSEAlgorithm": {
          "type": "string",
          "enum": [
            "aws:kms",
            "AES256"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: aws:kms | AES256  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "SSEAlgorithm"
      ],
      "markdownDescription": "Specifies the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CorsConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CorsRules": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/CorsRule",
            "maxLength": 100
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "CorsRules"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CorsRule": {
      "type": "object",
      "description": "A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.",
      "additionalProperties": false,
      "properties": {
        "AllowedHeaders": {
          "description": "Headers that are specified in the Access-Control-Request-Headers header.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "Headers that are specified in the Access-Control-Request-Headers header.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "AllowedMethods": {
          "description": "An HTTP method that you allow the origin to execute.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "type": "string",
            "enum": [
              "GET",
              "PUT",
              "HEAD",
              "POST",
              "DELETE"
            ],
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: GET | PUT | HEAD | POST | DELETE  \nUpdate requires: No interruption"
          },
          "markdownDescription": "An HTTP method that you allow the origin to execute.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "AllowedOrigins": {
          "description": "One or more origins you want customers to be able to access the bucket from.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "One or more origins you want customers to be able to access the bucket from.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "ExposedHeaders": {
          "description": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "One or more headers in the response that you want customers to be able to access from their applications (for example, from a JavaScript XMLHttpRequest object).\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Id": {
          "description": "A unique identifier for this rule.",
          "type": "string",
          "maxLength": 255,
          "markdownDescription": "A unique identifier for this rule.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "MaxAge": {
          "description": "The time in seconds that your browser is to cache the preflight response for the specified resource.",
          "type": "integer",
          "minimum": 0,
          "markdownDescription": "The time in seconds that your browser is to cache the preflight response for the specified resource.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AllowedMethods",
        "AllowedOrigins"
      ],
      "markdownDescription": "A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntelligentTieringConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "description": "The ID used to identify the S3 Intelligent-Tiering configuration.",
          "type": "string",
          "markdownDescription": "The ID used to identify the S3 Intelligent-Tiering configuration.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "description": "An object key name prefix that identifies the subset of objects to which the rule applies.",
          "type": "string",
          "markdownDescription": "An object key name prefix that identifies the subset of objects to which the rule applies.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Status": {
          "description": "Specifies the status of the configuration.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "Specifies the status of the configuration.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        },
        "TagFilters": {
          "description": "A container for a key-value pair.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TagFilter"
          },
          "markdownDescription": "A container for a key-value pair.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Tierings": {
          "description": "Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/Tiering"
          },
          "markdownDescription": "Specifies a list of S3 Intelligent-Tiering storage class tiers in the configuration. At least one tier must be defined in the list. At most, you can specify two tiers in the list, one for each available AccessTier: ARCHIVE_ACCESS and DEEP_ARCHIVE_ACCESS.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id",
        "Status",
        "Tierings"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tiering": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AccessTier": {
          "description": "S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.",
          "type": "string",
          "enum": [
            "ARCHIVE_ACCESS",
            "DEEP_ARCHIVE_ACCESS"
          ],
          "markdownDescription": "S3 Intelligent-Tiering access tier. See Storage class for automatically optimizing frequently and infrequently accessed objects for a list of access tiers in the S3 Intelligent-Tiering storage class.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: ARCHIVE_ACCESS | DEEP_ARCHIVE_ACCESS  \nUpdate requires: No interruption"
        },
        "Days": {
          "description": "The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).",
          "type": "integer",
          "markdownDescription": "The number of consecutive days of no access after which an object will be eligible to be transitioned to the corresponding tier. The minimum number of days specified for Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least 180 days. The maximum can be up to 2 years (730 days).\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AccessTier",
        "Days"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InventoryConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Destination": {
          "$ref": "#/definitions/Destination"
        },
        "Enabled": {
          "description": "Specifies whether the inventory is enabled or disabled.",
          "type": "boolean",
          "markdownDescription": "Specifies whether the inventory is enabled or disabled.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Id": {
          "description": "The ID used to identify the inventory configuration.",
          "type": "string",
          "markdownDescription": "The ID used to identify the inventory configuration.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "IncludedObjectVersions": {
          "description": "Object versions to include in the inventory list.",
          "type": "string",
          "enum": [
            "All",
            "Current"
          ],
          "markdownDescription": "Object versions to include in the inventory list.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: All | Current  \nUpdate requires: No interruption"
        },
        "OptionalFields": {
          "description": "Contains the optional fields that are included in the inventory results.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "type": "string",
            "enum": [
              "Size",
              "LastModifiedDate",
              "StorageClass",
              "ETag",
              "IsMultipartUploaded",
              "ReplicationStatus",
              "EncryptionStatus",
              "ObjectLockRetainUntilDate",
              "ObjectLockMode",
              "ObjectLockLegalHoldStatus",
              "IntelligentTieringAccessTier",
              "BucketKeyStatus"
            ],
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Size | LastModifiedDate | StorageClass | ETag | IsMultipartUploaded | ReplicationStatus | EncryptionStatus | ObjectLockRetainUntilDate | ObjectLockMode | ObjectLockLegalHoldStatus | IntelligentTieringAccessTier | BucketKeyStatus  \nUpdate requires: No interruption"
          },
          "markdownDescription": "Contains the optional fields that are included in the inventory results.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "description": "The prefix that is prepended to all inventory results.",
          "type": "string",
          "markdownDescription": "The prefix that is prepended to all inventory results.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "ScheduleFrequency": {
          "description": "Specifies the schedule for generating inventory results.",
          "type": "string",
          "enum": [
            "Daily",
            "Weekly"
          ],
          "markdownDescription": "Specifies the schedule for generating inventory results.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Daily | Weekly  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Destination",
        "Enabled",
        "Id",
        "IncludedObjectVersions",
        "ScheduleFrequency"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LifecycleConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Rules": {
          "description": "A lifecycle rule for individual objects in an Amazon S3 bucket.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/Rule"
          },
          "markdownDescription": "A lifecycle rule for individual objects in an Amazon S3 bucket.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Rules"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Rule": {
      "type": "object",
      "description": "You must specify at least one of the following properties: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays, NoncurrentVersionExpirationInDays, NoncurrentVersionTransition, NoncurrentVersionTransitions, Transition, or Transitions.",
      "additionalProperties": false,
      "properties": {
        "AbortIncompleteMultipartUpload": {
          "$ref": "#/definitions/AbortIncompleteMultipartUpload"
        },
        "ExpirationDate": {
          "$ref": "#/definitions/iso8601UTC"
        },
        "ExpirationInDays": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "ExpiredObjectDeleteMarker": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Id": {
          "type": "string",
          "maxLength": 255,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "NoncurrentVersionExpirationInDays": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "NoncurrentVersionExpiration": {
          "$ref": "#/definitions/NoncurrentVersionExpiration"
        },
        "NoncurrentVersionTransition": {
          "$ref": "#/definitions/NoncurrentVersionTransition"
        },
        "NoncurrentVersionTransitions": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/NoncurrentVersionTransition"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Status": {
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Enabled | Disabled  \nUpdate requires: No interruption"
        },
        "TagFilters": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TagFilter"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "ObjectSizeGreaterThan": {
          "type": "string",
          "maxLength": 20,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 20  \nPattern: [0-9]+  \nUpdate requires: No interruption"
        },
        "ObjectSizeLessThan": {
          "type": "string",
          "maxLength": 20,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 20  \nPattern: [0-9]+  \nUpdate requires: No interruption"
        },
        "Transition": {
          "$ref": "#/definitions/Transition"
        },
        "Transitions": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/Transition"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Status"
      ],
      "markdownDescription": "You must specify at least one of the following properties: AbortIncompleteMultipartUpload, ExpirationDate, ExpirationInDays, NoncurrentVersionExpirationInDays, NoncurrentVersionTransition, NoncurrentVersionTransitions, Transition, or Transitions.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AbortIncompleteMultipartUpload": {
      "description": "Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "DaysAfterInitiation": {
          "description": "Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.",
          "type": "integer",
          "minimum": 0,
          "markdownDescription": "Specifies the number of days after which Amazon S3 aborts an incomplete multipart upload.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DaysAfterInitiation"
      ],
      "markdownDescription": "Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "iso8601UTC": {
      "description": "The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)",
      "type": "string",
      "markdownDescription": "The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)\n\n---\n\nRequired: No  \nType: String  \nPattern: ^([0-2]\\d{3})-(0[0-9]|1[0-2])-([0-2]\\d|3[01])T([01]\\d|2[0-4]):([0-5]\\d):([0-6]\\d)((\\.\\d{3})?)Z$  \nUpdate requires: No interruption"
    },
    "NoncurrentVersionExpiration": {
      "type": "object",
      "description": "Container for the expiration rule that describes when noncurrent objects are expired. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 expire noncurrent object versions at a specific period in the object's lifetime",
      "additionalProperties": false,
      "properties": {
        "NoncurrentDays": {
          "description": "Specified the number of days an object is noncurrent before Amazon S3 can perform the associated action",
          "type": "integer",
          "markdownDescription": "Specified the number of days an object is noncurrent before Amazon S3 can perform the associated action\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "NewerNoncurrentVersions": {
          "description": "Specified the number of newer noncurrent and current versions that must exists before performing the associated action",
          "type": "integer",
          "markdownDescription": "Specified the number of newer noncurrent and current versions that must exists before performing the associated action\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "NoncurrentDays"
      ],
      "markdownDescription": "Container for the expiration rule that describes when noncurrent objects are expired. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 expire noncurrent object versions at a specific period in the object's lifetime\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NoncurrentVersionTransition": {
      "type": "object",
      "description": "Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class at a specific period in the object's lifetime.",
      "additionalProperties": false,
      "properties": {
        "StorageClass": {
          "description": "The class of storage used to store the object.",
          "type": "string",
          "enum": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "Glacier",
            "GLACIER_IR",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "STANDARD_IA"
          ],
          "markdownDescription": "The class of storage used to store the object.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DEEP_ARCHIVE | GLACIER | Glacier | GLACIER_IR | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA  \nUpdate requires: No interruption"
        },
        "TransitionInDays": {
          "description": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.",
          "type": "integer",
          "markdownDescription": "Specifies the number of days an object is noncurrent before Amazon S3 can perform the associated action.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "NewerNoncurrentVersions": {
          "description": "Specified the number of newer noncurrent and current versions that must exists before performing the associated action",
          "type": "integer",
          "markdownDescription": "Specified the number of newer noncurrent and current versions that must exists before performing the associated action\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "StorageClass",
        "TransitionInDays"
      ],
      "markdownDescription": "Container for the transition rule that describes when noncurrent objects transition to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the STANDARD_IA, ONEZONE_IA, INTELLIGENT_TIERING, GLACIER_IR, GLACIER, or DEEP_ARCHIVE storage class at a specific period in the object's lifetime.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Transition": {
      "type": "object",
      "properties": {
        "StorageClass": {
          "type": "string",
          "enum": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "Glacier",
            "GLACIER_IR",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "STANDARD_IA"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DEEP_ARCHIVE | GLACIER | Glacier | GLACIER_IR | INTELLIGENT_TIERING | ONEZONE_IA | STANDARD_IA  \nUpdate requires: No interruption"
        },
        "TransitionDate": {
          "$ref": "#/definitions/iso8601UTC"
        },
        "TransitionInDays": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "description": "You must specify at least one of \"TransitionDate\" and \"TransitionInDays\"",
      "required": [
        "StorageClass"
      ],
      "markdownDescription": "You must specify at least one of \"TransitionDate\" and \"TransitionInDays\"\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LoggingConfiguration": {
      "type": "object",
      "properties": {
        "DestinationBucketName": {
          "type": "string",
          "description": "The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.",
          "markdownDescription": "The name of an Amazon S3 bucket where Amazon S3 store server access log files. You can store log files in any bucket that you own. By default, logs are stored in the bucket where the LoggingConfiguration property is defined.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "LogFilePrefix": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricsConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AccessPointArn": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Id": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "TagFilters": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TagFilter"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NotificationConfiguration": {
      "description": "Describes the notification configuration for an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "EventBridgeConfiguration": {
          "$ref": "#/definitions/EventBridgeConfiguration"
        },
        "LambdaConfigurations": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/LambdaConfiguration"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "QueueConfigurations": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/QueueConfiguration"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "TopicConfigurations": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TopicConfiguration"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Describes the notification configuration for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "EventBridgeConfiguration": {
      "type": "object",
      "description": "Describes the Amazon EventBridge notification configuration for an Amazon S3 bucket.",
      "additionalProperties": false,
      "properties": {
        "EventBridgeEnabled": {
          "description": "Specifies whether to send notifications to Amazon EventBridge when events occur in an Amazon S3 bucket.",
          "type": "boolean",
          "default": "true",
          "markdownDescription": "Specifies whether to send notifications to Amazon EventBridge when events occur in an Amazon S3 bucket.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "EventBridgeEnabled"
      ],
      "markdownDescription": "Describes the Amazon EventBridge notification configuration for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LambdaConfiguration": {
      "type": "object",
      "description": "Describes the AWS Lambda functions to invoke and the events for which to invoke them.",
      "additionalProperties": false,
      "properties": {
        "Event": {
          "description": "The Amazon S3 bucket event for which to invoke the AWS Lambda function.",
          "type": "string",
          "markdownDescription": "The Amazon S3 bucket event for which to invoke the AWS Lambda function.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Filter": {
          "description": "The filtering rules that determine which objects invoke the AWS Lambda function.",
          "$ref": "#/definitions/NotificationFilter",
          "markdownDescription": "The filtering rules that determine which objects invoke the AWS Lambda function.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Function": {
          "description": "The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the specified event type occurs.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Function",
        "Event"
      ],
      "markdownDescription": "Describes the AWS Lambda functions to invoke and the events for which to invoke them.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "QueueConfiguration": {
      "type": "object",
      "description": "The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.",
      "additionalProperties": false,
      "properties": {
        "Event": {
          "description": "The Amazon S3 bucket event about which you want to publish messages to Amazon SQS.",
          "type": "string",
          "markdownDescription": "The Amazon S3 bucket event about which you want to publish messages to Amazon SQS.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Filter": {
          "description": "The filtering rules that determine which objects trigger notifications.",
          "$ref": "#/definitions/NotificationFilter",
          "markdownDescription": "The filtering rules that determine which objects trigger notifications.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Queue": {
          "description": "The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message when it detects events of the specified type.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Event",
        "Queue"
      ],
      "markdownDescription": "The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TopicConfiguration": {
      "type": "object",
      "description": "The topic to which notifications are sent and the events for which notifications are generated.",
      "additionalProperties": false,
      "properties": {
        "Event": {
          "description": "The Amazon S3 bucket event about which to send notifications.",
          "type": "string",
          "markdownDescription": "The Amazon S3 bucket event about which to send notifications.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Filter": {
          "description": "The filtering rules that determine for which objects to send notifications.",
          "$ref": "#/definitions/NotificationFilter",
          "markdownDescription": "The filtering rules that determine for which objects to send notifications.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Topic": {
          "description": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message when it detects events of the specified type.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Event",
        "Topic"
      ],
      "markdownDescription": "The topic to which notifications are sent and the events for which notifications are generated.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "NotificationFilter": {
      "type": "object",
      "description": "Specifies object key name filtering rules.",
      "additionalProperties": false,
      "properties": {
        "S3Key": {
          "$ref": "#/definitions/S3KeyFilter"
        }
      },
      "required": [
        "S3Key"
      ],
      "markdownDescription": "Specifies object key name filtering rules.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3KeyFilter": {
      "type": "object",
      "description": "A container for object key name prefix and suffix filtering rules.",
      "additionalProperties": false,
      "properties": {
        "Rules": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/FilterRule"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Rules"
      ],
      "markdownDescription": "A container for object key name prefix and suffix filtering rules.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FilterRule": {
      "type": "object",
      "description": "Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Name"
      ],
      "markdownDescription": "Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or prefix of the key name.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ObjectLockConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ObjectLockEnabled": {
          "type": "string",
          "const": "Enabled",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Rule": {
          "$ref": "#/definitions/ObjectLockRule"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ObjectLockRule": {
      "type": "object",
      "description": "The Object Lock rule in place for the specified object.",
      "additionalProperties": false,
      "properties": {
        "DefaultRetention": {
          "$ref": "#/definitions/DefaultRetention"
        }
      },
      "markdownDescription": "The Object Lock rule in place for the specified object.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DefaultRetention": {
      "type": "object",
      "description": "The default retention period that you want to apply to new objects placed in the specified bucket.",
      "additionalProperties": false,
      "properties": {
        "Years": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Days": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Mode": {
          "type": "string",
          "enum": [
            "COMPLIANCE",
            "GOVERNANCE"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: COMPLIANCE | GOVERNANCE  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The default retention period that you want to apply to new objects placed in the specified bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OwnershipControls": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Rules": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/OwnershipControlsRule"
          },
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Rules"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OwnershipControlsRule": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ObjectOwnership": {
          "description": "Specifies an object ownership rule.",
          "type": "string",
          "enum": [
            "ObjectWriter",
            "BucketOwnerPreferred",
            "BucketOwnerEnforced"
          ],
          "markdownDescription": "Specifies an object ownership rule.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ObjectWriter | BucketOwnerPreferred | BucketOwnerEnforced  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PublicAccessBlockConfiguration": {
      "description": "Configuration that defines how Amazon S3 handles public access.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "BlockPublicAcls": {
          "type": "boolean",
          "description": "Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to TRUE causes the following behavior:\n- PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n - PUT Object calls fail if the request includes a public ACL.\nEnabling this setting doesn't affect existing policies or ACLs.",
          "markdownDescription": "Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket and objects in this bucket. Setting this element to TRUE causes the following behavior:\n- PUT Bucket acl and PUT Object acl calls fail if the specified ACL is public.\n - PUT Object calls fail if the request includes a public ACL.\nEnabling this setting doesn't affect existing policies or ACLs.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "BlockPublicPolicy": {
          "type": "boolean",
          "description": "Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.\nEnabling this setting doesn't affect existing bucket policies.",
          "markdownDescription": "Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this element to TRUE causes Amazon S3 to reject calls to PUT Bucket policy if the specified bucket policy allows public access.\nEnabling this setting doesn't affect existing bucket policies.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IgnorePublicAcls": {
          "type": "boolean",
          "description": "Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.\nEnabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.",
          "markdownDescription": "Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this bucket. Setting this element to TRUE causes Amazon S3 to ignore all public ACLs on this bucket and objects in this bucket.\nEnabling this setting doesn't affect the persistence of any existing ACLs and doesn't prevent new public ACLs from being set.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "RestrictPublicBuckets": {
          "type": "boolean",
          "description": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.\nEnabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.",
          "markdownDescription": "Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting this element to TRUE restricts access to this bucket to only AWS services and authorized users within this account if the bucket has a public policy.\nEnabling this setting doesn't affect previously stored bucket policies, except that public and cross-account access within any public bucket policy, including non-public delegation to specific accounts, is blocked.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Configuration that defines how Amazon S3 handles public access.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationConfiguration": {
      "type": "object",
      "description": "A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.",
      "additionalProperties": false,
      "properties": {
        "Role": {
          "description": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that Amazon S3 assumes when replicating objects.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Rules": {
          "description": "A container for one or more replication rules.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/ReplicationRule",
            "maxLength": 1000,
            "minLength": 1
          },
          "markdownDescription": "A container for one or more replication rules.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Role",
        "Rules"
      ],
      "markdownDescription": "A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationRule": {
      "type": "object",
      "description": "Specifies which Amazon S3 objects to replicate and where to store the replicas.",
      "additionalProperties": false,
      "properties": {
        "DeleteMarkerReplication": {
          "$ref": "#/definitions/DeleteMarkerReplication"
        },
        "Destination": {
          "$ref": "#/definitions/ReplicationDestination"
        },
        "Filter": {
          "$ref": "#/definitions/ReplicationRuleFilter"
        },
        "Id": {
          "description": "A unique identifier for the rule.",
          "type": "string",
          "maxLength": 255,
          "markdownDescription": "A unique identifier for the rule.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 255  \nUpdate requires: No interruption"
        },
        "Prefix": {
          "description": "An object key name prefix that identifies the object or objects to which the rule applies.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "An object key name prefix that identifies the object or objects to which the rule applies.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "Priority": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "SourceSelectionCriteria": {
          "$ref": "#/definitions/SourceSelectionCriteria"
        },
        "Status": {
          "description": "Specifies whether the rule is enabled.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "Specifies whether the rule is enabled.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Destination",
        "Status"
      ],
      "markdownDescription": "Specifies which Amazon S3 objects to replicate and where to store the replicas.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DeleteMarkerReplication": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationDestination": {
      "type": "object",
      "description": "Specifies which Amazon S3 bucket to store replicated objects in and their storage class.",
      "additionalProperties": false,
      "properties": {
        "AccessControlTranslation": {
          "$ref": "#/definitions/AccessControlTranslation"
        },
        "Account": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Bucket": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "EncryptionConfiguration": {
          "$ref": "#/definitions/EncryptionConfiguration"
        },
        "Metrics": {
          "$ref": "#/definitions/Metrics"
        },
        "ReplicationTime": {
          "$ref": "#/definitions/ReplicationTime"
        },
        "StorageClass": {
          "description": "The storage class to use when replicating objects, such as S3 Standard or reduced redundancy.",
          "type": "string",
          "enum": [
            "DEEP_ARCHIVE",
            "GLACIER",
            "GLACIER_IR",
            "INTELLIGENT_TIERING",
            "ONEZONE_IA",
            "REDUCED_REDUNDANCY",
            "STANDARD",
            "STANDARD_IA"
          ],
          "markdownDescription": "The storage class to use when replicating objects, such as S3 Standard or reduced redundancy.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DEEP_ARCHIVE | GLACIER | GLACIER_IR | INTELLIGENT_TIERING | ONEZONE_IA | REDUCED_REDUNDANCY | STANDARD | STANDARD_IA  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Bucket"
      ],
      "markdownDescription": "Specifies which Amazon S3 bucket to store replicated objects in and their storage class.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AccessControlTranslation": {
      "type": "object",
      "description": "Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.",
      "additionalProperties": false,
      "properties": {
        "Owner": {
          "type": "string",
          "const": "Destination",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Owner"
      ],
      "markdownDescription": "Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS account that owns the source object.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "EncryptionConfiguration": {
      "type": "object",
      "description": "Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.",
      "additionalProperties": false,
      "properties": {
        "ReplicaKmsKeyID": {
          "description": "Specifies the ID (Key ARN or Alias ARN) of the customer managed customer master key (CMK) stored in AWS Key Management Service (KMS) for the destination bucket.",
          "type": "string",
          "markdownDescription": "Specifies the ID (Key ARN or Alias ARN) of the customer managed customer master key (CMK) stored in AWS Key Management Service (KMS) for the destination bucket.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ReplicaKmsKeyID"
      ],
      "markdownDescription": "Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Metrics": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "EventThreshold": {
          "$ref": "#/definitions/ReplicationTimeValue"
        },
        "Status": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Status"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationTimeValue": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Minutes": {
          "type": "integer",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Minutes"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationTime": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        },
        "Time": {
          "$ref": "#/definitions/ReplicationTimeValue"
        }
      },
      "required": [
        "Status",
        "Time"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationRuleFilter": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "And": {
          "$ref": "#/definitions/ReplicationRuleAndOperator"
        },
        "Prefix": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "TagFilter": {
          "$ref": "#/definitions/TagFilter"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicationRuleAndOperator": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Prefix": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "TagFilters": {
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/TagFilter"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SourceSelectionCriteria": {
      "description": "A container that describes additional filters for identifying the source objects that you want to replicate.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ReplicaModifications": {
          "description": "A filter that you can specify for selection for modifications on replicas.",
          "$ref": "#/definitions/ReplicaModifications",
          "markdownDescription": "A filter that you can specify for selection for modifications on replicas.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SseKmsEncryptedObjects": {
          "description": "A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.",
          "$ref": "#/definitions/SseKmsEncryptedObjects",
          "markdownDescription": "A container for filter information for the selection of Amazon S3 objects encrypted with AWS KMS.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "A container that describes additional filters for identifying the source objects that you want to replicate.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ReplicaModifications": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "description": "Specifies whether Amazon S3 replicates modifications on replicas.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "markdownDescription": "Specifies whether Amazon S3 replicates modifications on replicas.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Enabled | Disabled  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Status"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SseKmsEncryptedObjects": {
      "type": "object",
      "description": "A container for filter information for the selection of S3 objects encrypted with AWS KMS.",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "description": "Specifies whether Amazon S3 replicates objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "markdownDescription": "Specifies whether Amazon S3 replicates objects created with server-side encryption using a customer master key (CMK) stored in AWS Key Management Service.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Disabled | Enabled  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Status"
      ],
      "markdownDescription": "A container for filter information for the selection of S3 objects encrypted with AWS KMS.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VersioningConfiguration": {
      "description": "Describes the versioning state of an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "description": "The versioning state of the bucket.",
          "type": "string",
          "default": "Suspended",
          "enum": [
            "Enabled",
            "Suspended"
          ],
          "markdownDescription": "The versioning state of the bucket.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: Enabled | Suspended  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Status"
      ],
      "markdownDescription": "Describes the versioning state of an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "WebsiteConfiguration": {
      "type": "object",
      "description": "Specifies website configuration parameters for an Amazon S3 bucket.",
      "additionalProperties": false,
      "properties": {
        "ErrorDocument": {
          "description": "The name of the error document for the website.",
          "type": "string",
          "markdownDescription": "The name of the error document for the website.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "IndexDocument": {
          "description": "The name of the index document for the website.",
          "type": "string",
          "markdownDescription": "The name of the index document for the website.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "RoutingRules": {
          "type": "array",
          "insertionOrder": true,
          "items": {
            "$ref": "#/definitions/RoutingRule"
          },
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "RedirectAllRequestsTo": {
          "$ref": "#/definitions/RedirectAllRequestsTo"
        }
      },
      "markdownDescription": "Specifies website configuration parameters for an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RoutingRule": {
      "description": "Specifies the redirect behavior and when a redirect is applied.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "RedirectRule": {
          "description": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.",
          "$ref": "#/definitions/RedirectRule",
          "markdownDescription": "Container for redirect information. You can redirect requests to another host, to another page, or with another protocol. In the event of an error, you can specify a different error code to return.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "RoutingRuleCondition": {
          "$ref": "#/definitions/RoutingRuleCondition"
        }
      },
      "required": [
        "RedirectRule"
      ],
      "markdownDescription": "Specifies the redirect behavior and when a redirect is applied.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedirectRule": {
      "type": "object",
      "description": "Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.",
      "additionalProperties": false,
      "properties": {
        "HostName": {
          "description": "The host name to use in the redirect request.",
          "type": "string",
          "markdownDescription": "The host name to use in the redirect request.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "HttpRedirectCode": {
          "description": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.",
          "type": "string",
          "markdownDescription": "The HTTP redirect code to use on the response. Not required if one of the siblings is present.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "description": "Protocol to use when redirecting requests. The default is the protocol that is used in the original request.",
          "enum": [
            "http",
            "https"
          ],
          "type": "string",
          "markdownDescription": "Protocol to use when redirecting requests. The default is the protocol that is used in the original request.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: http | https  \nUpdate requires: No interruption"
        },
        "ReplaceKeyPrefixWith": {
          "description": "The object key prefix to use in the redirect request.",
          "type": "string",
          "markdownDescription": "The object key prefix to use in the redirect request.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "ReplaceKeyWith": {
          "description": "The specific object key to use in the redirect request.d",
          "type": "string",
          "markdownDescription": "The specific object key to use in the redirect request.d\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RoutingRuleCondition": {
      "description": "A container for describing a condition that must be met for the specified redirect to apply.You must specify at least one of HttpErrorCodeReturnedEquals and KeyPrefixEquals",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "KeyPrefixEquals": {
          "description": "The object key name prefix when the redirect is applied.",
          "type": "string",
          "markdownDescription": "The object key name prefix when the redirect is applied.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "HttpErrorCodeReturnedEquals": {
          "description": "The HTTP error code when the redirect is applied. ",
          "type": "string",
          "markdownDescription": "The HTTP error code when the redirect is applied. \n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "A container for describing a condition that must be met for the specified redirect to apply.You must specify at least one of HttpErrorCodeReturnedEquals and KeyPrefixEquals\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RedirectAllRequestsTo": {
      "description": "Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "HostName": {
          "description": "Name of the host where requests are redirected.",
          "type": "string",
          "markdownDescription": "Name of the host where requests are redirected.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "description": "Protocol to use when redirecting requests. The default is the protocol that is used in the original request.",
          "type": "string",
          "enum": [
            "http",
            "https"
          ],
          "markdownDescription": "Protocol to use when redirecting requests. The default is the protocol that is used in the original request.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: http | https  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "HostName"
      ],
      "markdownDescription": "Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Arn": {
      "description": "the Amazon Resource Name (ARN) of the specified bucket.",
      "type": "string",
      "markdownDescription": "the Amazon Resource Name (ARN) of the specified bucket.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  },
  "createOnlyProperties": [
    "/properties/BucketName",
    "/properties/ObjectLockEnabled"
  ],
  "primaryIdentifier": [
    "/properties/BucketName"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/DomainName",
    "/properties/DualStackDomainName",
    "/properties/RegionalDomainName",
    "/properties/WebsiteURL"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "s3:CreateBucket",
        "s3:PutBucketTagging",
        "s3:PutAnalyticsConfiguration",
        "s3:PutEncryptionConfiguration",
        "s3:PutBucketCORS",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutBucketNotification",
        "s3:PutBucketReplication",
        "s3:PutBucketWebsite",
        "s3:PutAccelerateConfiguration",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutReplicationConfiguration",
        "s3:PutObjectAcl",
        "s3:PutBucketObjectLockConfiguration",
        "s3:GetBucketAcl",
        "s3:ListBucket",
        "iam:PassRole",
        "s3:DeleteObject",
        "s3:PutBucketLogging",
        "s3:PutBucketVersioning",
        "s3:PutObjectLockConfiguration",
        "s3:PutBucketOwnershipControls",
        "s3:PutBucketIntelligentTieringConfiguration"
      ]
    },
    "read": {
      "permissions": [
        "s3:GetAccelerateConfiguration",
        "s3:GetLifecycleConfiguration",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetAnalyticsConfiguration",
        "s3:GetBucketCORS",
        "s3:GetEncryptionConfiguration",
        "s3:GetInventoryConfiguration",
        "s3:GetBucketLogging",
        "s3:GetMetricsConfiguration",
        "s3:GetBucketNotification",
        "s3:GetBucketVersioning",
        "s3:GetReplicationConfiguration",
        "S3:GetBucketWebsite",
        "s3:GetBucketPublicAccessBlock",
        "s3:GetBucketObjectLockConfiguration",
        "s3:GetBucketTagging",
        "s3:GetBucketOwnershipControls",
        "s3:GetIntelligentTieringConfiguration",
        "s3:ListBucket"
      ]
    },
    "update": {
      "permissions": [
        "s3:PutBucketAcl",
        "s3:PutBucketTagging",
        "s3:PutAnalyticsConfiguration",
        "s3:PutEncryptionConfiguration",
        "s3:PutBucketCORS",
        "s3:PutInventoryConfiguration",
        "s3:PutLifecycleConfiguration",
        "s3:PutMetricsConfiguration",
        "s3:PutBucketNotification",
        "s3:PutBucketReplication",
        "s3:PutBucketWebsite",
        "s3:PutAccelerateConfiguration",
        "s3:PutBucketPublicAccessBlock",
        "s3:PutReplicationConfiguration",
        "s3:PutBucketOwnershipControls",
        "s3:PutBucketIntelligentTieringConfiguration",
        "s3:DeleteBucketWebsite",
        "s3:PutBucketLogging",
        "s3:PutBucketVersioning",
        "s3:PutObjectLockConfiguration",
        "s3:DeleteBucketAnalyticsConfiguration",
        "s3:DeleteBucketCors",
        "s3:DeleteBucketMetricsConfiguration",
        "s3:DeleteBucketEncryption",
        "s3:DeleteBucketLifecycle",
        "s3:DeleteBucketReplication",
        "iam:PassRole"
      ]
    },
    "delete": {
      "permissions": [
        "s3:DeleteBucket"
      ]
    },
    "list": {
      "permissions": [
        "s3:ListBuckets"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "$ref": "#/definitions/Arn",
      "description": "The Amazon Resource Name (ARN) of the specified bucket.",
      "examples": [
        "arn:aws:s3:::mybucket"
      ],
      "markdownDescription": "The Amazon Resource Name (ARN) of the specified bucket.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "DomainName": {
      "description": "The IPv4 DNS name of the specified bucket.",
      "examples": [
        "mystack-mybucket-kdwwxmddtr2g.s3.amazonaws.com"
      ],
      "type": "string",
      "markdownDescription": "The IPv4 DNS name of the specified bucket.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DualStackDomainName": {
      "description": "The IPv6 DNS name of the specified bucket. For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html).",
      "examples": [
        "mystack-mybucket-kdwwxmddtr2g.s3.dualstack.us-east-2.amazonaws.com"
      ],
      "type": "string",
      "markdownDescription": "The IPv6 DNS name of the specified bucket. For more information about dual-stack endpoints, see [Using Amazon S3 Dual-Stack Endpoints](https://docs.aws.amazon.com/AmazonS3/latest/dev/dual-stack-endpoints.html).\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "RegionalDomainName": {
      "description": "Returns the regional domain name of the specified bucket.",
      "examples": [
        "mystack-mybucket-kdwwxmddtr2g.s3.us-east-2.amazonaws.com"
      ],
      "type": "string",
      "markdownDescription": "Returns the regional domain name of the specified bucket.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "WebsiteURL": {
      "description": "The Amazon S3 website endpoint for the specified bucket.",
      "examples": [
        "Example (IPv4): http://mystack-mybucket-kdwwxmddtr2g.s3-website-us-east-2.amazonaws.com/",
        "Example (IPv6): http://mystack-mybucket-kdwwxmddtr2g.s3.dualstack.us-east-2.amazonaws.com/"
      ],
      "format": "uri",
      "type": "string",
      "markdownDescription": "The Amazon S3 website endpoint for the specified bucket.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}