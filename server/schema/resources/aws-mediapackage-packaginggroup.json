{
  "typeName": "AWS::MediaPackage::PackagingGroup",
  "description": "Resource schema for AWS::MediaPackage::PackagingGroup",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-mediapackage.git",
  "properties": {
    "Id": {
      "description": "The ID of the PackagingGroup.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The ID of the PackagingGroup.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: \\A[0-9a-zA-Z-_]+\\Z  \nUpdate requires: Replacement"
    },
    "Authorization": {
      "description": "CDN Authorization",
      "$ref": "#/definitions/Authorization",
      "markdownDescription": "CDN Authorization\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Tags": {
      "description": "A collection of tags associated with a resource",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "A collection of tags associated with a resource\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: Replacement"
    },
    "EgressAccessLogs": {
      "description": "The configuration parameters for egress access logging.",
      "$ref": "#/definitions/LogConfiguration",
      "markdownDescription": "The configuration parameters for egress access logging.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    }
  },
  "definitions": {
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Authorization": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CdnIdentifierSecret": {
          "description": "The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) for the secret in AWS Secrets Manager that is used for CDN authorization.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "SecretsRoleArn": {
          "description": "The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) for the IAM role that allows MediaPackage to communicate with AWS Secrets Manager.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "CdnIdentifierSecret",
        "SecretsRoleArn"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LogConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "LogGroupName": {
          "description": "Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.",
          "type": "string",
          "minLength": 1,
          "maxLength": 512,
          "markdownDescription": "Sets a custom AWS CloudWatch log group name for egress logs. If a log group name isn't specified, the default name is used: /aws/MediaPackage/VodEgressAccessLogs.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nPattern: \\A\\/aws\\/MediaPackage\\/[0-9a-zA-Z-_\\/\\.#]+\\Z  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "Id"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/DomainName"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "createOnlyProperties": [
    "/properties/Id",
    "/properties/Tags"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "mediapackage-vod:CreatePackagingGroup",
        "mediapackage-vod:DescribePackagingGroup",
        "mediapackage-vod:TagResource",
        "mediapackage-vod:ConfigureLogs",
        "iam:PassRole",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "read": {
      "permissions": [
        "mediapackage-vod:DescribePackagingGroup"
      ]
    },
    "update": {
      "permissions": [
        "mediapackage-vod:UpdatePackagingGroup",
        "mediapackage-vod:ConfigureLogs",
        "mediapackage-vod:TagResource",
        "iam:PassRole",
        "iam:CreateServiceLinkedRole"
      ]
    },
    "list": {
      "permissions": [
        "mediapackage-vod:ListPackagingGroups"
      ]
    },
    "delete": {
      "permissions": [
        "mediapackage-vod:DeletePackagingGroup"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "description": "The ARN of the PackagingGroup.",
      "type": "string",
      "markdownDescription": "The ARN of the PackagingGroup.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DomainName": {
      "description": "The fully qualified domain name for Assets in the PackagingGroup.",
      "type": "string",
      "markdownDescription": "The fully qualified domain name for Assets in the PackagingGroup.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}