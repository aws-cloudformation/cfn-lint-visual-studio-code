{
  "typeName": "AWS::Lex::Bot",
  "description": "Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.",
  "sourceUrl": "https://docs.aws.amazon.com/lexv2/latest/dg/build-create.html",
  "definitions": {
    "BotAliasLocaleSettingsList": {
      "description": "A list of bot alias locale settings to add to the bot alias.",
      "type": "array",
      "uniqueItems": true,
      "maxItems": 50,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/BotAliasLocaleSettingsItem"
      },
      "markdownDescription": "A list of bot alias locale settings to add to the bot alias.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "BotAliasLocaleSettingsItem": {
      "description": "A locale setting in alias",
      "type": "object",
      "properties": {
        "LocaleId": {
          "description": "A string used to identify the locale",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "A string used to identify the locale\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "BotAliasLocaleSetting": {
          "$ref": "#/definitions/BotAliasLocaleSettings"
        }
      },
      "required": [
        "LocaleId",
        "BotAliasLocaleSetting"
      ],
      "additionalProperties": false,
      "markdownDescription": "A locale setting in alias\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "BotAliasLocaleSettings": {
      "description": "You can use this parameter to specify a specific Lambda function to run different functions in different locales.",
      "type": "object",
      "properties": {
        "CodeHookSpecification": {
          "$ref": "#/definitions/CodeHookSpecification"
        },
        "Enabled": {
          "type": "boolean",
          "description": "Whether the Lambda code hook is enabled",
          "markdownDescription": "Whether the Lambda code hook is enabled\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Enabled"
      ],
      "additionalProperties": false,
      "markdownDescription": "You can use this parameter to specify a specific Lambda function to run different functions in different locales.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CodeHookSpecification": {
      "description": "Contains information about code hooks that Amazon Lex calls during a conversation.",
      "type": "object",
      "properties": {
        "LambdaCodeHook": {
          "$ref": "#/definitions/LambdaCodeHook"
        }
      },
      "required": [
        "LambdaCodeHook"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains information about code hooks that Amazon Lex calls during a conversation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LambdaCodeHook": {
      "description": "Contains information about code hooks that Amazon Lex calls during a conversation.",
      "type": "object",
      "properties": {
        "CodeHookInterfaceVersion": {
          "description": "The version of the request-response that you want Amazon Lex to use to invoke your Lambda function.",
          "type": "string",
          "minLength": 1,
          "maxLength": 5,
          "markdownDescription": "The version of the request-response that you want Amazon Lex to use to invoke your Lambda function.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 5  \nUpdate requires: No interruption"
        },
        "LambdaArn": {
          "description": "The Amazon Resource Name (ARN) of the Lambda function.",
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "The Amazon Resource Name (ARN) of the Lambda function.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "CodeHookInterfaceVersion",
        "LambdaArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains information about code hooks that Amazon Lex calls during a conversation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConversationLogSettings": {
      "description": "Contains information about code hooks that Amazon Lex calls during a conversation.",
      "type": "object",
      "properties": {
        "AudioLogSettings": {
          "$ref": "#/definitions/AudioLogSettings"
        },
        "TextLogSettings": {
          "$ref": "#/definitions/TextLogSettings"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Contains information about code hooks that Amazon Lex calls during a conversation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AudioLogSettings": {
      "description": "List of audio log settings that pertain to the conversation log settings for the bot's TestBotAlias.",
      "type": "array",
      "maxItems": 1,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/AudioLogSetting"
      },
      "markdownDescription": "List of audio log settings that pertain to the conversation log settings for the bot's TestBotAlias.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "TextLogSettings": {
      "description": "List of text log settings that pertain to the conversation log settings for the bot's TestBotAlias",
      "type": "array",
      "maxItems": 1,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/TextLogSetting"
      },
      "markdownDescription": "List of text log settings that pertain to the conversation log settings for the bot's TestBotAlias\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AudioLogSetting": {
      "description": "Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.",
      "type": "object",
      "properties": {
        "Destination": {
          "$ref": "#/definitions/AudioLogDestination"
        },
        "Enabled": {
          "type": "boolean",
          "description": "",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Destination",
        "Enabled"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TextLogSetting": {
      "description": "Contains information about code hooks that Amazon Lex calls during a conversation.",
      "type": "object",
      "properties": {
        "Destination": {
          "$ref": "#/definitions/TextLogDestination"
        },
        "Enabled": {
          "type": "boolean",
          "description": "",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Destination",
        "Enabled"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains information about code hooks that Amazon Lex calls during a conversation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AudioLogDestination": {
      "description": "The location of audio log files collected when conversation logging is enabled for a bot.",
      "type": "object",
      "properties": {
        "S3Bucket": {
          "$ref": "#/definitions/S3BucketLogDestination"
        }
      },
      "required": [
        "S3Bucket"
      ],
      "additionalProperties": false,
      "markdownDescription": "The location of audio log files collected when conversation logging is enabled for a bot.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TextLogDestination": {
      "description": "Defines the Amazon CloudWatch Logs destination log group for conversation text logs.",
      "type": "object",
      "properties": {
        "CloudWatch": {
          "$ref": "#/definitions/CloudWatchLogGroupLogDestination"
        }
      },
      "required": [
        "CloudWatch"
      ],
      "additionalProperties": false,
      "markdownDescription": "Defines the Amazon CloudWatch Logs destination log group for conversation text logs.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CloudWatchLogGroupLogDestination": {
      "type": "object",
      "properties": {
        "CloudWatchLogGroupArn": {
          "description": "A string used to identify the groupArn for the Cloudwatch Log Group",
          "type": "string",
          "minLength": 1,
          "maxLength": 2048,
          "markdownDescription": "A string used to identify the groupArn for the Cloudwatch Log Group\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption"
        },
        "LogPrefix": {
          "description": "A string containing the value for the Log Prefix",
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "A string containing the value for the Log Prefix\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "CloudWatchLogGroupArn",
        "LogPrefix"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3BucketLogDestination": {
      "description": "Specifies an Amazon S3 bucket for logging audio conversations",
      "type": "object",
      "properties": {
        "S3BucketArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.",
          "minLength": 1,
          "maxLength": 2048,
          "markdownDescription": "The Amazon Resource Name (ARN) of an Amazon S3 bucket where audio log files are stored.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:[\\w\\-]+:s3:::[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$  \nUpdate requires: No interruption"
        },
        "LogPrefix": {
          "type": "string",
          "description": "The Amazon S3 key of the deployment package.",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 key of the deployment package.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "KmsKeyArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "The Amazon Resource Name (ARN) of an AWS Key Management Service (KMS) key for encrypting audio log files stored in an S3 bucket.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w\\-]+:kms:[\\w\\-]+:[\\d]{12}:(?:key\\/[\\w\\-]+|alias\\/[a-zA-Z0-9:\\/_\\-]{1,256})$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "LogPrefix",
        "S3BucketArn"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies an Amazon S3 bucket for logging audio conversations\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TestBotAliasSettings": {
      "description": "Configuring the test bot alias settings for a given bot",
      "type": "object",
      "properties": {
        "BotAliasLocaleSettings": {
          "$ref": "#/definitions/BotAliasLocaleSettingsList"
        },
        "ConversationLogSettings": {
          "$ref": "#/definitions/ConversationLogSettings"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "SentimentAnalysisSettings": {
          "description": "Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.",
          "type": "object",
          "properties": {
            "DetectSentiment": {
              "type": "boolean",
              "description": "Enable to call Amazon Comprehend for Sentiment natively within Lex",
              "markdownDescription": "Enable to call Amazon Comprehend for Sentiment natively within Lex\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
            }
          },
          "required": [
            "DetectSentiment"
          ],
          "additionalProperties": false,
          "markdownDescription": "Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Configuring the test bot alias settings for a given bot\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "RoleArn": {
      "description": "The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.",
      "type": "string",
      "minLength": 32,
      "maxLength": 2048,
      "markdownDescription": "The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 32  \nMaximum Length: 2048  \nPattern: ^arn:aws[a-zA-Z-]*:iam::[0-9]{12}:role/.*$  \nUpdate requires: No interruption"
    },
    "Id": {
      "description": "Unique ID of resource",
      "type": "string",
      "minLength": 10,
      "maxLength": 10,
      "markdownDescription": "Unique ID of resource\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 10  \nMaximum Length: 10  \nPattern: ^[0-9a-zA-Z]+$  \nUpdate requires: No interruption"
    },
    "BotArn": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1011,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1011  \nPattern: ^arn:aws[a-zA-Z-]*:lex:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:bot/[0-9a-zA-Z]+$  \nUpdate requires: No interruption"
    },
    "Name": {
      "description": "Unique name for a resource.",
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "Unique name for a resource.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nPattern: ^([0-9a-zA-Z][_-]?)+$  \nUpdate requires: No interruption"
    },
    "Description": {
      "description": "A description of the resource",
      "type": "string",
      "maxLength": 200,
      "markdownDescription": "A description of the resource\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 200  \nUpdate requires: No interruption"
    },
    "DataPrivacy": {
      "description": "Provides information on additional privacy protections Amazon Lex should use with the bot's data.",
      "type": "object",
      "properties": {
        "ChildDirected": {
          "type": "boolean",
          "description": "Specify whether your use of Amazon Lex is related to application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA).",
          "markdownDescription": "Specify whether your use of Amazon Lex is related to application that is directed or targeted, in whole or in part, to children under age 13 and subject to the Children's Online Privacy Protection Act (COPPA).\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ChildDirected"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides information on additional privacy protections Amazon Lex should use with the bot's data.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IdleSessionTTLInSeconds": {
      "description": "The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.",
      "type": "integer",
      "minimum": 60,
      "maximum": 86400,
      "markdownDescription": "The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Utterance": {
      "description": "The sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents/slots.",
      "type": "string",
      "markdownDescription": "The sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents/slots.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SampleUtterance": {
      "description": "A sample utterance that invokes an intent or respond to a slot elicitation prompt.",
      "type": "object",
      "properties": {
        "Utterance": {
          "$ref": "#/definitions/Utterance"
        }
      },
      "required": [
        "Utterance"
      ],
      "additionalProperties": false,
      "markdownDescription": "A sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SampleUtterancesList": {
      "description": "An array of sample utterances",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SampleUtterance"
      },
      "markdownDescription": "An array of sample utterances\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair for tagging Lex resources",
      "type": "object",
      "properties": {
        "Key": {
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair for tagging Lex resources\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LocaleId": {
      "description": "The identifier of the language and locale that the bot will be used in.",
      "type": "string",
      "markdownDescription": "The identifier of the language and locale that the bot will be used in.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "VoiceSettings": {
      "description": "Settings for using an Amazon Polly voice to communicate with a user.",
      "type": "object",
      "properties": {
        "VoiceId": {
          "type": "string",
          "description": "The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.",
          "markdownDescription": "The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Engine": {
          "type": "string",
          "description": "Indicates the type of Amazon Polly voice that Amazon Lex should use for voice interaction with the user. For more information, see the engine parameter of the SynthesizeSpeech operation in the Amazon Polly developer guide.",
          "enum": [
            "standard",
            "neural"
          ],
          "markdownDescription": "Indicates the type of Amazon Polly voice that Amazon Lex should use for voice interaction with the user. For more information, see the engine parameter of the SynthesizeSpeech operation in the Amazon Polly developer guide.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: standard | neural  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "VoiceId"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings for using an Amazon Polly voice to communicate with a user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConfidenceThreshold": {
      "description": "The specified confidence threshold for inserting the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents.",
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "markdownDescription": "The specified confidence threshold for inserting the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
    },
    "ParentIntentSignature": {
      "description": "A unique identifier for the built-in intent to base this intent on.",
      "type": "string",
      "markdownDescription": "A unique identifier for the built-in intent to base this intent on.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DialogCodeHookSetting": {
      "description": "Settings that determine the Lambda function that Amazon Lex uses for processing user responses.",
      "type": "object",
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Enabled"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings that determine the Lambda function that Amazon Lex uses for processing user responses.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FulfillmentStartResponseSpecification": {
      "description": "Provides settings for a message that is sent to the user when a fulfillment Lambda function starts running.",
      "type": "object",
      "properties": {
        "MessageGroups": {
          "$ref": "#/definitions/MessageGroupsList"
        },
        "DelayInSeconds": {
          "description": "The delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn't played.",
          "type": "integer",
          "minimum": 1,
          "maximum": 900,
          "markdownDescription": "The delay between when the Lambda fulfillment function starts running and the start message is played. If the Lambda function returns before the delay is over, the start message isn't played.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "AllowInterrupt": {
          "description": "Determines whether the user can interrupt the start message while it is playing.",
          "type": "boolean",
          "markdownDescription": "Determines whether the user can interrupt the start message while it is playing.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DelayInSeconds",
        "MessageGroups"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides settings for a message that is sent to the user when a fulfillment Lambda function starts running.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FulfillmentUpdateResponseSpecification": {
      "description": "Provides settings for a message that is sent periodically to the user while a fulfillment Lambda function is running.",
      "type": "object",
      "properties": {
        "MessageGroups": {
          "$ref": "#/definitions/MessageGroupsList"
        },
        "FrequencyInSeconds": {
          "description": "The frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.",
          "type": "integer",
          "minimum": 1,
          "maximum": 900,
          "markdownDescription": "The frequency that a message is sent to the user. When the period ends, Amazon Lex chooses a message from the message groups and plays it to the user. If the fulfillment Lambda returns before the first period ends, an update message is not played to the user.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "AllowInterrupt": {
          "description": "Determines whether the user can interrupt an update message while it is playing.",
          "type": "boolean",
          "markdownDescription": "Determines whether the user can interrupt an update message while it is playing.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "FrequencyInSeconds",
        "MessageGroups"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides settings for a message that is sent periodically to the user while a fulfillment Lambda function is running.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FulfillmentUpdatesSpecification": {
      "description": "Provides information for updating the user on the progress of fulfilling an intent.",
      "type": "object",
      "properties": {
        "StartResponse": {
          "$ref": "#/definitions/FulfillmentStartResponseSpecification"
        },
        "UpdateResponse": {
          "$ref": "#/definitions/FulfillmentUpdateResponseSpecification"
        },
        "TimeoutInSeconds": {
          "description": "The length of time that the fulfillment Lambda function should run before it times out.",
          "type": "integer",
          "minimum": 1,
          "maximum": 900,
          "markdownDescription": "The length of time that the fulfillment Lambda function should run before it times out.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Active": {
          "description": "Determines whether fulfillment updates are sent to the user. When this field is true, updates are sent.",
          "type": "boolean",
          "markdownDescription": "Determines whether fulfillment updates are sent to the user. When this field is true, updates are sent.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Active"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides information for updating the user on the progress of fulfilling an intent.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PostFulfillmentStatusSpecification": {
      "description": "Provides a setting that determines whether the post-fulfillment response is sent to the user.",
      "type": "object",
      "properties": {
        "SuccessResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SuccessNextStep": {
          "description": "Specifies the next step in the conversation that Amazon Lex invokes when the fulfillment code hook completes successfully.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step in the conversation that Amazon Lex invokes when the fulfillment code hook completes successfully.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SuccessConditional": {
          "description": "A list of conditional branches to evaluate after the fulfillment code hook finishes successfully.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the fulfillment code hook finishes successfully.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureNextStep": {
          "description": "Specifies the next step the bot runs after the fulfillment code hook throws an exception or returns with the State field of the Intent object set to Failed.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step the bot runs after the fulfillment code hook throws an exception or returns with the State field of the Intent object set to Failed.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureConditional": {
          "description": "A list of conditional branches to evaluate after the fulfillment code hook throws an exception or returns with the State field of the Intent object set to Failed.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the fulfillment code hook throws an exception or returns with the State field of the Intent object set to Failed.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutNextStep": {
          "description": "Specifies the next step that the bot runs when the fulfillment code hook times out.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot runs when the fulfillment code hook times out.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutConditional": {
          "description": "A list of conditional branches to evaluate if the fulfillment code hook times out.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate if the fulfillment code hook times out.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "Provides a setting that determines whether the post-fulfillment response is sent to the user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FulfillmentCodeHookSetting": {
      "description": "Settings that determine if a Lambda function should be invoked to fulfill a specific intent.",
      "type": "object",
      "properties": {
        "FulfillmentUpdatesSpecification": {
          "$ref": "#/definitions/FulfillmentUpdatesSpecification"
        },
        "PostFulfillmentStatusSpecification": {
          "$ref": "#/definitions/PostFulfillmentStatusSpecification"
        },
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IsActive": {
          "description": "Determines whether the fulfillment code hook is used. When active is false, the code hook doesn't run.",
          "type": "boolean",
          "markdownDescription": "Determines whether the fulfillment code hook is used. When active is false, the code hook doesn't run.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Enabled"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings that determine if a Lambda function should be invoked to fulfill a specific intent.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Button": {
      "description": "A button to use on a response card used to gather slot values from a user.",
      "type": "object",
      "properties": {
        "Text": {
          "description": "The text that appears on the button.",
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "markdownDescription": "The text that appears on the button.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 50  \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "The value returned to Amazon Lex when the user chooses this button.",
          "type": "string",
          "minLength": 1,
          "maxLength": 50,
          "markdownDescription": "The value returned to Amazon Lex when the user chooses this button.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 50  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Text",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A button to use on a response card used to gather slot values from a user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AttachmentTitle": {
      "type": "string",
      "minLength": 1,
      "maxLength": 250,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 250  \nUpdate requires: No interruption"
    },
    "AttachmentUrl": {
      "type": "string",
      "minLength": 1,
      "maxLength": 250,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 250  \nUpdate requires: No interruption"
    },
    "ImageResponseCard": {
      "description": "A message that defines a response card that the client application can show to the user.",
      "type": "object",
      "properties": {
        "Title": {
          "description": "The title to display on the response card.",
          "$ref": "#/definitions/AttachmentTitle",
          "markdownDescription": "The title to display on the response card.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Subtitle": {
          "description": "The subtitle to display on the response card.",
          "$ref": "#/definitions/AttachmentTitle",
          "markdownDescription": "The subtitle to display on the response card.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ImageUrl": {
          "description": "The URL of an image to display on the response card.",
          "$ref": "#/definitions/AttachmentUrl",
          "markdownDescription": "The URL of an image to display on the response card.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Buttons": {
          "description": "A list of buttons that should be displayed on the response card.",
          "type": "array",
          "maxItems": 5,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Button"
          },
          "markdownDescription": "A list of buttons that should be displayed on the response card.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Title"
      ],
      "additionalProperties": false,
      "markdownDescription": "A message that defines a response card that the client application can show to the user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PlainTextMessage": {
      "description": "A message in plain text format.",
      "type": "object",
      "properties": {
        "Value": {
          "description": "The message to send to the user.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "markdownDescription": "The message to send to the user.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A message in plain text format.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomPayload": {
      "description": "A message in a custom format defined by the client application.",
      "type": "object",
      "properties": {
        "Value": {
          "description": "The string that is sent to your application.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "markdownDescription": "The string that is sent to your application.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A message in a custom format defined by the client application.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SSMLMessage": {
      "description": "A message in Speech Synthesis Markup Language (SSML).",
      "type": "object",
      "properties": {
        "Value": {
          "description": "The SSML text that defines the prompt.",
          "type": "string",
          "minLength": 1,
          "maxLength": 1000,
          "markdownDescription": "The SSML text that defines the prompt.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A message in Speech Synthesis Markup Language (SSML).\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Message": {
      "description": "The primary message that Amazon Lex should send to the user.",
      "type": "object",
      "properties": {
        "PlainTextMessage": {
          "$ref": "#/definitions/PlainTextMessage"
        },
        "CustomPayload": {
          "$ref": "#/definitions/CustomPayload"
        },
        "SSMLMessage": {
          "$ref": "#/definitions/SSMLMessage"
        },
        "ImageResponseCard": {
          "$ref": "#/definitions/ImageResponseCard"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "The primary message that Amazon Lex should send to the user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MessageGroup": {
      "description": "One or more messages that Amazon Lex can send to the user.",
      "type": "object",
      "properties": {
        "Message": {
          "$ref": "#/definitions/Message"
        },
        "Variations": {
          "description": "Message variations to send to the user.",
          "type": "array",
          "maxItems": 2,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Message"
          },
          "markdownDescription": "Message variations to send to the user.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Message"
      ],
      "additionalProperties": false,
      "markdownDescription": "One or more messages that Amazon Lex can send to the user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MessageGroupsList": {
      "description": "One to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.",
      "type": "array",
      "minItems": 1,
      "maxItems": 5,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/MessageGroup"
      },
      "markdownDescription": "One to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "PromptMaxRetries": {
      "description": "The maximum number of times the bot tries to elicit a response from the user using this prompt.",
      "type": "integer",
      "minimum": 0,
      "maximum": 5,
      "markdownDescription": "The maximum number of times the bot tries to elicit a response from the user using this prompt.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "MessageSelectionStrategy": {
      "description": "Indicates how a message is selected from a message group among retries.",
      "type": "string",
      "enum": [
        "Random",
        "Ordered"
      ],
      "markdownDescription": "Indicates how a message is selected from a message group among retries.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Random | Ordered  \nUpdate requires: No interruption"
    },
    "AllowedInputTypes": {
      "description": "Specifies the allowed input types.",
      "type": "object",
      "properties": {
        "AllowAudioInput": {
          "description": "Indicates whether audio input is allowed.",
          "type": "boolean",
          "markdownDescription": "Indicates whether audio input is allowed.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "AllowDTMFInput": {
          "description": "Indicates whether DTMF input is allowed.",
          "type": "boolean",
          "markdownDescription": "Indicates whether DTMF input is allowed.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AllowAudioInput",
        "AllowDTMFInput"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the allowed input types.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DTMFSpecification": {
      "description": "Specifies the settings on DTMF input.",
      "type": "object",
      "properties": {
        "DeletionCharacter": {
          "description": "The DTMF character that clears the accumulated DTMF digits and immediately ends the input.",
          "type": "string",
          "markdownDescription": "The DTMF character that clears the accumulated DTMF digits and immediately ends the input.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^[A-D0-9#*]{1}$  \nUpdate requires: No interruption"
        },
        "EndCharacter": {
          "description": "The DTMF character that immediately ends input. If the user does not press this character, the input ends after the end timeout.",
          "type": "string",
          "markdownDescription": "The DTMF character that immediately ends input. If the user does not press this character, the input ends after the end timeout.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^[A-D0-9#*]{1}$  \nUpdate requires: No interruption"
        },
        "EndTimeoutMs": {
          "description": "How long the bot should wait after the last DTMF character input before assuming that the input has concluded.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "How long the bot should wait after the last DTMF character input before assuming that the input has concluded.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "MaxLength": {
          "description": "The maximum number of DTMF digits allowed in an utterance.",
          "type": "integer",
          "minimum": 1,
          "maximum": 1024,
          "markdownDescription": "The maximum number of DTMF digits allowed in an utterance.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DeletionCharacter",
        "EndCharacter",
        "EndTimeoutMs",
        "MaxLength"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the settings on DTMF input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AudioSpecification": {
      "description": "Specifies the audio input specifications.",
      "type": "object",
      "properties": {
        "EndTimeoutMs": {
          "description": "Time for which a bot waits after the customer stops speaking to assume the utterance is finished.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "Time for which a bot waits after the customer stops speaking to assume the utterance is finished.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "MaxLengthMs": {
          "description": "Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "Time for how long Amazon Lex waits before speech input is truncated and the speech is returned to application.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "EndTimeoutMs",
        "MaxLengthMs"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the audio input specifications.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AudioAndDTMFInputSpecification": {
      "description": "Specifies the audio and DTMF input specification.",
      "type": "object",
      "properties": {
        "StartTimeoutMs": {
          "description": "Time for which a bot waits before assuming that the customer isn't going to speak or press a key. This timeout is shared between Audio and DTMF inputs.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "Time for which a bot waits before assuming that the customer isn't going to speak or press a key. This timeout is shared between Audio and DTMF inputs.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "DTMFSpecification": {
          "$ref": "#/definitions/DTMFSpecification"
        },
        "AudioSpecification": {
          "$ref": "#/definitions/AudioSpecification"
        }
      },
      "required": [
        "StartTimeoutMs"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the audio and DTMF input specification.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TextInputSpecification": {
      "description": "Specifies the text input specifications.",
      "type": "object",
      "properties": {
        "StartTimeoutMs": {
          "description": "Time for which a bot waits before re-prompting a customer for text input.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "Time for which a bot waits before re-prompting a customer for text input.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "StartTimeoutMs"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the text input specifications.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PromptAttemptSpecification": {
      "description": "Specifies the settings on a prompt attempt.",
      "type": "object",
      "properties": {
        "AllowedInputTypes": {
          "$ref": "#/definitions/AllowedInputTypes"
        },
        "AllowInterrupt": {
          "description": "Indicates whether the user can interrupt a speech prompt attempt from the bot.",
          "type": "boolean",
          "markdownDescription": "Indicates whether the user can interrupt a speech prompt attempt from the bot.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "AudioAndDTMFInputSpecification": {
          "$ref": "#/definitions/AudioAndDTMFInputSpecification"
        },
        "TextInputSpecification": {
          "$ref": "#/definitions/TextInputSpecification"
        }
      },
      "required": [
        "AllowedInputTypes"
      ],
      "additionalProperties": false,
      "markdownDescription": "Specifies the settings on a prompt attempt.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PromptSpecification": {
      "description": "Prompts the user to confirm the intent.",
      "type": "object",
      "properties": {
        "MessageGroupsList": {
          "$ref": "#/definitions/MessageGroupsList"
        },
        "MaxRetries": {
          "$ref": "#/definitions/PromptMaxRetries"
        },
        "AllowInterrupt": {
          "description": "Indicates whether the user can interrupt a speech prompt from the bot.",
          "type": "boolean",
          "markdownDescription": "Indicates whether the user can interrupt a speech prompt from the bot.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "MessageSelectionStrategy": {
          "$ref": "#/definitions/MessageSelectionStrategy"
        },
        "PromptAttemptsSpecification": {
          "description": "Specifies the advanced settings on each attempt of the prompt.",
          "type": "object",
          "patternProperties": {
            "^(Initial|Retry1|Retry2|Retry3|Retry4|Retry5)$": {
              "$ref": "#/definitions/PromptAttemptSpecification"
            }
          },
          "additionalProperties": false,
          "markdownDescription": "Specifies the advanced settings on each attempt of the prompt.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MessageGroupsList",
        "MaxRetries"
      ],
      "additionalProperties": false,
      "markdownDescription": "Prompts the user to confirm the intent.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ResponseSpecification": {
      "description": "A list of message groups that Amazon Lex uses to respond the user input.",
      "type": "object",
      "properties": {
        "MessageGroupsList": {
          "$ref": "#/definitions/MessageGroupsList"
        },
        "AllowInterrupt": {
          "description": "Indicates whether the user can interrupt a speech prompt from the bot.",
          "type": "boolean",
          "markdownDescription": "Indicates whether the user can interrupt a speech prompt from the bot.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MessageGroupsList"
      ],
      "additionalProperties": false,
      "markdownDescription": "A list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "StillWaitingResponseFrequency": {
      "description": "How often a message should be sent to the user in seconds.",
      "type": "integer",
      "minimum": 1,
      "maximum": 300,
      "markdownDescription": "How often a message should be sent to the user in seconds.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "StillWaitingResponseTimeout": {
      "description": "If Amazon Lex waits longer than this length of time in seconds for a response, it will stop sending messages.",
      "type": "integer",
      "minimum": 1,
      "maximum": 900,
      "markdownDescription": "If Amazon Lex waits longer than this length of time in seconds for a response, it will stop sending messages.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "StillWaitingResponseSpecification": {
      "description": "StillWaitingResponseSpecification.",
      "type": "object",
      "properties": {
        "MessageGroupsList": {
          "$ref": "#/definitions/MessageGroupsList"
        },
        "FrequencyInSeconds": {
          "$ref": "#/definitions/StillWaitingResponseFrequency"
        },
        "TimeoutInSeconds": {
          "$ref": "#/definitions/StillWaitingResponseTimeout"
        },
        "AllowInterrupt": {
          "description": "Indicates whether the user can interrupt a speech prompt from the bot.",
          "type": "boolean",
          "markdownDescription": "Indicates whether the user can interrupt a speech prompt from the bot.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "MessageGroupsList",
        "FrequencyInSeconds",
        "TimeoutInSeconds"
      ],
      "additionalProperties": false,
      "markdownDescription": "StillWaitingResponseSpecification.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntentConfirmationSetting": {
      "description": "Provides a prompt for making sure that the user is ready for the intent to be fulfilled.",
      "type": "object",
      "properties": {
        "PromptSpecification": {
          "description": "Prompts the user to confirm the intent. This question should have a yes or no answer.",
          "$ref": "#/definitions/PromptSpecification",
          "markdownDescription": "Prompts the user to confirm the intent. This question should have a yes or no answer.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "IsActive": {
          "description": "Specifies whether the intent's confirmation is sent to the user. When this field is false, confirmation and declination responses aren't sent. If the active field isn't specified, the default is true.",
          "type": "boolean",
          "markdownDescription": "Specifies whether the intent's confirmation is sent to the user. When this field is false, confirmation and declination responses aren't sent. If the active field isn't specified, the default is true.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ConfirmationResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConfirmationNextStep": {
          "description": "Specifies the next step that the bot executes when the customer confirms the intent.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot executes when the customer confirms the intent.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ConfirmationConditional": {
          "description": "A list of conditional branches to evaluate after the intent is closed.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the intent is closed.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DeclinationResponse": {
          "description": "When the user answers \"no\" to the question defined in promptSpecification, Amazon Lex responds with this response to acknowledge that the intent was canceled.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "When the user answers \"no\" to the question defined in promptSpecification, Amazon Lex responds with this response to acknowledge that the intent was canceled.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DeclinationNextStep": {
          "description": "Specifies the next step that the bot executes when the customer declines the intent.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot executes when the customer declines the intent.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DeclinationConditional": {
          "description": "A list of conditional branches to evaluate after the intent is declined.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the intent is declined.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureNextStep": {
          "description": "The next step to take in the conversation if the confirmation step fails.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "The next step to take in the conversation if the confirmation step fails.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureConditional": {
          "description": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "CodeHook": {
          "description": "The DialogCodeHookInvocationSetting object associated with intent's confirmation step. The dialog code hook is triggered based on these invocation settings when the confirmation next step or declination next step or failure next step is InvokeDialogCodeHook.",
          "$ref": "#/definitions/DialogCodeHookInvocationSetting",
          "markdownDescription": "The DialogCodeHookInvocationSetting object associated with intent's confirmation step. The dialog code hook is triggered based on these invocation settings when the confirmation next step or declination next step or failure next step is InvokeDialogCodeHook.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ElicitationCodeHook": {
          "description": "The DialogCodeHookInvocationSetting used when the code hook is invoked during confirmation prompt retries.",
          "$ref": "#/definitions/ElicitationCodeHookInvocationSetting",
          "markdownDescription": "The DialogCodeHookInvocationSetting used when the code hook is invoked during confirmation prompt retries.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "PromptSpecification"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides a prompt for making sure that the user is ready for the intent to be fulfilled.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntentClosingSetting": {
      "description": "Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.",
      "type": "object",
      "properties": {
        "ClosingResponse": {
          "description": "The response that Amazon Lex sends to the user when the intent is complete.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "The response that Amazon Lex sends to the user when the intent is complete.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "IsActive": {
          "description": "Specifies whether an intent's closing response is used. When this field is false, the closing response isn't sent to the user. If the active field isn't specified, the default is true.",
          "type": "boolean",
          "markdownDescription": "Specifies whether an intent's closing response is used. When this field is false, the closing response isn't sent to the user. If the active field isn't specified, the default is true.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Conditional": {
          "description": "A list of conditional branches associated with the intent's closing response. These branches are executed when the nextStep attribute is set to EvalutateConditional.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches associated with the intent's closing response. These branches are executed when the nextStep attribute is set to EvalutateConditional.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "NextStep": {
          "description": "Specifies the next step that the bot executes after playing the intent's closing response.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot executes after playing the intent's closing response.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InputContext": {
      "description": "InputContext specified for the intent.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the context.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "The name of the context.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "InputContext specified for the intent.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InputContextsList": {
      "description": "The list of input contexts specified for the intent.",
      "type": "array",
      "maxItems": 5,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/InputContext"
      },
      "markdownDescription": "The list of input contexts specified for the intent.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ContextTimeToLiveInSeconds": {
      "description": "The amount of time, in seconds, that the output context should remain active.",
      "type": "integer",
      "minimum": 5,
      "maximum": 86400,
      "markdownDescription": "The amount of time, in seconds, that the output context should remain active.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "ContextTurnsToLive": {
      "description": "The number of conversation turns that the output context should remain active.",
      "type": "integer",
      "minimum": 1,
      "maximum": 20,
      "markdownDescription": "The number of conversation turns that the output context should remain active.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "OutputContext": {
      "description": "A session context that is activated when an intent is fulfilled.",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/Name"
        },
        "TimeToLiveInSeconds": {
          "$ref": "#/definitions/ContextTimeToLiveInSeconds"
        },
        "TurnsToLive": {
          "$ref": "#/definitions/ContextTurnsToLive"
        }
      },
      "required": [
        "Name",
        "TimeToLiveInSeconds",
        "TurnsToLive"
      ],
      "additionalProperties": false,
      "markdownDescription": "A session context that is activated when an intent is fulfilled.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "OutputContextsList": {
      "description": "A list of contexts that the intent activates when it is fulfilled.",
      "type": "array",
      "maxItems": 10,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/OutputContext"
      },
      "markdownDescription": "A list of contexts that the intent activates when it is fulfilled.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "KendraIndexArn": {
      "description": "The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search.",
      "type": "string",
      "minLength": 32,
      "maxLength": 2048,
      "markdownDescription": "The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 32  \nMaximum Length: 2048  \nPattern: ^arn:aws[a-zA-Z-]*:kendra:[a-z]+-[a-z]+-[0-9]:[0-9]{12}:index/[a-zA-Z0-9][a-zA-Z0-9_-]*$  \nUpdate requires: No interruption"
    },
    "QueryFilterString": {
      "description": "A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query.",
      "type": "string",
      "minLength": 1,
      "maxLength": 5000,
      "markdownDescription": "A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 5000  \nUpdate requires: No interruption"
    },
    "KendraConfiguration": {
      "description": "Configuration for searching a Amazon Kendra index specified for the intent.",
      "type": "object",
      "properties": {
        "KendraIndex": {
          "$ref": "#/definitions/KendraIndexArn"
        },
        "QueryFilterStringEnabled": {
          "description": "Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.",
          "type": "boolean",
          "markdownDescription": "Determines whether the AMAZON.KendraSearchIntent intent uses a custom query string to query the Amazon Kendra index.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "QueryFilterString": {
          "$ref": "#/definitions/QueryFilterString"
        }
      },
      "required": [
        "KendraIndex"
      ],
      "additionalProperties": false,
      "markdownDescription": "Configuration for searching a Amazon Kendra index specified for the intent.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PriorityValue": {
      "description": "The priority that a slot should be elicited.",
      "type": "integer",
      "minimum": 0,
      "maximum": 100,
      "markdownDescription": "The priority that a slot should be elicited.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "SlotPriority": {
      "description": "The priority that Amazon Lex should use when eliciting slot values from a user.",
      "type": "object",
      "properties": {
        "Priority": {
          "$ref": "#/definitions/PriorityValue"
        },
        "SlotName": {
          "description": "The name of the slot.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "The name of the slot.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "SlotName",
        "Priority"
      ],
      "additionalProperties": false,
      "markdownDescription": "The priority that Amazon Lex should use when eliciting slot values from a user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotPrioritiesList": {
      "description": "List for slot priorities",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SlotPriority"
      },
      "markdownDescription": "List for slot priorities\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Intent": {
      "description": "Represents an action that the user wants to perform.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the intent.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "The name of the intent.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Description": {
          "description": "Description of thr intent.",
          "$ref": "#/definitions/Description",
          "markdownDescription": "Description of thr intent.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ParentIntentSignature": {
          "$ref": "#/definitions/ParentIntentSignature"
        },
        "SampleUtterances": {
          "description": "A sample utterance that invokes an intent or respond to a slot elicitation prompt.",
          "$ref": "#/definitions/SampleUtterancesList",
          "markdownDescription": "A sample utterance that invokes an intent or respond to a slot elicitation prompt.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DialogCodeHook": {
          "$ref": "#/definitions/DialogCodeHookSetting"
        },
        "FulfillmentCodeHook": {
          "$ref": "#/definitions/FulfillmentCodeHookSetting"
        },
        "IntentConfirmationSetting": {
          "$ref": "#/definitions/IntentConfirmationSetting"
        },
        "IntentClosingSetting": {
          "$ref": "#/definitions/IntentClosingSetting"
        },
        "InitialResponseSetting": {
          "description": "Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.",
          "$ref": "#/definitions/InitialResponseSetting",
          "markdownDescription": "Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "InputContexts": {
          "$ref": "#/definitions/InputContextsList"
        },
        "OutputContexts": {
          "$ref": "#/definitions/OutputContextsList"
        },
        "KendraConfiguration": {
          "$ref": "#/definitions/KendraConfiguration"
        },
        "SlotPriorities": {
          "$ref": "#/definitions/SlotPrioritiesList"
        },
        "Slots": {
          "description": "List of slots",
          "type": "array",
          "maxItems": 100,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Slot"
          },
          "markdownDescription": "List of slots\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "Represents an action that the user wants to perform.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ParentSlotTypeSignature": {
      "description": "The built-in slot type used as a parent of this slot type.",
      "type": "string",
      "markdownDescription": "The built-in slot type used as a parent of this slot type.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SlotTypeName": {
      "description": "The slot type name that is used in the slot. Allows for custom and built-in slot type names",
      "type": "string",
      "markdownDescription": "The slot type name that is used in the slot. Allows for custom and built-in slot type names\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SampleValue": {
      "description": "Defines one of the values for a slot type.",
      "type": "object",
      "properties": {
        "Value": {
          "description": "The value that can be used for a slot type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 140,
          "markdownDescription": "The value that can be used for a slot type.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 140  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "Defines one of the values for a slot type.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SynonymList": {
      "description": "Additional values related to the slot type entry.",
      "type": "array",
      "maxItems": 10000,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SampleValue"
      },
      "markdownDescription": "Additional values related to the slot type entry.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SlotTypeValue": {
      "description": "Value that the slot type can take.",
      "type": "object",
      "properties": {
        "SampleValue": {
          "$ref": "#/definitions/SampleValue"
        },
        "Synonyms": {
          "$ref": "#/definitions/SynonymList"
        }
      },
      "required": [
        "SampleValue"
      ],
      "additionalProperties": false,
      "markdownDescription": "Value that the slot type can take.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotTypeValues": {
      "description": "A List of slot type values",
      "type": "array",
      "maxItems": 10000,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/SlotTypeValue"
      },
      "markdownDescription": "A List of slot type values\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SlotValueResolutionStrategy": {
      "type": "string",
      "enum": [
        "ORIGINAL_VALUE",
        "TOP_RESOLUTION"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ORIGINAL_VALUE | TOP_RESOLUTION  \nUpdate requires: No interruption"
    },
    "SlotValueRegexFilter": {
      "description": "A regular expression used to validate the value of a slot.",
      "type": "object",
      "properties": {
        "Pattern": {
          "description": "Regex pattern",
          "type": "string",
          "minLength": 1,
          "maxLength": 300,
          "markdownDescription": "Regex pattern\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 300  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Pattern"
      ],
      "additionalProperties": false,
      "markdownDescription": "A regular expression used to validate the value of a slot.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AudioRecognitionStrategy": {
      "description": "Enables using slot values as a custom vocabulary when recognizing user utterances.",
      "type": "string",
      "enum": [
        "UseSlotValuesAsCustomVocabulary"
      ],
      "markdownDescription": "Enables using slot values as a custom vocabulary when recognizing user utterances.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: UseSlotValuesAsCustomVocabulary  \nUpdate requires: No interruption"
    },
    "AdvancedRecognitionSetting": {
      "description": "Provides settings that enable advanced recognition settings for slot values.",
      "type": "object",
      "properties": {
        "AudioRecognitionStrategy": {
          "$ref": "#/definitions/AudioRecognitionStrategy"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Provides settings that enable advanced recognition settings for slot values.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValueSelectionSetting": {
      "description": "Contains settings used by Amazon Lex to select a slot value.",
      "type": "object",
      "properties": {
        "ResolutionStrategy": {
          "$ref": "#/definitions/SlotValueResolutionStrategy"
        },
        "RegexFilter": {
          "$ref": "#/definitions/SlotValueRegexFilter"
        },
        "AdvancedRecognitionSetting": {
          "$ref": "#/definitions/AdvancedRecognitionSetting"
        }
      },
      "required": [
        "ResolutionStrategy"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains settings used by Amazon Lex to select a slot value.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3BucketName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 63,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: ^[a-z0-9][\\.\\-a-z0-9]{1,61}[a-z0-9]$  \nUpdate requires: No interruption"
    },
    "S3ObjectKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 1024,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nPattern: [\\.\\-\\!\\*\\_\\'\\(\\)a-zA-Z0-9][\\.\\-\\!\\*\\_\\'\\(\\)\\/a-zA-Z0-9]*$  \nUpdate requires: No interruption"
    },
    "GrammarSlotTypeSource": {
      "description": "Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.",
      "type": "object",
      "properties": {
        "S3BucketName": {
          "description": "The name of the S3 bucket that contains the grammar source.",
          "$ref": "#/definitions/S3BucketName",
          "markdownDescription": "The name of the S3 bucket that contains the grammar source.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "S3ObjectKey": {
          "description": "The path to the grammar in the S3 bucket.",
          "$ref": "#/definitions/S3ObjectKey",
          "markdownDescription": "The path to the grammar in the S3 bucket.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "KmsKeyArn": {
          "description": "The Amazon KMS key required to decrypt the contents of the grammar, if any.",
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "The Amazon KMS key required to decrypt the contents of the grammar, if any.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[\\w\\-]+:kms:[\\w\\-]+:[\\d]{12}:(?:key\\/[\\w\\-]+|alias\\/[a-zA-Z0-9:\\/_\\-]{1,256})$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3BucketName",
        "S3ObjectKey"
      ],
      "additionalProperties": false,
      "markdownDescription": "Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "GrammarSlotTypeSetting": {
      "description": "Settings required for a slot type based on a grammar that you provide.",
      "type": "object",
      "properties": {
        "Source": {
          "$ref": "#/definitions/GrammarSlotTypeSource"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Settings required for a slot type based on a grammar that you provide.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ExternalSourceSetting": {
      "description": "Provides information about the external source of the slot type's definition.",
      "type": "object",
      "properties": {
        "GrammarSlotTypeSetting": {
          "$ref": "#/definitions/GrammarSlotTypeSetting"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Provides information about the external source of the slot type's definition.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotType": {
      "description": "A custom, extended built-in or a grammar slot type.",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/Name"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "ParentSlotTypeSignature": {
          "$ref": "#/definitions/ParentSlotTypeSignature"
        },
        "SlotTypeValues": {
          "$ref": "#/definitions/SlotTypeValues"
        },
        "ValueSelectionSetting": {
          "$ref": "#/definitions/SlotValueSelectionSetting"
        },
        "ExternalSourceSetting": {
          "$ref": "#/definitions/ExternalSourceSetting"
        }
      },
      "required": [
        "Name"
      ],
      "additionalProperties": false,
      "markdownDescription": "A custom, extended built-in or a grammar slot type.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomVocabularyItem": {
      "description": "A custom vocabulary item that contains the phrase to recognize and a weight to give the boost.",
      "type": "object",
      "properties": {
        "Phrase": {
          "description": "Phrase that should be recognized.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "markdownDescription": "Phrase that should be recognized.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nUpdate requires: No interruption"
        },
        "Weight": {
          "description": "The degree to which the phrase recognition is boosted. The weight 0 means that no boosting will be applied and the entry will only be used for performing replacements using the displayAs field.",
          "type": "integer",
          "minimum": 0,
          "maximum": 3,
          "markdownDescription": "The degree to which the phrase recognition is boosted. The weight 0 means that no boosting will be applied and the entry will only be used for performing replacements using the displayAs field.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "DisplayAs": {
          "description": "Defines how you want your phrase to look in your transcription output.",
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "markdownDescription": "Defines how you want your phrase to look in your transcription output.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Phrase"
      ],
      "additionalProperties": false,
      "markdownDescription": "A custom vocabulary item that contains the phrase to recognize and a weight to give the boost.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CustomVocabularyItems": {
      "type": "array",
      "maxItems": 500,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/CustomVocabularyItem"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "CustomVocabulary": {
      "description": "A custom vocabulary is a list of specific phrases that you want Amazon Lex V2 to recognize in the audio input.",
      "type": "object",
      "properties": {
        "CustomVocabularyItems": {
          "$ref": "#/definitions/CustomVocabularyItems"
        }
      },
      "required": [
        "CustomVocabularyItems"
      ],
      "additionalProperties": false,
      "markdownDescription": "A custom vocabulary is a list of specific phrases that you want Amazon Lex V2 to recognize in the audio input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotDefaultValue": {
      "description": "The default value to use when a user doesn't provide a value for a slot.",
      "type": "object",
      "properties": {
        "DefaultValue": {
          "description": "The default value to use when a user doesn't provide a value for a slot.",
          "type": "string",
          "minLength": 1,
          "maxLength": 202,
          "markdownDescription": "The default value to use when a user doesn't provide a value for a slot.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 202  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DefaultValue"
      ],
      "additionalProperties": false,
      "markdownDescription": "The default value to use when a user doesn't provide a value for a slot.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotDefaultValueSpecification": {
      "description": "A list of values that Amazon Lex should use as the default value for a slot.",
      "type": "object",
      "properties": {
        "DefaultValueList": {
          "description": "A list of slot default values",
          "type": "array",
          "maxItems": 10,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/SlotDefaultValue"
          },
          "markdownDescription": "A list of slot default values\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DefaultValueList"
      ],
      "additionalProperties": false,
      "markdownDescription": "A list of values that Amazon Lex should use as the default value for a slot.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotConstraint": {
      "type": "string",
      "enum": [
        "Required",
        "Optional"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Required | Optional  \nUpdate requires: No interruption"
    },
    "WaitAndContinueSpecification": {
      "description": "The prompts that Amazon Lex uses while a bot is waiting for customer input.",
      "type": "object",
      "properties": {
        "WaitingResponse": {
          "description": "The response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "The response that Amazon Lex sends to indicate that the bot is waiting for the conversation to continue.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "ContinueResponse": {
          "description": "The response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "The response that Amazon Lex sends to indicate that the bot is ready to continue the conversation.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "StillWaitingResponse": {
          "description": "The response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.",
          "$ref": "#/definitions/StillWaitingResponseSpecification",
          "markdownDescription": "The response that Amazon Lex sends periodically to the user to indicate that the bot is still waiting for input from the user.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "IsActive": {
          "description": "Specifies whether the bot will wait for a user to respond.",
          "type": "boolean",
          "markdownDescription": "Specifies whether the bot will wait for a user to respond.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "WaitingResponse",
        "ContinueResponse"
      ],
      "additionalProperties": false,
      "markdownDescription": "The prompts that Amazon Lex uses while a bot is waiting for customer input.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValueElicitationSetting": {
      "description": "Settings that you can use for eliciting a slot value.",
      "type": "object",
      "properties": {
        "DefaultValueSpecification": {
          "description": "A list of default values for a slot.",
          "$ref": "#/definitions/SlotDefaultValueSpecification",
          "markdownDescription": "A list of default values for a slot.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SlotConstraint": {
          "description": "Specifies whether the slot is required or optional.",
          "$ref": "#/definitions/SlotConstraint",
          "markdownDescription": "Specifies whether the slot is required or optional.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "PromptSpecification": {
          "description": "The prompt that Amazon Lex uses to elicit the slot value from the user.",
          "$ref": "#/definitions/PromptSpecification",
          "markdownDescription": "The prompt that Amazon Lex uses to elicit the slot value from the user.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SampleUtterances": {
          "description": "If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy.",
          "$ref": "#/definitions/SampleUtterancesList",
          "markdownDescription": "If you know a specific pattern that users might respond to an Amazon Lex request for a slot value, you can provide those utterances to improve accuracy.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "WaitAndContinueSpecification": {
          "description": "Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input.",
          "$ref": "#/definitions/WaitAndContinueSpecification",
          "markdownDescription": "Specifies the prompts that Amazon Lex uses while a bot is waiting for customer input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SlotCaptureSetting": {
          "description": "Specifies the next stage in the conversation after capturing the slot.",
          "$ref": "#/definitions/SlotCaptureSetting",
          "markdownDescription": "Specifies the next stage in the conversation after capturing the slot.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "SlotConstraint"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings that you can use for eliciting a slot value.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ObfuscationSetting": {
      "description": "Determines whether Amazon Lex obscures slot values in conversation logs.",
      "type": "object",
      "properties": {
        "ObfuscationSettingType": {
          "description": "Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.",
          "type": "string",
          "enum": [
            "None",
            "DefaultObfuscation"
          ],
          "markdownDescription": "Value that determines whether Amazon Lex obscures slot values in conversation logs. The default is to obscure the values.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: None | DefaultObfuscation  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ObfuscationSettingType"
      ],
      "additionalProperties": false,
      "markdownDescription": "Determines whether Amazon Lex obscures slot values in conversation logs.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MultipleValuesSetting": {
      "description": "Indicates whether a slot can return multiple values.",
      "type": "object",
      "properties": {
        "AllowMultipleValues": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [],
      "additionalProperties": false,
      "markdownDescription": "Indicates whether a slot can return multiple values.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Slot": {
      "description": "A slot is a variable needed to fulfill an intent, where an intent can require zero or more slots.",
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/Name"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "SlotTypeName": {
          "$ref": "#/definitions/SlotTypeName"
        },
        "ValueElicitationSetting": {
          "$ref": "#/definitions/SlotValueElicitationSetting"
        },
        "ObfuscationSetting": {
          "$ref": "#/definitions/ObfuscationSetting"
        },
        "MultipleValuesSetting": {
          "$ref": "#/definitions/MultipleValuesSetting"
        }
      },
      "required": [
        "Name",
        "SlotTypeName",
        "ValueElicitationSetting"
      ],
      "additionalProperties": false,
      "markdownDescription": "A slot is a variable needed to fulfill an intent, where an intent can require zero or more slots.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "BotLocale": {
      "description": "A locale in the bot, which contains the intents and slot types that the bot uses in conversations with users in the specified language and locale.",
      "type": "object",
      "properties": {
        "LocaleId": {
          "$ref": "#/definitions/LocaleId"
        },
        "Description": {
          "$ref": "#/definitions/Description"
        },
        "VoiceSettings": {
          "$ref": "#/definitions/VoiceSettings"
        },
        "NluConfidenceThreshold": {
          "$ref": "#/definitions/ConfidenceThreshold"
        },
        "Intents": {
          "description": "List of intents",
          "type": "array",
          "maxItems": 1000,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Intent"
          },
          "markdownDescription": "List of intents\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SlotTypes": {
          "description": "List of SlotTypes",
          "type": "array",
          "maxItems": 250,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/SlotType"
          },
          "markdownDescription": "List of SlotTypes\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "CustomVocabulary": {
          "$ref": "#/definitions/CustomVocabulary"
        }
      },
      "required": [
        "LocaleId",
        "NluConfidenceThreshold"
      ],
      "additionalProperties": false,
      "markdownDescription": "A locale in the bot, which contains the intents and slot types that the bot uses in conversations with users in the specified language and locale.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3Location": {
      "description": "S3 location of bot definitions zip file, if it's not defined inline in CloudFormation.",
      "type": "object",
      "properties": {
        "S3Bucket": {
          "description": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.",
          "$ref": "#/definitions/S3BucketName",
          "markdownDescription": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "S3ObjectKey": {
          "description": "The Amazon S3 key of the deployment package.",
          "$ref": "#/definitions/S3ObjectKey",
          "markdownDescription": "The Amazon S3 key of the deployment package.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "S3ObjectVersion": {
          "type": "string",
          "description": "For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.",
          "minLength": 1,
          "maxLength": 1024,
          "markdownDescription": "For versioned objects, the version of the deployment package object to use. If not specified, the current object version will be used.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3Bucket",
        "S3ObjectKey"
      ],
      "additionalProperties": false,
      "markdownDescription": "S3 location of bot definitions zip file, if it's not defined inline in CloudFormation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Condition": {
      "description": "Provides an expression that evaluates to true or false.",
      "type": "object",
      "properties": {
        "ExpressionString": {
          "description": "The expression string that is evaluated.",
          "$ref": "#/definitions/ConditionExpression",
          "markdownDescription": "The expression string that is evaluated.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ExpressionString"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides an expression that evaluates to true or false.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Conditional": {
      "description": "Contains conditional branches to fork the conversation flow.",
      "type": "object",
      "properties": {
        "IsActive": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ConditionalBranches": {
          "$ref": "#/definitions/ConditionalBranches"
        }
      },
      "required": [
        "IsActive",
        "ConditionalBranches"
      ],
      "additionalProperties": false,
      "markdownDescription": "Contains conditional branches to fork the conversation flow.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConditionalSpecification": {
      "description": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.",
      "type": "object",
      "properties": {
        "IsActive": {
          "description": "Determines whether a conditional branch is active. When active is false, the conditions are not evaluated.",
          "type": "boolean",
          "markdownDescription": "Determines whether a conditional branch is active. When active is false, the conditions are not evaluated.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "ConditionalBranches": {
          "description": "A list of conditional branches. A conditional branch is made up of a condition, a response and a next step. The response and next step are executed when the condition is true.",
          "$ref": "#/definitions/ConditionalBranches",
          "markdownDescription": "A list of conditional branches. A conditional branch is made up of a condition, a response and a next step. The response and next step are executed when the condition is true.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "DefaultBranch": {
          "description": "The conditional branch that should be followed when the conditions for other branches are not satisfied. A conditional branch is made up of a condition, a response and a next step.",
          "$ref": "#/definitions/DefaultConditionalBranch",
          "markdownDescription": "The conditional branch that should be followed when the conditions for other branches are not satisfied. A conditional branch is made up of a condition, a response and a next step.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "IsActive",
        "ConditionalBranches",
        "DefaultBranch"
      ],
      "additionalProperties": false,
      "markdownDescription": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DefaultConditionalBranch": {
      "description": "A set of actions that Amazon Lex should run if none of the other conditions are met.",
      "type": "object",
      "properties": {
        "NextStep": {
          "description": "The next step in the conversation.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "The next step in the conversation.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Response": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "A set of actions that Amazon Lex should run if none of the other conditions are met.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConditionalBranch": {
      "description": "A set of actions that Amazon Lex should run if the condition is matched.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the branch.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "The name of the branch.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Condition": {
          "description": "Contains the expression to evaluate. If the condition is true, the branch's actions are taken.",
          "$ref": "#/definitions/Condition",
          "markdownDescription": "Contains the expression to evaluate. If the condition is true, the branch's actions are taken.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "NextStep": {
          "description": "The next step in the conversation.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "The next step in the conversation.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "Response": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name",
        "Condition",
        "NextStep"
      ],
      "additionalProperties": false,
      "markdownDescription": "A set of actions that Amazon Lex should run if the condition is matched.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConditionalBranches": {
      "description": "A list of 1 to 4 conditional branches to fork the conversation flow.",
      "type": "array",
      "minItems": 1,
      "maxItems": 4,
      "insertionOrder": true,
      "items": {
        "$ref": "#/definitions/ConditionalBranch"
      },
      "markdownDescription": "A list of 1 to 4 conditional branches to fork the conversation flow.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "InitialResponseSetting": {
      "description": "Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.",
      "type": "object",
      "properties": {
        "InitialResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "NextStep": {
          "description": "The next step in the conversation.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "The next step in the conversation.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Conditional": {
          "description": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "CodeHook": {
          "description": "Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.",
          "$ref": "#/definitions/DialogCodeHookInvocationSetting",
          "markdownDescription": "Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ConditionExpression": {
      "description": "Expression that is evaluated to true or false at runtime.",
      "type": "string",
      "minLength": 1,
      "maxLength": 1024,
      "markdownDescription": "Expression that is evaluated to true or false at runtime.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
    },
    "DialogCodeHookInvocationSetting": {
      "description": "Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.",
      "type": "object",
      "properties": {
        "EnableCodeHookInvocation": {
          "description": "Indicates whether a Lambda function should be invoked for the dialog.",
          "type": "boolean",
          "markdownDescription": "Indicates whether a Lambda function should be invoked for the dialog.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IsActive": {
          "description": "Determines whether a dialog code hook is used when the intent is activated.",
          "type": "boolean",
          "markdownDescription": "Determines whether a dialog code hook is used when the intent is activated.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "InvocationLabel": {
          "description": "A label that indicates the dialog step from which the dialog code hook is happening.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "A label that indicates the dialog step from which the dialog code hook is happening.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "PostCodeHookSpecification": {
          "description": "Contains the responses and actions that Amazon Lex takes after the Lambda function is complete.",
          "$ref": "#/definitions/PostDialogCodeHookInvocationSpecification",
          "markdownDescription": "Contains the responses and actions that Amazon Lex takes after the Lambda function is complete.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "IsActive",
        "EnableCodeHookInvocation",
        "PostCodeHookSpecification"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ElicitationCodeHookInvocationSetting": {
      "description": "Settings that specify the dialog code hook that is called by Amazon Lex between eliciting slot values.",
      "type": "object",
      "properties": {
        "EnableCodeHookInvocation": {
          "description": "Indicates whether a Lambda function should be invoked for the dialog.",
          "type": "boolean",
          "markdownDescription": "Indicates whether a Lambda function should be invoked for the dialog.\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "InvocationLabel": {
          "description": "A label that indicates the dialog step from which the dialog code hook is happening.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "A label that indicates the dialog step from which the dialog code hook is happening.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "required": [
        "EnableCodeHookInvocation"
      ],
      "additionalProperties": false,
      "markdownDescription": "Settings that specify the dialog code hook that is called by Amazon Lex between eliciting slot values.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PostDialogCodeHookInvocationSpecification": {
      "description": "Specifies next steps to run after the dialog code hook finishes.",
      "type": "object",
      "properties": {
        "SuccessResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SuccessNextStep": {
          "description": "Specifics the next step the bot runs after the dialog code hook finishes successfully.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifics the next step the bot runs after the dialog code hook finishes successfully.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SuccessConditional": {
          "description": "A list of conditional branches to evaluate after the dialog code hook finishes successfully.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the dialog code hook finishes successfully.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureNextStep": {
          "description": "Specifies the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step the bot runs after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureConditional": {
          "description": "A list of conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the dialog code hook throws an exception or returns with the State field of the Intent object set to Failed.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutNextStep": {
          "description": "Specifies the next step that the bot runs when the code hook times out.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot runs when the code hook times out.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "TimeoutConditional": {
          "description": "A list of conditional branches to evaluate if the code hook times out.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate if the code hook times out.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Specifies next steps to run after the dialog code hook finishes.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DialogState": {
      "description": "The current state of the conversation with the user.",
      "type": "object",
      "properties": {
        "DialogAction": {
          "description": "Defines the action that the bot executes at runtime when the conversation reaches this step.",
          "$ref": "#/definitions/DialogAction",
          "markdownDescription": "Defines the action that the bot executes at runtime when the conversation reaches this step.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Intent": {
          "description": "Override settings to configure the intent state.",
          "$ref": "#/definitions/IntentOverride",
          "markdownDescription": "Override settings to configure the intent state.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SessionAttributes": {
          "description": "List of session attributes to be applied when the conversation reaches this step.",
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/SessionAttribute"
          },
          "markdownDescription": "List of session attributes to be applied when the conversation reaches this step.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The current state of the conversation with the user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DialogAction": {
      "description": "Defines the action that the bot executes at runtime when the conversation reaches this step.",
      "type": "object",
      "properties": {
        "Type": {
          "description": "The action that the bot should execute.",
          "$ref": "#/definitions/DialogActionType",
          "markdownDescription": "The action that the bot should execute.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
        },
        "SlotToElicit": {
          "description": "If the dialog action is ElicitSlot, defines the slot to elicit from the user.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "If the dialog action is ElicitSlot, defines the slot to elicit from the user.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "SuppressNextMessage": {
          "description": "When true the next message for the intent is not used.",
          "type": "boolean",
          "markdownDescription": "When true the next message for the intent is not used.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false,
      "markdownDescription": "Defines the action that the bot executes at runtime when the conversation reaches this step.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DialogActionType": {
      "description": "The possible values of actions that the conversation can take.",
      "type": "string",
      "enum": [
        "CloseIntent",
        "ConfirmIntent",
        "ElicitIntent",
        "ElicitSlot",
        "StartIntent",
        "FulfillIntent",
        "EndConversation",
        "EvaluateConditional",
        "InvokeDialogCodeHook"
      ],
      "markdownDescription": "The possible values of actions that the conversation can take.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CloseIntent | ConfirmIntent | ElicitIntent | ElicitSlot | StartIntent | FulfillIntent | EndConversation | EvaluateConditional | InvokeDialogCodeHook  \nUpdate requires: No interruption"
    },
    "SessionAttribute": {
      "description": "Key/value pair representing session-specific context information. It contains application information passed between Amazon Lex and a client application.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key"
      ],
      "additionalProperties": false,
      "markdownDescription": "Key/value pair representing session-specific context information. It contains application information passed between Amazon Lex and a client application.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IntentOverride": {
      "description": "Override settings to configure the intent state.",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The name of the intent. Only required when you're switching intents.",
          "$ref": "#/definitions/Name",
          "markdownDescription": "The name of the intent. Only required when you're switching intents.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Slots": {
          "description": "A map of all of the slot value overrides for the intent.",
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/SlotValueOverrideMap"
          },
          "markdownDescription": "A map of all of the slot value overrides for the intent.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Override settings to configure the intent state.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValueOverrideMap": {
      "description": "A map of slot names and their overridden values.",
      "type": "object",
      "properties": {
        "SlotName": {
          "$ref": "#/definitions/Name"
        },
        "SlotValueOverride": {
          "$ref": "#/definitions/SlotValueOverride"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "A map of slot names and their overridden values.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValueOverride": {
      "description": "The slot values that Amazon Lex uses when it sets slot values in a dialog step.",
      "type": "object",
      "properties": {
        "Shape": {
          "description": "When the shape value is List, it indicates that the values field contains a list of slot values. When the value is Scalar, it indicates that the value field contains a single value.",
          "$ref": "#/definitions/SlotShape",
          "markdownDescription": "When the shape value is List, it indicates that the values field contains a list of slot values. When the value is Scalar, it indicates that the value field contains a single value.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Value": {
          "description": "The current value of the slot.",
          "$ref": "#/definitions/SlotValue",
          "markdownDescription": "The current value of the slot.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Values": {
          "description": "A list of one or more values that the user provided for the slot. For example, for a slot that elicits pizza toppings, the values might be \"pepperoni\" and \"pineapple.\"",
          "$ref": "#/definitions/SlotValues",
          "markdownDescription": "A list of one or more values that the user provided for the slot. For example, for a slot that elicits pizza toppings, the values might be \"pepperoni\" and \"pineapple.\"\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The slot values that Amazon Lex uses when it sets slot values in a dialog step.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValue": {
      "description": "The value to set in a slot.",
      "type": "object",
      "properties": {
        "InterpretedValue": {
          "description": "The value that Amazon Lex determines for the slot.",
          "type": "string",
          "minLength": 1,
          "maxLength": 202,
          "markdownDescription": "The value that Amazon Lex determines for the slot.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 202  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The value to set in a slot.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SlotValues": {
      "description": "An array of values that slots should be set to",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SlotValueOverride"
      },
      "markdownDescription": "An array of values that slots should be set to\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "SlotShape": {
      "description": "The different shapes that a slot can be in during a conversation.",
      "type": "string",
      "enum": [
        "Scalar",
        "List"
      ],
      "markdownDescription": "The different shapes that a slot can be in during a conversation.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Scalar | List  \nUpdate requires: No interruption"
    },
    "SlotCaptureSetting": {
      "description": "Settings used when Amazon Lex successfully captures a slot value from a user.",
      "type": "object",
      "properties": {
        "CaptureResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "CaptureNextStep": {
          "description": "Specifies the next step that the bot runs when the slot value is captured before the code hook times out.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot runs when the slot value is captured before the code hook times out.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "CaptureConditional": {
          "description": "A list of conditional branches to evaluate after the slot value is captured.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate after the slot value is captured.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureResponse": {
          "description": "Specifies a list of message groups that Amazon Lex uses to respond the user input.",
          "$ref": "#/definitions/ResponseSpecification",
          "markdownDescription": "Specifies a list of message groups that Amazon Lex uses to respond the user input.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureNextStep": {
          "description": "Specifies the next step that the bot runs when the slot value code is not recognized.",
          "$ref": "#/definitions/DialogState",
          "markdownDescription": "Specifies the next step that the bot runs when the slot value code is not recognized.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "FailureConditional": {
          "description": "A list of conditional branches to evaluate when the slot value isn't captured.",
          "$ref": "#/definitions/ConditionalSpecification",
          "markdownDescription": "A list of conditional branches to evaluate when the slot value isn't captured.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "CodeHook": {
          "description": "Code hook called after Amazon Lex successfully captures a slot value.",
          "$ref": "#/definitions/DialogCodeHookInvocationSetting",
          "markdownDescription": "Code hook called after Amazon Lex successfully captures a slot value.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "ElicitationCodeHook": {
          "description": "Code hook called when Amazon Lex doesn't capture a slot value.",
          "$ref": "#/definitions/ElicitationCodeHookInvocationSetting",
          "markdownDescription": "Code hook called when Amazon Lex doesn't capture a slot value.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Settings used when Amazon Lex successfully captures a slot value from a user.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Name": {
      "$ref": "#/definitions/Name"
    },
    "Description": {
      "$ref": "#/definitions/Description"
    },
    "RoleArn": {
      "$ref": "#/definitions/RoleArn"
    },
    "DataPrivacy": {
      "description": "Data privacy setting of the Bot.",
      "type": "object",
      "properties": {
        "ChildDirected": {
          "type": "boolean",
          "description": "",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ChildDirected"
      ],
      "additionalProperties": false,
      "markdownDescription": "Data privacy setting of the Bot.\n\n---\n\nRequired: Yes  \nUpdate requires: No interruption"
    },
    "IdleSessionTTLInSeconds": {
      "description": "IdleSessionTTLInSeconds of the resource",
      "type": "integer",
      "minimum": 60,
      "maximum": 86400,
      "markdownDescription": "IdleSessionTTLInSeconds of the resource\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
    },
    "BotLocales": {
      "description": "List of bot locales",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/BotLocale"
      },
      "markdownDescription": "List of bot locales\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "BotFileS3Location": {
      "$ref": "#/definitions/S3Location"
    },
    "BotTags": {
      "description": "A list of tags to add to the bot, which can only be added at bot creation.",
      "type": "array",
      "uniqueItems": true,
      "maxItems": 200,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "A list of tags to add to the bot, which can only be added at bot creation.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "TestBotAliasTags": {
      "description": "A list of tags to add to the test alias for a bot, , which can only be added at bot/bot alias creation.",
      "type": "array",
      "uniqueItems": true,
      "maxItems": 200,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "A list of tags to add to the test alias for a bot, , which can only be added at bot/bot alias creation.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AutoBuildBotLocales": {
      "description": "Specifies whether to build the bot locales after bot creation completes.",
      "type": "boolean",
      "markdownDescription": "Specifies whether to build the bot locales after bot creation completes.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "TestBotAliasSettings": {
      "$ref": "#/definitions/TestBotAliasSettings"
    }
  },
  "taggable": true,
  "additionalProperties": false,
  "required": [
    "Name",
    "RoleArn",
    "DataPrivacy",
    "IdleSessionTTLInSeconds"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "readOnlyProperties": [
    "/properties/Id",
    "/properties/Arn"
  ],
  "writeOnlyProperties": [
    "/properties/BotLocales",
    "/properties/BotFileS3Location",
    "/properties/AutoBuildBotLocales",
    "/properties/BotTags",
    "/properties/TestBotAliasTags"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "lex:DescribeBot",
        "lex:CreateUploadUrl",
        "lex:StartImport",
        "lex:DescribeImport",
        "lex:ListTagsForResource",
        "lex:TagResource",
        "lex:CreateBot",
        "lex:CreateBotLocale",
        "lex:CreateIntent",
        "lex:CreateSlot",
        "lex:CreateSlotType",
        "lex:UpdateBot",
        "lex:UpdateBotLocale",
        "lex:UpdateIntent",
        "lex:UpdateSlot",
        "lex:UpdateSlotType",
        "lex:DeleteBotLocale",
        "lex:DeleteIntent",
        "lex:DeleteSlot",
        "lex:DeleteSlotType",
        "lex:DescribeBotLocale",
        "lex:BuildBotLocale",
        "lex:ListBots",
        "lex:ListBotLocales",
        "lex:CreateCustomVocabulary",
        "lex:UpdateCustomVocabulary",
        "lex:DeleteCustomVocabulary",
        "s3:GetObject",
        "lex:UpdateBotAlias"
      ]
    },
    "read": {
      "permissions": [
        "lex:DescribeBot",
        "lex:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iam:PassRole",
        "lex:DescribeBot",
        "lex:CreateUploadUrl",
        "lex:StartImport",
        "lex:DescribeImport",
        "lex:ListTagsForResource",
        "lex:TagResource",
        "lex:UntagResource",
        "lex:CreateBot",
        "lex:CreateBotLocale",
        "lex:CreateIntent",
        "lex:CreateSlot",
        "lex:CreateSlotType",
        "lex:UpdateBot",
        "lex:UpdateBotLocale",
        "lex:UpdateIntent",
        "lex:UpdateSlot",
        "lex:UpdateSlotType",
        "lex:DeleteBotLocale",
        "lex:DeleteIntent",
        "lex:DeleteSlot",
        "lex:DeleteSlotType",
        "lex:DescribeBotLocale",
        "lex:BuildBotLocale",
        "lex:ListBots",
        "lex:ListBotLocales",
        "lex:CreateCustomVocabulary",
        "lex:UpdateCustomVocabulary",
        "lex:DeleteCustomVocabulary",
        "s3:GetObject",
        "lex:UpdateBotAlias"
      ]
    },
    "delete": {
      "permissions": [
        "lex:DeleteBot",
        "lex:DescribeBot",
        "lex:DeleteBotLocale",
        "lex:DeleteIntent",
        "lex:DeleteSlotType",
        "lex:DeleteSlot",
        "lex:DeleteBotVersion",
        "lex:DeleteBotChannel",
        "lex:DeleteBotAlias",
        "lex:DeleteCustomVocabulary"
      ]
    },
    "list": {
      "permissions": [
        "lex:ListBots"
      ]
    }
  },
  "attributes": {
    "Id": {
      "$ref": "#/definitions/Id"
    },
    "Arn": {
      "$ref": "#/definitions/BotArn"
    }
  }
}