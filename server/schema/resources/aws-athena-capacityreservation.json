{
  "typeName": "AWS::Athena::CapacityReservation",
  "description": "Resource schema for AWS::Athena::CapacityReservation",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-athena.git",
  "definitions": {
    "Arn": {
      "description": "The Amazon Resource Name (ARN) of the specified capacity reservation",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the specified capacity reservation\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "WorkgroupName": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z0-9._-]{1,128}  \nUpdate requires: No interruption"
    },
    "WorkgroupNames": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/WorkgroupName"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "CapacityAssignment": {
      "type": "object",
      "properties": {
        "WorkgroupNames": {
          "$ref": "#/definitions/WorkgroupNames"
        }
      },
      "required": [
        "WorkgroupNames"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CapacityAssignments": {
      "description": "List of capacity assignments",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/CapacityAssignment"
      },
      "markdownDescription": "List of capacity assignments\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "CapacityAssignmentConfiguration": {
      "description": "Assignment configuration to assign workgroups to a reservation",
      "type": "object",
      "properties": {
        "CapacityAssignments": {
          "$ref": "#/definitions/CapacityAssignments"
        }
      },
      "required": [
        "CapacityAssignments"
      ],
      "additionalProperties": false,
      "markdownDescription": "Assignment configuration to assign workgroups to a reservation\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "CapacityReservationStatus": {
      "type": "string",
      "enum": [
        "PENDING",
        "ACTIVE",
        "CANCELLING",
        "CANCELLED",
        "FAILED",
        "UPDATE_PENDING"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: PENDING | ACTIVE | CANCELLING | CANCELLED | FAILED | UPDATE_PENDING  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Name": {
      "description": "The reservation name.",
      "type": "string",
      "markdownDescription": "The reservation name.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: [a-zA-Z0-9._-]{1,128}  \nUpdate requires: Replacement"
    },
    "TargetDpus": {
      "description": "The number of DPUs to request to be allocated to the reservation.",
      "type": "integer",
      "format": "int64",
      "minimum": 1,
      "markdownDescription": "The number of DPUs to request to be allocated to the reservation.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
    },
    "CapacityAssignmentConfiguration": {
      "$ref": "#/definitions/CapacityAssignmentConfiguration"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "required": [
    "Name",
    "TargetDpus"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/Status",
    "/properties/AllocatedDpus",
    "/properties/CreationTime",
    "/properties/LastSuccessfulAllocationTime"
  ],
  "createOnlyProperties": [
    "/properties/Name"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "additionalIdentifiers": [
    [
      "/properties/Name"
    ]
  ],
  "handlers": {
    "create": {
      "permissions": [
        "athena:CreateCapacityReservation",
        "athena:PutCapacityAssignmentConfiguration",
        "athena:GetCapacityReservation",
        "athena:TagResource"
      ],
      "timeoutInMinutes": 60
    },
    "read": {
      "permissions": [
        "athena:GetCapacityReservation",
        "athena:GetCapacityAssignmentConfiguration",
        "athena:ListTagsForResource"
      ],
      "timeoutInMinutes": 60
    },
    "update": {
      "permissions": [
        "athena:UpdateCapacityReservation",
        "athena:PutCapacityAssignmentConfiguration",
        "athena:GetCapacityReservation",
        "athena:TagResource",
        "athena:UntagResource"
      ],
      "timeoutInMinutes": 60
    },
    "delete": {
      "permissions": [
        "athena:CancelCapacityReservation",
        "athena:GetCapacityReservation",
        "athena:DeleteCapacityReservation"
      ],
      "timeoutInMinutes": 60
    },
    "list": {
      "permissions": [
        "athena:ListCapacityReservations",
        "athena:GetCapacityReservation"
      ],
      "timeoutInMinutes": 60
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "attributes": {
    "Arn": {
      "$ref": "#/definitions/Arn"
    },
    "Status": {
      "description": "The status of the reservation.",
      "$ref": "#/definitions/CapacityReservationStatus",
      "markdownDescription": "The status of the reservation.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "AllocatedDpus": {
      "description": "The number of DPUs Athena has provisioned and allocated for the reservation",
      "type": "integer",
      "format": "int64",
      "minimum": 0,
      "markdownDescription": "The number of DPUs Athena has provisioned and allocated for the reservation\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "CreationTime": {
      "description": "The date and time the reservation was created.",
      "type": "string",
      "markdownDescription": "The date and time the reservation was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "LastSuccessfulAllocationTime": {
      "description": "The timestamp when the last successful allocated was made",
      "type": "string",
      "markdownDescription": "The timestamp when the last successful allocated was made\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}