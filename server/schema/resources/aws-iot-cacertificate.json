{
  "typeName": "AWS::IoT::CACertificate",
  "description": "Registers a CA Certificate in IoT.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "RegistrationConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TemplateBody": {
          "type": "string",
          "minLength": 0,
          "maxLength": 10240,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 10240  \nPattern: [\\s\\S]*  \nUpdate requires: No interruption"
        },
        "RoleArn": {
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+  \nUpdate requires: No interruption"
        },
        "TemplateName": {
          "type": "string",
          "minLength": 1,
          "maxLength": 36,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 36  \nPattern: ^[0-9A-Za-z_-]+$  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 127,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "CACertificatePem": {
      "type": "string",
      "minLength": 1,
      "maxLength": 65536,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 65536  \nPattern: [\\s\\S]*  \nUpdate requires: Replacement"
    },
    "VerificationCertificatePem": {
      "type": "string",
      "description": "The private key verification certificate.",
      "minLength": 1,
      "maxLength": 65536,
      "markdownDescription": "The private key verification certificate.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 65536  \nPattern: [\\s\\S]*  \nUpdate requires: Replacement"
    },
    "Status": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: ACTIVE | INACTIVE  \nUpdate requires: No interruption"
    },
    "CertificateMode": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "SNI_ONLY"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DEFAULT | SNI_ONLY  \nUpdate requires: Replacement"
    },
    "AutoRegistrationStatus": {
      "type": "string",
      "enum": [
        "ENABLE",
        "DISABLE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENABLE | DISABLE  \nUpdate requires: No interruption"
    },
    "RemoveAutoRegistration": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "RegistrationConfig": {
      "$ref": "#/definitions/RegistrationConfig"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "additionalProperties": false,
  "required": [
    "CACertificatePem",
    "Status"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/Id"
  ],
  "createOnlyProperties": [
    "/properties/VerificationCertificatePem",
    "/properties/CertificateMode",
    "/properties/CACertificatePem"
  ],
  "writeOnlyProperties": [
    "/properties/VerificationCertificatePem",
    "/properties/RemoveAutoRegistration"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:GetRole",
        "iam:PassRole",
        "iot:RegisterCACertificate",
        "iot:DescribeCACertificate",
        "iot:TagResource",
        "iot:ListTagsForResource"
      ]
    },
    "read": {
      "permissions": [
        "iot:DescribeCACertificate",
        "iot:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iam:GetRole",
        "iam:PassRole",
        "iot:UpdateCACertificate",
        "iot:DescribeCACertificate",
        "iot:TagResource",
        "iot:UntagResource",
        "iot:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "iot:UpdateCACertificate",
        "iot:DeleteCACertificate",
        "iot:DescribeCACertificate"
      ]
    },
    "list": {
      "permissions": [
        "iot:ListCACertificates"
      ]
    }
  },
  "attributes": {
    "Id": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Arn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}