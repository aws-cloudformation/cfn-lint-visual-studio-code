{
  "typeName": "AWS::SageMaker::Pipeline",
  "description": "Resource Type definition for AWS::SageMaker::Pipeline",
  "additionalProperties": false,
  "properties": {
    "PipelineName": {
      "type": "string",
      "description": "The name of the Pipeline.",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The name of the Pipeline.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*  \nUpdate requires: Replacement\n"
    },
    "PipelineDisplayName": {
      "type": "string",
      "description": "The display name of the Pipeline.",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The display name of the Pipeline.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*  \nUpdate requires: No interruption\n"
    },
    "PipelineDescription": {
      "type": "string",
      "description": "The description of the Pipeline.",
      "minLength": 0,
      "maxLength": 3072,
      "markdownDescription": "The description of the Pipeline.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 3072  \nUpdate requires: No interruption\n"
    },
    "PipelineDefinition": {
      "type": "object",
      "oneOf": [
        {
          "additionalProperties": false,
          "properties": {
            "PipelineDefinitionBody": {
              "type": "string",
              "description": "A specification that defines the pipeline in JSON format."
            }
          },
          "required": [
            "PipelineDefinitionBody"
          ]
        },
        {
          "additionalProperties": false,
          "properties": {
            "PipelineDefinitionS3Location": {
              "$ref": "#/definitions/S3Location"
            }
          },
          "required": [
            "PipelineDefinitionS3Location"
          ]
        }
      ],
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nUpdate requires: No interruption\n"
    },
    "RoleArn": {
      "type": "string",
      "description": "Role Arn",
      "minLength": 20,
      "maxLength": 2048,
      "markdownDescription": "Role Arn\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "type": "array",
      "uniqueItems": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "ParallelismConfiguration": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MaxParallelExecutionSteps": {
          "description": "Maximum parallel execution steps",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "Maximum parallel execution steps\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "MaxParallelExecutionSteps"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "definitions": {
    "S3Location": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Bucket": {
          "description": "The name of the S3 bucket where the PipelineDefinition file is stored.",
          "type": "string",
          "markdownDescription": "The name of the S3 bucket where the PipelineDefinition file is stored.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Key": {
          "description": "The file name of the PipelineDefinition file (Amazon S3 object name).",
          "type": "string",
          "markdownDescription": "The file name of the PipelineDefinition file (Amazon S3 object name).\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Version": {
          "description": "For versioning-enabled buckets, a specific version of the PipelineDefinition file.",
          "type": "string",
          "markdownDescription": "For versioning-enabled buckets, a specific version of the PipelineDefinition file.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "ETag": {
          "description": "The Amazon S3 ETag (a file checksum) of the PipelineDefinition file. If you don't specify a value, SageMaker skips ETag validation of your PipelineDefinition file.",
          "type": "string",
          "markdownDescription": "The Amazon S3 ETag (a file checksum) of the PipelineDefinition file. If you don't specify a value, SageMaker skips ETag validation of your PipelineDefinition file.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Bucket",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Value": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Key": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Value",
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "required": [
    "PipelineName",
    "PipelineDefinition",
    "RoleArn"
  ],
  "createOnlyProperties": [
    "/properties/PipelineName"
  ],
  "primaryIdentifier": [
    "/properties/PipelineName"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "sagemaker:AddTags",
      "sagemaker:ListTags",
      "sagemaker:DeleteTags"
    ]
  },
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "s3:GetObject",
        "sagemaker:CreatePipeline",
        "sagemaker:DescribePipeline",
        "sagemaker:AddTags",
        "sagemaker:ListTags"
      ]
    },
    "read": {
      "permissions": [
        "sagemaker:DescribePipeline",
        "sagemaker:ListTags"
      ]
    },
    "update": {
      "permissions": [
        "iam:PassRole",
        "s3:GetObject",
        "sagemaker:UpdatePipeline",
        "sagemaker:DescribePipeline",
        "sagemaker:AddTags",
        "sagemaker:DeleteTags",
        "sagemaker:ListTags"
      ]
    },
    "delete": {
      "permissions": [
        "sagemaker:DeletePipeline"
      ]
    },
    "list": {
      "permissions": [
        "sagemaker:ListPipelines"
      ]
    }
  },
  "attributes": {}
}