{
  "typeName": "AWS::IoTTwinMaker::ComponentType",
  "description": "Resource schema for AWS::IoTTwinMaker::ComponentType",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-iottwinmaker",
  "definitions": {
    "DateTimeFormat": {
      "type": "string",
      "format": "date-time",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ParentComponentType": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z_\\.\\-0-9:]+  \nUpdate requires: No interruption"
    },
    "PropertyName": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z_\\-0-9]+  \nUpdate requires: No interruption"
    },
    "RequiredProperty": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: [a-zA-Z_\\-0-9]+  \nUpdate requires: No interruption"
    },
    "LambdaFunction": {
      "type": "object",
      "properties": {
        "Arn": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: arn:((aws)|(aws-cn)|(aws-us-gov)):lambda:[a-z0-9-]+:[0-9]{12}:function:[\\/a-zA-Z0-9_-]+  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "Arn"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataConnector": {
      "description": "The data connector.",
      "type": "object",
      "properties": {
        "IsNative": {
          "description": "A Boolean value that specifies whether the data connector is native to IoT TwinMaker.",
          "type": "boolean",
          "markdownDescription": "A Boolean value that specifies whether the data connector is native to IoT TwinMaker.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Lambda": {
          "description": "The Lambda function associated with this data connector.",
          "$ref": "#/definitions/LambdaFunction",
          "markdownDescription": "The Lambda function associated with this data connector.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The data connector.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Function": {
      "description": "The function of component type.",
      "type": "object",
      "properties": {
        "ImplementedBy": {
          "description": "The data connector.",
          "$ref": "#/definitions/DataConnector",
          "markdownDescription": "The data connector.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "RequiredProperties": {
          "description": "The required properties of the function.",
          "type": "array",
          "minItems": 1,
          "maxItems": 256,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/RequiredProperty"
          },
          "markdownDescription": "The required properties of the function.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "Scope": {
          "description": "The scope of the function.",
          "type": "string",
          "enum": [
            "ENTITY",
            "WORKSPACE"
          ],
          "markdownDescription": "The scope of the function.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ENTITY | WORKSPACE  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The function of component type.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataValue": {
      "description": "An object that specifies a value for a property.",
      "type": "object",
      "properties": {
        "BooleanValue": {
          "description": "A Boolean value.",
          "type": "boolean",
          "markdownDescription": "A Boolean value.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "DoubleValue": {
          "description": "A double value.",
          "type": "number",
          "markdownDescription": "A double value.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "Expression": {
          "description": "An expression that produces the value.",
          "type": "string",
          "minLength": 1,
          "maxLength": 316,
          "markdownDescription": "An expression that produces the value.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 316  \nPattern: (^\\$\\{Parameters\\.[a-zA-z]+([a-zA-z_0-9]*)}$)  \nUpdate requires: No interruption"
        },
        "IntegerValue": {
          "description": "An integer value.",
          "type": "integer",
          "markdownDescription": "An integer value.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "ListValue": {
          "description": "A list of multiple values.",
          "type": "array",
          "minItems": 0,
          "maxItems": 50,
          "uniqueItems": false,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/DataValue"
          },
          "markdownDescription": "A list of multiple values.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "LongValue": {
          "description": "A long value.",
          "type": "number",
          "markdownDescription": "A long value.\n\n---\n\nRequired: No  \nType: Number  \nUpdate requires: No interruption"
        },
        "StringValue": {
          "description": "A string value.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "A string value.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "MapValue": {
          "description": "An object that maps strings to multiple DataValue objects. \n\n",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z_\\-0-9]+": {
              "$ref": "#/definitions/DataValue"
            }
          },
          "additionalProperties": false,
          "markdownDescription": "An object that maps strings to multiple DataValue objects. \n\n\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        },
        "RelationshipValue": {
          "description": "A value that relates a component to another component.",
          "type": "object",
          "properties": {
            "TargetComponentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: [a-zA-Z_\\-0-9]+  \nUpdate requires: No interruption"
            },
            "TargetEntityId": {
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: [0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}|^[a-zA-Z0-9][a-zA-Z_\\-0-9.:]*[a-zA-Z0-9]+  \nUpdate requires: No interruption"
            }
          },
          "additionalProperties": false,
          "markdownDescription": "A value that relates a component to another component.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An object that specifies a value for a property.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Relationship": {
      "description": "The type of the relationship.",
      "type": "object",
      "properties": {
        "RelationshipType": {
          "description": "The type of the relationship.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The type of the relationship.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "TargetComponentTypeId": {
          "description": "The ID of the target component type associated with this relationship.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The ID of the target component type associated with this relationship.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: [a-zA-Z_\\.\\-0-9:]+  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The type of the relationship.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataType": {
      "description": "An object that specifies the data type of a property.",
      "type": "object",
      "properties": {
        "AllowedValues": {
          "description": "The allowed values for this data type.",
          "type": "array",
          "minItems": 0,
          "maxItems": 50,
          "uniqueItems": false,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/DataValue"
          },
          "markdownDescription": "The allowed values for this data type.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "NestedType": {
          "description": "The nested type in the data type.",
          "$ref": "#/definitions/DataType",
          "markdownDescription": "The nested type in the data type.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Relationship": {
          "description": "A relationship that associates a component with another component.",
          "$ref": "#/definitions/Relationship",
          "markdownDescription": "A relationship that associates a component with another component.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "Type": {
          "description": "The underlying type of the data type.",
          "type": "string",
          "enum": [
            "RELATIONSHIP",
            "STRING",
            "LONG",
            "BOOLEAN",
            "INTEGER",
            "DOUBLE",
            "LIST",
            "MAP"
          ],
          "markdownDescription": "The underlying type of the data type.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: RELATIONSHIP | STRING | LONG | BOOLEAN | INTEGER | DOUBLE | LIST | MAP  \nUpdate requires: No interruption"
        },
        "UnitOfMeasure": {
          "description": "The unit of measure used in this data type.",
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The unit of measure used in this data type.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "required": [
        "Type"
      ],
      "markdownDescription": "An object that specifies the data type of a property.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PropertyDefinition": {
      "description": "An object that sets information about a property.",
      "type": "object",
      "properties": {
        "Configurations": {
          "description": "An object that specifies information about a property.",
          "type": "object",
          "patternProperties": {
            "[a-zA-Z_\\-0-9]+": {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: [a-zA-Z_\\-0-9]+  \nUpdate requires: No interruption"
            }
          },
          "additionalProperties": false,
          "markdownDescription": "An object that specifies information about a property.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        },
        "DataType": {
          "description": "An object that contains information about the data type.",
          "$ref": "#/definitions/DataType",
          "markdownDescription": "An object that contains information about the data type.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "DefaultValue": {
          "description": "An object that contains the default value.",
          "$ref": "#/definitions/DataValue",
          "markdownDescription": "An object that contains the default value.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        },
        "IsExternalId": {
          "description": "A Boolean value that specifies whether the property ID comes from an external data store.",
          "type": "boolean",
          "markdownDescription": "A Boolean value that specifies whether the property ID comes from an external data store.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IsRequiredInEntity": {
          "description": "A Boolean value that specifies whether the property is required.",
          "type": "boolean",
          "markdownDescription": "A Boolean value that specifies whether the property is required.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IsStoredExternally": {
          "description": "A Boolean value that specifies whether the property is stored externally.",
          "type": "boolean",
          "markdownDescription": "A Boolean value that specifies whether the property is stored externally.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "IsTimeSeries": {
          "description": "A Boolean value that specifies whether the property consists of time series data.",
          "type": "boolean",
          "markdownDescription": "A Boolean value that specifies whether the property consists of time series data.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An object that sets information about a property.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PropertyGroup": {
      "description": "An object that sets information about a property group.",
      "type": "object",
      "properties": {
        "GroupType": {
          "description": "The type of property group.",
          "type": "string",
          "enum": [
            "TABULAR"
          ],
          "markdownDescription": "The type of property group.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: TABULAR  \nUpdate requires: No interruption"
        },
        "PropertyNames": {
          "description": "The list of property names in the property group.",
          "type": "array",
          "minItems": 1,
          "maxItems": 256,
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/PropertyName"
          },
          "markdownDescription": "The list of property names in the property group.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An object that sets information about a property group.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Status": {
      "type": "object",
      "properties": {
        "State": {
          "type": "string",
          "enum": [
            "CREATING",
            "UPDATING",
            "DELETING",
            "ACTIVE",
            "ERROR"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATING | UPDATING | DELETING | ACTIVE | ERROR  \nUpdate requires: No interruption"
        },
        "Error": {
          "type": "object",
          "anyOf": [
            {
              "description": "Empty Error object.",
              "type": "object",
              "additionalProperties": false
            },
            {
              "description": "Error object with Message and Code.",
              "type": "object",
              "properties": {
                "Message": {
                  "type": "string",
                  "minLength": 0,
                  "maxLength": 2048
                },
                "Code": {
                  "type": "string",
                  "enum": [
                    "VALIDATION_ERROR",
                    "INTERNAL_FAILURE"
                  ]
                }
              },
              "additionalProperties": false
            }
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "WorkspaceId": {
      "description": "The ID of the workspace that contains the component type.",
      "type": "string",
      "minLength": 1,
      "maxLength": 128,
      "markdownDescription": "The ID of the workspace that contains the component type.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: [a-zA-Z_0-9][a-zA-Z_\\-0-9]*[a-zA-Z0-9]+  \nUpdate requires: Replacement"
    },
    "ComponentTypeId": {
      "description": "The ID of the component type.",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The ID of the component type.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: [a-zA-Z_\\.\\-0-9:]+  \nUpdate requires: Replacement"
    },
    "Description": {
      "description": "The description of the component type.",
      "type": "string",
      "minLength": 0,
      "maxLength": 512,
      "markdownDescription": "The description of the component type.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 512  \nUpdate requires: No interruption"
    },
    "ExtendsFrom": {
      "description": "Specifies the parent component type to extend.",
      "type": "array",
      "minItems": 1,
      "maxItems": 256,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/ParentComponentType"
      },
      "markdownDescription": "Specifies the parent component type to extend.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Functions": {
      "description": "a Map of functions in the component type. Each function's key must be unique to this map.",
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "[a-zA-Z_\\-0-9]+": {
          "$ref": "#/definitions/Function"
        }
      },
      "markdownDescription": "a Map of functions in the component type. Each function's key must be unique to this map.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "IsSingleton": {
      "description": "A Boolean value that specifies whether an entity can have more than one component of this type.",
      "type": "boolean",
      "markdownDescription": "A Boolean value that specifies whether an entity can have more than one component of this type.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "PropertyDefinitions": {
      "description": "An map of the property definitions in the component type. Each property definition's key must be unique to this map.",
      "type": "object",
      "patternProperties": {
        "[a-zA-Z_\\-0-9]+": {
          "$ref": "#/definitions/PropertyDefinition"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An map of the property definitions in the component type. Each property definition's key must be unique to this map.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "PropertyGroups": {
      "description": "An map of the property groups in the component type. Each property group's key must be unique to this map.",
      "type": "object",
      "patternProperties": {
        "[a-zA-Z_\\-0-9]+": {
          "$ref": "#/definitions/PropertyGroup"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An map of the property groups in the component type. Each property group's key must be unique to this map.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "object",
      "description": "A map of key-value pairs to associate with a resource.",
      "patternProperties": {
        ".*": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "maxProperties": 50,
      "additionalProperties": false,
      "markdownDescription": "A map of key-value pairs to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "required": [
    "WorkspaceId",
    "ComponentTypeId"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreationDateTime",
    "/properties/UpdateDateTime",
    "/properties/Status",
    "/properties/IsAbstract",
    "/properties/IsSchemaInitialized"
  ],
  "createOnlyProperties": [
    "/properties/WorkspaceId",
    "/properties/ComponentTypeId"
  ],
  "primaryIdentifier": [
    "/properties/WorkspaceId",
    "/properties/ComponentTypeId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iottwinmaker:CreateComponentType",
        "iottwinmaker:GetComponentType",
        "iottwinmaker:GetWorkspace",
        "iottwinmaker:ListTagsForResource",
        "iottwinmaker:TagResource"
      ]
    },
    "read": {
      "permissions": [
        "iottwinmaker:GetComponentType",
        "iottwinmaker:GetWorkspace",
        "iottwinmaker:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iottwinmaker:GetComponentType",
        "iottwinmaker:GetWorkspace",
        "iottwinmaker:ListTagsForResource",
        "iottwinmaker:TagResource",
        "iottwinmaker:UntagResource",
        "iottwinmaker:UpdateComponentType"
      ]
    },
    "delete": {
      "permissions": [
        "iottwinmaker:DeleteComponentType",
        "iottwinmaker:GetComponentType",
        "iottwinmaker:GetWorkspace"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "WorkspaceId": {
            "type": "string",
            "$ref": "resource-schema.json#/properties/WorkspaceId",
            "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
          }
        },
        "required": [
          "WorkspaceId"
        ]
      },
      "permissions": [
        "iottwinmaker:GetComponentType",
        "iottwinmaker:GetWorkspace",
        "iottwinmaker:ListComponentTypes",
        "iottwinmaker:ListTagsForResource"
      ]
    }
  },
  "attributes": {
    "Arn": {
      "description": "The ARN of the component type.",
      "type": "string",
      "minLength": 20,
      "maxLength": 2048,
      "markdownDescription": "The ARN of the component type.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: arn:((aws)|(aws-cn)|(aws-us-gov)):iottwinmaker:[a-z0-9-]+:[0-9]{12}:[\\/a-zA-Z0-9_\\-\\.:]+  \nUpdate requires: No interruption"
    },
    "CreationDateTime": {
      "description": "The date and time when the component type was created.",
      "$ref": "#/definitions/DateTimeFormat",
      "markdownDescription": "The date and time when the component type was created.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "UpdateDateTime": {
      "description": "The last date and time when the component type was updated.",
      "$ref": "#/definitions/DateTimeFormat",
      "markdownDescription": "The last date and time when the component type was updated.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Status": {
      "description": "The current status of the component type.",
      "$ref": "#/definitions/Status",
      "markdownDescription": "The current status of the component type.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "IsAbstract": {
      "description": "A Boolean value that specifies whether the component type is abstract.",
      "type": "boolean",
      "markdownDescription": "A Boolean value that specifies whether the component type is abstract.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "IsSchemaInitialized": {
      "description": "A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.",
      "type": "boolean",
      "markdownDescription": "A Boolean value that specifies whether the component type has a schema initializer and that the schema initializer has run.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    }
  }
}