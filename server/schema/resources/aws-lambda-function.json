{
  "handlers": {
    "read": {
      "permissions": [
        "lambda:GetFunction",
        "lambda:GetFunctionCodeSigningConfig"
      ]
    },
    "create": {
      "permissions": [
        "lambda:CreateFunction",
        "lambda:GetFunction",
        "lambda:PutFunctionConcurrency",
        "iam:PassRole",
        "s3:GetObject",
        "s3:GetObjectVersion",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "kms:Decrypt",
        "lambda:GetCodeSigningConfig",
        "lambda:GetFunctionCodeSigningConfig"
      ]
    },
    "update": {
      "permissions": [
        "lambda:DeleteFunctionConcurrency",
        "lambda:GetFunction",
        "lambda:PutFunctionConcurrency",
        "lambda:ListTags",
        "lambda:TagResource",
        "lambda:UntagResource",
        "lambda:UpdateFunctionConfiguration",
        "lambda:UpdateFunctionCode",
        "iam:PassRole",
        "s3:GetObject",
        "s3:GetObjectVersion",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeVpcs",
        "kms:Decrypt",
        "lambda:PutFunctionCodeSigningConfig",
        "lambda:DeleteFunctionCodeSigningConfig",
        "lambda:GetCodeSigningConfig",
        "lambda:GetFunctionCodeSigningConfig"
      ]
    },
    "list": {
      "permissions": [
        "lambda:ListFunctions"
      ]
    },
    "delete": {
      "permissions": [
        "lambda:DeleteFunction",
        "ec2:DescribeNetworkInterfaces"
      ]
    }
  },
  "typeName": "AWS::Lambda::Function",
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/SnapStartResponse",
    "/properties/SnapStartResponse/ApplyOn",
    "/properties/SnapStartResponse/OptimizationStatus"
  ],
  "description": "Resource Type definition for AWS::Lambda::Function",
  "writeOnlyProperties": [
    "/properties/Code",
    "/properties/Code/ImageUri",
    "/properties/Code/S3Bucket",
    "/properties/Code/S3Key",
    "/properties/Code/S3ObjectVersion",
    "/properties/Code/ZipFile"
  ],
  "createOnlyProperties": [
    "/properties/FunctionName"
  ],
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/FunctionName"
  ],
  "definitions": {
    "ImageConfig": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "WorkingDirectory": {
          "description": "WorkingDirectory.",
          "type": "string",
          "markdownDescription": "WorkingDirectory.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Command": {
          "maxItems": 1500,
          "uniqueItems": true,
          "description": "Command.",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "Command.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "EntryPoint": {
          "maxItems": 1500,
          "uniqueItems": true,
          "description": "EntryPoint.",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "EntryPoint.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TracingConfig": {
      "description": "The function's AWS X-Ray tracing configuration. To sample and record incoming requests, set Mode to Active.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Mode": {
          "description": "The tracing mode.",
          "type": "string",
          "enum": [
            "Active",
            "PassThrough"
          ],
          "markdownDescription": "The tracing mode.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Active | PassThrough  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The function's AWS X-Ray tracing configuration. To sample and record incoming requests, set Mode to Active.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "VpcConfig": {
      "description": "The VPC security groups and subnets that are attached to a Lambda function. When you connect a function to a VPC, Lambda creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration. The function can only access resources and the internet through that VPC.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "SecurityGroupIds": {
          "maxItems": 5,
          "uniqueItems": false,
          "description": "A list of VPC security groups IDs.",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "A list of VPC security groups IDs.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SubnetIds": {
          "maxItems": 16,
          "uniqueItems": false,
          "description": "A list of VPC subnet IDs.",
          "type": "array",
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
          },
          "markdownDescription": "A list of VPC subnet IDs.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The VPC security groups and subnets that are attached to a Lambda function. When you connect a function to a VPC, Lambda creates an elastic network interface for each combination of security group and subnet in the function's VPC configuration. The function can only access resources and the internet through that VPC.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DeadLetterConfig": {
      "description": "The dead-letter queue for failed asynchronous invocations.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "TargetArn": {
          "description": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.",
          "type": "string",
          "markdownDescription": "The Amazon Resource Name (ARN) of an Amazon SQS queue or Amazon SNS topic.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The dead-letter queue for failed asynchronous invocations.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Environment": {
      "description": "A function's environment variable settings.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Variables": {
          "patternProperties": {
            "[a-zA-Z][a-zA-Z0-9_]+": {
              "type": "string",
              "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
            }
          },
          "description": "Environment variable key-value pairs.",
          "additionalProperties": false,
          "type": "object",
          "markdownDescription": "Environment variable key-value pairs.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "A function's environment variable settings.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FileSystemConfig": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Arn": {
          "description": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.",
          "type": "string",
          "maxLength": 200,
          "markdownDescription": "The Amazon Resource Name (ARN) of the Amazon EFS access point that provides access to the file system.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 200  \nPattern: ^arn:aws[a-zA-Z-]*:elasticfilesystem:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:access-point/fsap-[a-f0-9]{17}$  \nUpdate requires: No interruption"
        },
        "LocalMountPath": {
          "description": "The path where the function can access the file system, starting with /mnt/.",
          "type": "string",
          "maxLength": 160,
          "markdownDescription": "The path where the function can access the file system, starting with /mnt/.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 160  \nPattern: ^/mnt/[a-zA-Z0-9-_.]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Arn",
        "LocalMountPath"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Value": {
          "minLength": 0,
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Key": {
          "minLength": 1,
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "type": "string",
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "EphemeralStorage": {
      "description": "A function's ephemeral storage settings.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "Size": {
          "description": "The amount of ephemeral storage that your function has access to.",
          "maximum": 10240,
          "type": "integer",
          "minimum": 512,
          "markdownDescription": "The amount of ephemeral storage that your function has access to.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Size"
      ],
      "markdownDescription": "A function's ephemeral storage settings.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SnapStart": {
      "description": "The function's SnapStart setting. When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "ApplyOn": {
          "description": "Applying SnapStart setting on function resource type.",
          "type": "string",
          "enum": [
            "PublishedVersions",
            "None"
          ],
          "markdownDescription": "Applying SnapStart setting on function resource type.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: PublishedVersions | None  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ApplyOn"
      ],
      "markdownDescription": "The function's SnapStart setting. When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SnapStartResponse": {
      "description": "The function's SnapStart Response. When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.",
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "OptimizationStatus": {
          "description": "Indicates whether SnapStart is activated for the specified function version.",
          "type": "string",
          "enum": [
            "On",
            "Off"
          ],
          "markdownDescription": "Indicates whether SnapStart is activated for the specified function version.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: On | Off  \nUpdate requires: No interruption"
        },
        "ApplyOn": {
          "description": "Applying SnapStart setting on function resource type.",
          "type": "string",
          "enum": [
            "PublishedVersions",
            "None"
          ],
          "markdownDescription": "Applying SnapStart setting on function resource type.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: PublishedVersions | None  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "The function's SnapStart Response. When set to PublishedVersions, Lambda creates a snapshot of the execution environment when you publish a function version.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Code": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "S3ObjectVersion": {
          "minLength": 1,
          "description": "For versioned objects, the version of the deployment package object to use.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "For versioned objects, the version of the deployment package object to use.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "S3Bucket": {
          "minLength": 3,
          "description": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.",
          "type": "string",
          "maxLength": 63,
          "markdownDescription": "An Amazon S3 bucket in the same AWS Region as your function. The bucket can be in a different AWS account.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 63  \nPattern: ^[0-9A-Za-z\\.\\-_]*(?<!\\.)$  \nUpdate requires: No interruption"
        },
        "ZipFile": {
          "description": "The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..",
          "type": "string",
          "markdownDescription": "The source code of your Lambda function. If you include your function source inline with this parameter, AWS CloudFormation places it in a file named index and zips it to create a deployment package..\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "S3Key": {
          "minLength": 1,
          "description": "The Amazon S3 key of the deployment package.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 key of the deployment package.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "ImageUri": {
          "description": "ImageUri.",
          "type": "string",
          "markdownDescription": "ImageUri.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "Code",
    "Role"
  ],
  "properties": {
    "Description": {
      "description": "A description of the function.",
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "A description of the function.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
    },
    "TracingConfig": {
      "description": "Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.",
      "$ref": "#/definitions/TracingConfig",
      "markdownDescription": "Set Mode to Active to sample and trace a subset of incoming requests with AWS X-Ray.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "VpcConfig": {
      "description": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.",
      "$ref": "#/definitions/VpcConfig",
      "markdownDescription": "For network connectivity to AWS resources in a VPC, specify a list of security groups and subnets in the VPC.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "ReservedConcurrentExecutions": {
      "description": "The number of simultaneous executions to reserve for the function.",
      "type": "integer",
      "minimum": 0,
      "markdownDescription": "The number of simultaneous executions to reserve for the function.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "SnapStart": {
      "description": "The SnapStart setting of your function",
      "$ref": "#/definitions/SnapStart",
      "markdownDescription": "The SnapStart setting of your function\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "FileSystemConfigs": {
      "maxItems": 1,
      "description": "Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/FileSystemConfig"
      },
      "markdownDescription": "Connection settings for an Amazon EFS file system. To connect a function to a file system, a mount target must be available in every Availability Zone that your function connects to. If your template contains an AWS::EFS::MountTarget resource, you must also specify a DependsOn attribute to ensure that the mount target is created or updated before the function.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "FunctionName": {
      "minLength": 1,
      "description": "The name of the Lambda function, up to 64 characters in length. If you don't specify a name, AWS CloudFormation generates one.",
      "type": "string",
      "markdownDescription": "The name of the Lambda function, up to 64 characters in length. If you don't specify a name, AWS CloudFormation generates one.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nUpdate requires: Replacement"
    },
    "Runtime": {
      "description": "The identifier of the function's runtime.",
      "type": "string",
      "markdownDescription": "The identifier of the function's runtime.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "KmsKeyArn": {
      "description": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.",
      "type": "string",
      "markdownDescription": "The ARN of the AWS Key Management Service (AWS KMS) key that's used to encrypt your function's environment variables. If it's not provided, AWS Lambda uses a default service key.\n\n---\n\nRequired: No  \nType: String  \nPattern: ^(arn:(aws[a-zA-Z-]*)?:[a-z0-9-.]+:.*)|()$  \nUpdate requires: No interruption"
    },
    "PackageType": {
      "description": "PackageType.",
      "type": "string",
      "enum": [
        "Image",
        "Zip"
      ],
      "markdownDescription": "PackageType.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Image | Zip  \nUpdate requires: No interruption"
    },
    "CodeSigningConfigArn": {
      "description": "A unique Arn for CodeSigningConfig resource",
      "type": "string",
      "markdownDescription": "A unique Arn for CodeSigningConfig resource\n\n---\n\nRequired: No  \nType: String  \nPattern: arn:(aws[a-zA-Z-]*)?:lambda:[a-z]{2}((-gov)|(-iso(b?)))?-[a-z]+-\\d{1}:\\d{12}:code-signing-config:csc-[a-z0-9]{17}  \nUpdate requires: No interruption"
    },
    "Layers": {
      "uniqueItems": false,
      "description": "A list of function layers to add to the function's execution environment. Specify each layer by its ARN, including the version.",
      "type": "array",
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
      },
      "markdownDescription": "A list of function layers to add to the function's execution environment. Specify each layer by its ARN, including the version.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tags": {
      "uniqueItems": true,
      "description": "A list of tags to apply to the function.",
      "insertionOrder": false,
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "A list of tags to apply to the function.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ImageConfig": {
      "description": "ImageConfig",
      "$ref": "#/definitions/ImageConfig",
      "markdownDescription": "ImageConfig\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "MemorySize": {
      "description": "The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.",
      "type": "integer",
      "markdownDescription": "The amount of memory that your function has access to. Increasing the function's memory also increases its CPU allocation. The default value is 128 MB. The value must be a multiple of 64 MB.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "DeadLetterConfig": {
      "description": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.",
      "$ref": "#/definitions/DeadLetterConfig",
      "markdownDescription": "A dead letter queue configuration that specifies the queue or topic where Lambda sends asynchronous events when they fail processing.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Timeout": {
      "description": "The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.",
      "type": "integer",
      "minimum": 1,
      "markdownDescription": "The amount of time that Lambda allows a function to run before stopping it. The default is 3 seconds. The maximum allowed value is 900 seconds.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Handler": {
      "description": "The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime",
      "type": "string",
      "maxLength": 128,
      "markdownDescription": "The name of the method within your code that Lambda calls to execute your function. The format includes the file name. It can also include namespaces and other qualifiers, depending on the runtime\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 128  \nPattern: ^[^\\s]+$  \nUpdate requires: No interruption"
    },
    "Code": {
      "description": "The code for the function.",
      "$ref": "#/definitions/Code",
      "markdownDescription": "The code for the function.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption"
    },
    "Role": {
      "description": "The Amazon Resource Name (ARN) of the function's execution role.",
      "type": "string",
      "markdownDescription": "The Amazon Resource Name (ARN) of the function's execution role.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$  \nUpdate requires: No interruption"
    },
    "Environment": {
      "description": "Environment variables that are accessible from function code during execution.",
      "$ref": "#/definitions/Environment",
      "markdownDescription": "Environment variables that are accessible from function code during execution.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "EphemeralStorage": {
      "description": "A function's ephemeral storage settings.",
      "$ref": "#/definitions/EphemeralStorage",
      "markdownDescription": "A function's ephemeral storage settings.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Architectures": {
      "minItems": 1,
      "maxItems": 1,
      "uniqueItems": true,
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "x86_64",
          "arm64"
        ],
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: x86_64 | arm64  \nUpdate requires: No interruption"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "attributes": {
    "SnapStartResponse": {
      "description": "The SnapStart response of your function",
      "$ref": "#/definitions/SnapStartResponse",
      "markdownDescription": "The SnapStart response of your function\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
    },
    "Arn": {
      "description": "Unique identifier for function resources",
      "type": "string",
      "markdownDescription": "Unique identifier for function resources\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  }
}