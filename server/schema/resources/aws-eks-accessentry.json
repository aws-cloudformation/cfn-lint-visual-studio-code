{
  "typeName": "AWS::EKS::AccessEntry",
  "description": "An object representing an Amazon EKS AccessEntry.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-eks.git",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AccessPolicy": {
      "description": "An access policy to associate with the current access entry.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "PolicyArn": {
          "type": "string",
          "description": "The ARN of the access policy to add to the access entry.",
          "markdownDescription": "The ARN of the access policy to add to the access entry.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "AccessScope": {
          "$ref": "#/definitions/AccessScope"
        }
      },
      "required": [
        "PolicyArn",
        "AccessScope"
      ],
      "markdownDescription": "An access policy to associate with the current access entry.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "AccessScope": {
      "description": "The access scope of the access policy.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Type": {
          "description": "The type of the access scope.",
          "type": "string",
          "enum": [
            "namespace",
            "cluster"
          ],
          "markdownDescription": "The type of the access scope.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: namespace | cluster  \nUpdate requires: No interruption\n"
        },
        "Namespaces": {
          "description": "The namespaces to associate with the access scope. Only specify if Type is set to 'namespace'.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "type": "string",
            "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
          },
          "markdownDescription": "The namespaces to associate with the access scope. Only specify if Type is set to 'namespace'.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Type"
      ],
      "markdownDescription": "The access scope of the access policy.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "ClusterName": {
      "description": "The cluster that the access entry is created for.",
      "type": "string",
      "minLength": 1,
      "markdownDescription": "The cluster that the access entry is created for.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nUpdate requires: Replacement\n"
    },
    "PrincipalArn": {
      "description": "The principal ARN that the access entry is created for.",
      "type": "string",
      "minLength": 1,
      "markdownDescription": "The principal ARN that the access entry is created for.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nUpdate requires: Replacement\n"
    },
    "Username": {
      "description": "The Kubernetes user that the access entry is associated with.",
      "type": "string",
      "markdownDescription": "The Kubernetes user that the access entry is associated with.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "AccessEntryArn": {
      "description": "The ARN of the access entry.",
      "type": "string",
      "markdownDescription": "The ARN of the access entry.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "KubernetesGroups": {
      "description": "The Kubernetes groups that the access entry is associated with.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "type": "string",
        "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
      },
      "markdownDescription": "The Kubernetes groups that the access entry is associated with.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "AccessPolicies": {
      "description": "An array of access policies that are associated with the access entry.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/AccessPolicy"
      },
      "maxItems": 20,
      "markdownDescription": "An array of access policies that are associated with the access entry.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Type": {
      "description": "The node type to associate with the access entry.",
      "type": "string",
      "markdownDescription": "The node type to associate with the access entry.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: Replacement\n"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "eks:TagResource",
      "eks:UntagResource"
    ]
  },
  "additionalProperties": false,
  "required": [
    "PrincipalArn",
    "ClusterName"
  ],
  "primaryIdentifier": [
    "/properties/PrincipalArn",
    "/properties/ClusterName"
  ],
  "createOnlyProperties": [
    "/properties/PrincipalArn",
    "/properties/ClusterName",
    "/properties/Type"
  ],
  "readOnlyProperties": [
    "/properties/AccessEntryArn"
  ],
  "replacementStrategy": "create_then_delete",
  "handlers": {
    "create": {
      "permissions": [
        "eks:CreateAccessEntry",
        "eks:DescribeAccessEntry",
        "eks:AssociateAccessPolicy",
        "eks:TagResource",
        "eks:ListAssociatedAccessPolicies"
      ]
    },
    "read": {
      "permissions": [
        "eks:DescribeAccessEntry",
        "eks:ListAssociatedAccessPolicies"
      ]
    },
    "update": {
      "permissions": [
        "eks:DescribeAccessEntry",
        "eks:ListAssociatedAccessPolicies",
        "eks:UpdateAccessEntry",
        "eks:AssociateAccessPolicy",
        "eks:DisassociateAccessPolicy",
        "eks:TagResource",
        "eks:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "eks:DeleteAccessEntry",
        "eks:DescribeAccessEntry"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "ClusterName": {
            "$ref": "resource-schema.json#/properties/ClusterName"
          }
        },
        "required": [
          "ClusterName"
        ]
      },
      "permissions": [
        "eks:ListAccessEntries"
      ]
    }
  },
  "attributes": {
    "AccessEntryArn": {
      "description": "The ARN of the access entry.",
      "type": "string",
      "markdownDescription": "The ARN of the access entry.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}