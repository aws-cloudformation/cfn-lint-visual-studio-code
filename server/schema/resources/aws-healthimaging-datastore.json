{
  "typeName": "AWS::HealthImaging::Datastore",
  "description": "Definition of AWS::HealthImaging::Datastore Resource Type",
  "definitions": {
    "DatastoreArn": {
      "type": "string",
      "maxLength": 127,
      "minLength": 1,
      "description": "The Datastore's ARN.",
      "markdownDescription": "The Datastore's ARN.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 127  \nPattern: ^arn:aws((-us-gov)|(-iso)|(-iso-b)|(-cn))?:medical-imaging:[a-z0-9-]+:[0-9]{12}:datastore/[0-9a-z]{32}(/imageset/[0-9a-z]{32})?$  \nUpdate requires: No interruption\n"
    },
    "DatastoreName": {
      "type": "string",
      "maxLength": 256,
      "minLength": 1,
      "description": "User friendly name for Datastore.",
      "markdownDescription": "User friendly name for Datastore.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[A-Za-z0-9._/#-]+$  \nUpdate requires: No interruption\n"
    },
    "DatastoreId": {
      "type": "string",
      "maxLength": 32,
      "minLength": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 32  \nPattern: ^[0-9a-z]{32}$  \nUpdate requires: No interruption\n"
    },
    "DatastoreStatus": {
      "type": "string",
      "maxLength": 127,
      "minLength": 1,
      "description": "A string to denote the Datastore's state.",
      "enum": [
        "CREATING",
        "CREATE_FAILED",
        "ACTIVE",
        "DELETING",
        "DELETED"
      ],
      "markdownDescription": "A string to denote the Datastore's state.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATING | CREATE_FAILED | ACTIVE | DELETING | DELETED  \nMinimum Length: 1  \nMaximum Length: 127  \nUpdate requires: No interruption\n"
    },
    "KmsKeyArn": {
      "type": "string",
      "maxLength": 512,
      "minLength": 1,
      "description": "ARN referencing a KMS key or KMS key alias.",
      "markdownDescription": "ARN referencing a KMS key or KMS key alias.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 512  \nUpdate requires: No interruption\n"
    },
    "CreatedAt": {
      "type": "string",
      "description": "The timestamp when the data store was created.",
      "markdownDescription": "The timestamp when the data store was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "UpdatedAt": {
      "type": "string",
      "description": "The timestamp when the data store was created.",
      "markdownDescription": "The timestamp when the data store was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "type": "object",
      "description": "A Map of key value pairs for Tags.",
      "patternProperties": {
        "^.+$": {
          "type": "string",
          "description": "The string value for the tag.",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "The string value for the tag.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "A Map of key value pairs for Tags.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "DatastoreArn": {
      "$ref": "#/definitions/DatastoreArn"
    },
    "DatastoreName": {
      "$ref": "#/definitions/DatastoreName"
    },
    "DatastoreId": {
      "$ref": "#/definitions/DatastoreId"
    },
    "DatastoreStatus": {
      "$ref": "#/definitions/DatastoreStatus"
    },
    "KmsKeyArn": {
      "$ref": "#/definitions/KmsKeyArn"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "required": [],
  "readOnlyProperties": [
    "/properties/DatastoreArn",
    "/properties/CreatedAt",
    "/properties/UpdatedAt",
    "/properties/DatastoreId",
    "/properties/DatastoreStatus"
  ],
  "createOnlyProperties": [
    "/properties/DatastoreName",
    "/properties/Tags",
    "/properties/KmsKeyArn"
  ],
  "primaryIdentifier": [
    "/properties/DatastoreId"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "medical-imaging:TagResource",
      "medical-imaging:UntagResource",
      "medical-imaging:ListTagsForResource"
    ]
  },
  "handlers": {
    "create": {
      "permissions": [
        "medical-imaging:CreateDatastore",
        "medical-imaging:GetDatastore",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:RetireGrant",
        "kms:GenerateDataKey",
        "kms:Decrypt",
        "lambda:InvokeFunction",
        "medical-imaging:TagResource",
        "medical-imaging:UntagResource",
        "medical-imaging:ListTagsForResource"
      ]
    },
    "read": {
      "permissions": [
        "medical-imaging:GetDatastore",
        "medical-imaging:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "medical-imaging:DeleteDatastore",
        "medical-imaging:GetDatastore",
        "medical-imaging:UntagResource",
        "kms:DescribeKey",
        "kms:RetireGrant",
        "kms:GenerateDataKey",
        "kms:Decrypt"
      ]
    },
    "list": {
      "permissions": [
        "medical-imaging:ListDatastores"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "DatastoreArn": {
      "$ref": "#/definitions/DatastoreArn"
    },
    "DatastoreId": {
      "$ref": "#/definitions/DatastoreId"
    },
    "DatastoreStatus": {
      "$ref": "#/definitions/DatastoreStatus"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    }
  }
}