{
  "typeName": "AWS::Logs::AccountPolicy",
  "description": "The AWS::Logs::AccountPolicy resource specifies a CloudWatch Logs AccountPolicy.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-logs.git",
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false
  },
  "replacementStrategy": "delete_then_create",
  "properties": {
    "AccountId": {
      "description": "User account id",
      "type": "string",
      "markdownDescription": "User account id\n\n---\n\nRequired: No  \nType: String  \nPattern: ^\\d{12}$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "PolicyName": {
      "description": "The name of the account policy",
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "The name of the account policy\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[^:*]{1,256}$  \nUpdate requires: Replacement\n"
    },
    "PolicyDocument": {
      "description": "The body of the policy document you want to use for this topic.\n\nYou can only add one policy per PolicyType.\n\nThe policy must be in JSON string format.\n\nLength Constraints: Maximum length of 30720",
      "type": "string",
      "minLength": 1,
      "maxLength": 30720,
      "markdownDescription": "The body of the policy document you want to use for this topic.\n\nYou can only add one policy per PolicyType.\n\nThe policy must be in JSON string format.\n\nLength Constraints: Maximum length of 30720\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 30720  \nUpdate requires: No interruption\n"
    },
    "PolicyType": {
      "description": "Type of the policy.",
      "type": "string",
      "enum": [
        "DATA_PROTECTION_POLICY",
        "SUBSCRIPTION_FILTER_POLICY",
        "FIELD_INDEX_POLICY",
        "TRANSFORMER_POLICY",
        "METRIC_EXTRACTION_POLICY"
      ],
      "markdownDescription": "Type of the policy.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: DATA_PROTECTION_POLICY | SUBSCRIPTION_FILTER_POLICY | FIELD_INDEX_POLICY | TRANSFORMER_POLICY | METRIC_EXTRACTION_POLICY  \nUpdate requires: Replacement\n"
    },
    "Scope": {
      "description": "Scope for policy application",
      "type": "string",
      "enum": [
        "ALL"
      ],
      "markdownDescription": "Scope for policy application\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ALL  \nUpdate requires: No interruption\n"
    },
    "SelectionCriteria": {
      "description": "Log group  selection criteria to apply policy only to a subset of log groups. SelectionCriteria string can be up to 25KB and cloudwatchlogs determines the length of selectionCriteria by using its UTF-8 bytes",
      "type": "string",
      "markdownDescription": "Log group  selection criteria to apply policy only to a subset of log groups. SelectionCriteria string can be up to 25KB and cloudwatchlogs determines the length of selectionCriteria by using its UTF-8 bytes\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    }
  },
  "handlers": {
    "create": {
      "permissions": [
        "logs:PutAccountPolicy",
        "logs:PutIndexPolicy",
        "logs:PutDataProtectionPolicy",
        "logs:DescribeAccountPolicies",
        "logs:CreateLogDelivery",
        "s3:REST.PUT.OBJECT",
        "firehose:TagDeliveryStream",
        "logs:PutSubscriptionFilter",
        "logs:DeleteSubscriptionFilter",
        "logs:PutTransformer",
        "logs:PutMetricExtractionPolicy",
        "iam:PassRole"
      ]
    },
    "read": {
      "permissions": [
        "logs:DescribeAccountPolicies",
        "logs:GetTransformer",
        "logs:GetMetricExtractionPolicy"
      ]
    },
    "update": {
      "permissions": [
        "logs:PutAccountPolicy",
        "logs:PutIndexPolicy",
        "logs:PutDataProtectionPolicy",
        "logs:DescribeAccountPolicies",
        "logs:DeleteAccountPolicy",
        "logs:DeleteIndexPolicy",
        "logs:DeleteDataProtectionPolicy",
        "logs:CreateLogDelivery",
        "logs:PutSubscriptionFilter",
        "logs:DeleteSubscriptionFilter",
        "logs:PutTransformer",
        "logs:DeleteTransformer",
        "logs:PutMetricExtractionPolicy",
        "logs:DeleteMetricExtractionPolicy",
        "s3:REST.PUT.OBJECT",
        "firehose:TagDeliveryStream",
        "iam:PassRole"
      ]
    },
    "delete": {
      "permissions": [
        "logs:DeleteAccountPolicy",
        "logs:DeleteIndexPolicy",
        "logs:DeleteDataProtectionPolicy",
        "logs:DescribeAccountPolicies",
        "logs:DeleteSubscriptionFilter",
        "logs:DeleteTransformer",
        "logs:DeleteMetricExtractionPolicy",
        "iam:PassRole"
      ]
    },
    "list": {
      "permissions": [
        "logs:DescribeAccountPolicies",
        "logs:GetTransformer",
        "logs:GetMetricExtractionPolicy"
      ],
      "handlerSchema": {
        "properties": {
          "PolicyType": {
            "$ref": "resource-schema.json#/properties/PolicyType"
          }
        },
        "required": [
          "PolicyType"
        ]
      }
    }
  },
  "required": [
    "PolicyName",
    "PolicyType",
    "PolicyDocument"
  ],
  "createOnlyProperties": [
    "/properties/PolicyName",
    "/properties/PolicyType"
  ],
  "readOnlyProperties": [
    "/properties/AccountId"
  ],
  "primaryIdentifier": [
    "/properties/AccountId",
    "/properties/PolicyType",
    "/properties/PolicyName"
  ],
  "additionalProperties": false,
  "attributes": {
    "AccountId": {
      "description": "User account id",
      "type": "string",
      "markdownDescription": "User account id\n\n---\n\nRequired: No  \nType: String  \nPattern: ^\\d{12}$  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}