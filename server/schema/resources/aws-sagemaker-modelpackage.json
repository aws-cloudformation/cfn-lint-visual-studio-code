{
  "typeName": "AWS::SageMaker::ModelPackage",
  "description": "Resource Type definition for AWS::SageMaker::ModelPackage",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.",
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AdditionalInferenceSpecifications": {
      "type": "array",
      "minItems": 1,
      "maxItems": 15,
      "description": "An array of additional Inference Specification objects.",
      "items": {
        "$ref": "#/definitions/AdditionalInferenceSpecificationDefinition"
      },
      "insertionOrder": true,
      "markdownDescription": "An array of additional Inference Specification objects.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AdditionalInferenceSpecificationDefinition": {
      "description": "Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Containers": {
          "description": "The Amazon ECR registry path of the Docker image that contains the inference code.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelPackageContainerDefinition"
          },
          "minItems": 1,
          "maxItems": 15,
          "insertionOrder": true,
          "markdownDescription": "The Amazon ECR registry path of the Docker image that contains the inference code.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "Description": {
          "description": "A description of the additional Inference specification.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "A description of the additional Inference specification.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "Name": {
          "description": "A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.",
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "markdownDescription": "A unique name to identify the additional inference specification. The name must be unique within the list of your additional inference specifications for a particular model package.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 63  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$  \nUpdate requires: No interruption"
        },
        "SupportedContentTypes": {
          "description": "The supported MIME types for the input data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentType"
          },
          "insertionOrder": true,
          "markdownDescription": "The supported MIME types for the input data.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedRealtimeInferenceInstanceTypes": {
          "description": "A list of the instance types that are used to generate inferences in real-time",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InferenceInstanceType"
          },
          "insertionOrder": true,
          "markdownDescription": "A list of the instance types that are used to generate inferences in real-time\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedResponseMIMETypes": {
          "description": "The supported MIME types for the output data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMIMEType"
          },
          "insertionOrder": true,
          "markdownDescription": "The supported MIME types for the output data.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedTransformInstanceTypes": {
          "description": "A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/TransformInstanceType"
          },
          "insertionOrder": true,
          "markdownDescription": "A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Containers",
        "Name"
      ],
      "markdownDescription": "Additional Inference Specification specifies details about inference jobs that can be run with models based on this model package.AdditionalInferenceSpecifications can be added to existing model packages using AdditionalInferenceSpecificationsToAdd.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformInstanceType": {
      "description": "Instance types on which a transformation job can be run or on which an endpoint can be deployed.",
      "type": "string",
      "markdownDescription": "Instance types on which a transformation job can be run or on which an endpoint can be deployed.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "InferenceInstanceType": {
      "description": "Instance type that is used to generate inferences in real-time",
      "type": "string",
      "markdownDescription": "Instance type that is used to generate inferences in real-time\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ContentType": {
      "description": "The supported MIME type for the input data.",
      "type": "string",
      "maxLength": 256,
      "markdownDescription": "The supported MIME type for the input data.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
    },
    "ResponseMIMEType": {
      "description": "The supported MIME types for the output data.",
      "type": "string",
      "maxLength": 1024,
      "markdownDescription": "The supported MIME types for the output data.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^[-\\w]+\\/.+$  \nUpdate requires: No interruption"
    },
    "CertifyForMarketplace": {
      "description": "Whether to certify the model package for listing on AWS Marketplace.",
      "type": "boolean",
      "markdownDescription": "Whether to certify the model package for listing on AWS Marketplace.\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
    },
    "ClientToken": {
      "description": "A unique token that guarantees that the call to this API is idempotent.",
      "type": "string",
      "minLength": 1,
      "maxLength": 36,
      "markdownDescription": "A unique token that guarantees that the call to this API is idempotent.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 36  \nPattern: ^[a-zA-Z0-9-]+$  \nUpdate requires: No interruption"
    },
    "CustomerMetadataProperties": {
      "type": "object",
      "description": "The metadata properties associated with the model package versions.",
      "maxProperties": 50,
      "minProperties": 1,
      "patternProperties": {
        "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*)${1,128}": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "^([\\p{L}\\p{Z}\\p{N}_.:\\/=+\\-@]*)${1,256}": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "The metadata properties associated with the model package versions.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Domain": {
      "description": "The machine learning domain of the model package you specified.",
      "type": "string",
      "markdownDescription": "The machine learning domain of the model package you specified.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "DriftCheckBaselines": {
      "description": "Represents the drift check baselines that can be used when the model monitor is set using the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Bias": {
          "$ref": "#/definitions/DriftCheckBias"
        },
        "Explainability": {
          "$ref": "#/definitions/DriftCheckExplainability"
        },
        "ModelDataQuality": {
          "$ref": "#/definitions/DriftCheckModelDataQuality"
        },
        "ModelQuality": {
          "$ref": "#/definitions/DriftCheckModelQuality"
        }
      },
      "markdownDescription": "Represents the drift check baselines that can be used when the model monitor is set using the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DriftCheckBias": {
      "description": "Represents the drift check bias baselines that can be used when the model monitor is set using the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "PostTrainingConstraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "PreTrainingConstraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "ConfigFile": {
          "$ref": "#/definitions/FileSource"
        }
      },
      "markdownDescription": "Represents the drift check bias baselines that can be used when the model monitor is set using the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DriftCheckExplainability": {
      "description": "Contains explainability metrics for a model.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Constraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "ConfigFile": {
          "$ref": "#/definitions/FileSource"
        }
      },
      "markdownDescription": "Contains explainability metrics for a model.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DriftCheckModelDataQuality": {
      "description": "Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Constraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "Statistics": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Represents the drift check data quality baselines that can be used when the model monitor is set using the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DriftCheckModelQuality": {
      "description": "Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Constraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "Statistics": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Represents the drift check model quality baselines that can be used when the model monitor is set using the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetricsSource": {
      "description": "Represents a Metric Source Object.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ContentDigest": {
          "description": "The digest of the metric source.",
          "type": "string",
          "maxLength": 72,
          "markdownDescription": "The digest of the metric source.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 72  \nPattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$  \nUpdate requires: No interruption"
        },
        "ContentType": {
          "description": "The type of content stored in the metric source.",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "The type of content stored in the metric source.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "S3Uri": {
          "description": "The Amazon S3 URI for the metric source.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 URI for the metric source.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ContentType",
        "S3Uri"
      ],
      "markdownDescription": "Represents a Metric Source Object.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "FileSource": {
      "description": "Represents a File Source Object.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ContentDigest": {
          "description": "The digest of the file source.",
          "type": "string",
          "maxLength": 72,
          "markdownDescription": "The digest of the file source.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 72  \nPattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$  \nUpdate requires: No interruption"
        },
        "ContentType": {
          "description": "The type of content stored in the file source.",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "The type of content stored in the file source.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "S3Uri": {
          "description": "The Amazon S3 URI for the file source.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 URI for the file source.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3Uri"
      ],
      "markdownDescription": "Represents a File Source Object.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "InferenceSpecification": {
      "description": "Details about inference jobs that can be run with models based on this model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Containers": {
          "description": "The Amazon ECR registry path of the Docker image that contains the inference code.",
          "type": "array",
          "uniqueItems": true,
          "items": {
            "$ref": "#/definitions/ModelPackageContainerDefinition"
          },
          "minItems": 1,
          "maxItems": 15,
          "insertionOrder": true,
          "markdownDescription": "The Amazon ECR registry path of the Docker image that contains the inference code.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedContentTypes": {
          "description": "The supported MIME types for the input data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContentType"
          },
          "insertionOrder": true,
          "markdownDescription": "The supported MIME types for the input data.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedRealtimeInferenceInstanceTypes": {
          "description": "A list of the instance types that are used to generate inferences in real-time",
          "type": "array",
          "items": {
            "$ref": "#/definitions/InferenceInstanceType"
          },
          "insertionOrder": true,
          "markdownDescription": "A list of the instance types that are used to generate inferences in real-time\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedResponseMIMETypes": {
          "description": "The supported MIME types for the output data.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResponseMIMEType"
          },
          "insertionOrder": true,
          "markdownDescription": "The supported MIME types for the output data.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "SupportedTransformInstanceTypes": {
          "description": "A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.",
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/TransformInstanceType"
          },
          "insertionOrder": true,
          "markdownDescription": "A list of the instance types on which a transformation job can be run or on which an endpoint can be deployed.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Containers",
        "SupportedContentTypes",
        "SupportedResponseMIMETypes"
      ],
      "markdownDescription": "Details about inference jobs that can be run with models based on this model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Environment": {
      "type": "object",
      "description": "Sets the environment variables in the Docker container",
      "maxProperties": 16,
      "patternProperties": {
        "[a-zA-Z_][a-zA-Z0-9_]*": {
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        },
        "[\\S\\s]*": {
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Sets the environment variables in the Docker container\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelPackageContainerDefinition": {
      "type": "object",
      "additionalProperties": false,
      "description": "Describes the Docker container for the model package.",
      "properties": {
        "ContainerHostname": {
          "type": "string",
          "description": "The DNS host name for the Docker container.",
          "maxLength": 63,
          "markdownDescription": "The DNS host name for the Docker container.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 63  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}  \nUpdate requires: No interruption"
        },
        "Environment": {
          "$ref": "#/definitions/Environment"
        },
        "ModelInput": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "DataInputConfig": {
              "type": "string",
              "description": "The input configuration object for the model.",
              "minLength": 1,
              "maxLength": 1024,
              "markdownDescription": "The input configuration object for the model.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1024  \nPattern: [\\S\\s]+  \nUpdate requires: No interruption"
            }
          },
          "required": [
            "DataInputConfig"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        },
        "Image": {
          "type": "string",
          "description": "The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.",
          "minLength": 1,
          "maxLength": 255,
          "markdownDescription": "The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nPattern: [\\S]{1,255}  \nUpdate requires: No interruption"
        },
        "ImageDigest": {
          "type": "string",
          "description": "An MD5 hash of the training algorithm that identifies the Docker image used for training.",
          "maxLength": 72,
          "markdownDescription": "An MD5 hash of the training algorithm that identifies the Docker image used for training.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 72  \nPattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$  \nUpdate requires: No interruption"
        },
        "ModelDataUrl": {
          "type": "string",
          "description": "A structure with Model Input details.",
          "maxLength": 1024,
          "markdownDescription": "A structure with Model Input details.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        },
        "ProductId": {
          "type": "string",
          "description": "The AWS Marketplace product ID of the model package.",
          "maxLength": 256,
          "markdownDescription": "The AWS Marketplace product ID of the model package.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9])*$  \nUpdate requires: No interruption"
        },
        "Framework": {
          "type": "string",
          "description": "The machine learning framework of the model package container image.",
          "markdownDescription": "The machine learning framework of the model package container image.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "FrameworkVersion": {
          "type": "string",
          "description": "The framework version of the Model Package Container Image.",
          "minLength": 3,
          "maxLength": 10,
          "markdownDescription": "The framework version of the Model Package Container Image.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 10  \nPattern: [0-9]\\.[A-Za-z0-9.]+  \nUpdate requires: No interruption"
        },
        "NearestModelName": {
          "type": "string",
          "description": "The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.",
          "markdownDescription": "The name of a pre-trained machine learning benchmarked by Amazon SageMaker Inference Recommender model that matches your model.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Image"
      ],
      "markdownDescription": "Describes the Docker container for the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "MetadataProperties": {
      "description": "Metadata properties of the tracking entity, trial, or trial component.",
      "type": "object",
      "properties": {
        "CommitId": {
          "type": "string",
          "description": "The commit ID.",
          "maxLength": 1024,
          "markdownDescription": "The commit ID.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "GeneratedBy": {
          "type": "string",
          "description": "The entity this entity was generated by.",
          "maxLength": 1024,
          "markdownDescription": "The entity this entity was generated by.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "ProjectId": {
          "type": "string",
          "description": "The project ID metadata.",
          "maxLength": 1024,
          "markdownDescription": "The project ID metadata.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "Repository": {
          "type": "string",
          "description": "The repository metadata.",
          "maxLength": 1024,
          "markdownDescription": "The repository metadata.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "Metadata properties of the tracking entity, trial, or trial component.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelApprovalStatus": {
      "type": "string",
      "description": "The approval status of the model package.",
      "enum": [
        "Approved",
        "Rejected",
        "PendingManualApproval"
      ],
      "markdownDescription": "The approval status of the model package.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Approved | Rejected | PendingManualApproval  \nUpdate requires: No interruption"
    },
    "ModelMetrics": {
      "description": "A structure that contains model metrics reports.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Bias": {
          "$ref": "#/definitions/Bias"
        },
        "Explainability": {
          "$ref": "#/definitions/Explainability"
        },
        "ModelDataQuality": {
          "$ref": "#/definitions/ModelDataQuality"
        },
        "ModelQuality": {
          "$ref": "#/definitions/ModelQuality"
        }
      },
      "markdownDescription": "A structure that contains model metrics reports.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Bias": {
      "description": "Contains bias metrics for a model.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Report": {
          "$ref": "#/definitions/MetricsSource"
        },
        "PreTrainingReport": {
          "$ref": "#/definitions/MetricsSource"
        },
        "PostTrainingReport": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Contains bias metrics for a model.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Explainability": {
      "description": "Contains explainability metrics for a model.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Report": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Contains explainability metrics for a model.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelDataQuality": {
      "description": "Metrics that measure the quality of the input data for a model.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Constraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "Statistics": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Metrics that measure the quality of the input data for a model.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelQuality": {
      "description": "Metrics that measure the quality of a model.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Constraints": {
          "$ref": "#/definitions/MetricsSource"
        },
        "Statistics": {
          "$ref": "#/definitions/MetricsSource"
        }
      },
      "markdownDescription": "Metrics that measure the quality of a model.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelPackageDescription": {
      "type": "string",
      "description": "The description of the model package.",
      "maxLength": 1024,
      "markdownDescription": "The description of the model package.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: [\\p{L}\\p{M}\\p{Z}\\p{S}\\p{N}\\p{P}]*  \nUpdate requires: No interruption"
    },
    "ModelPackageGroupName": {
      "type": "string",
      "description": "The name of the model package group.",
      "minLength": 1,
      "maxLength": 170,
      "markdownDescription": "The name of the model package group.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 170  \nPattern: (arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$  \nUpdate requires: No interruption"
    },
    "ModelPackageName": {
      "type": "string",
      "description": "The name or arn of the model package.",
      "markdownDescription": "The name or arn of the model package.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "SamplePayloadUrl": {
      "description": "The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored pointing to single gzip compressed tar archive.",
      "type": "string",
      "maxLength": 1024,
      "markdownDescription": "The Amazon Simple Storage Service (Amazon S3) path where the sample payload are stored pointing to single gzip compressed tar archive.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
    },
    "SourceAlgorithmSpecification": {
      "description": "Details about the algorithm that was used to create the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "SourceAlgorithms": {
          "description": "A list of algorithms that were used to create a model package.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SourceAlgorithm"
          },
          "minItems": 1,
          "maxItems": 1,
          "insertionOrder": true,
          "markdownDescription": "A list of algorithms that were used to create a model package.\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "SourceAlgorithms"
      ],
      "insertionOrder": true,
      "markdownDescription": "Details about the algorithm that was used to create the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "SourceAlgorithm": {
      "description": "Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "AlgorithmName": {
          "description": "The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.",
          "type": "string",
          "minLength": 1,
          "maxLength": 170,
          "markdownDescription": "The name of an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 170  \nPattern: (arn:aws[a-z\\-]*:sagemaker:[a-z0-9\\-]*:[0-9]{12}:[a-z\\-]*\\/)?([a-zA-Z0-9]([a-zA-Z0-9-]){0,62})(?<!-)$  \nUpdate requires: No interruption"
        },
        "ModelDataUrl": {
          "description": "The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 path where the model artifacts, which result from model training, are stored. This path must point to a single gzip compressed tar archive (.tar.gz suffix).\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "AlgorithmName"
      ],
      "markdownDescription": "Specifies an algorithm that was used to create the model package. The algorithm must be either an algorithm resource in your Amazon SageMaker account or an algorithm in AWS Marketplace that you are subscribed to.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ValidationSpecification": {
      "description": "Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ValidationProfiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationProfile"
          },
          "minItems": 1,
          "maxItems": 1,
          "insertionOrder": true,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        },
        "ValidationRole": {
          "description": "The IAM roles to be used for the validation of the model package.",
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "markdownDescription": "The IAM roles to be used for the validation of the model package.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ValidationProfiles",
        "ValidationRole"
      ],
      "insertionOrder": true,
      "markdownDescription": "Specifies configurations for one or more transform jobs that Amazon SageMaker runs to test the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ValidationProfile": {
      "description": "Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TransformJobDefinition": {
          "$ref": "#/definitions/TransformJobDefinition"
        },
        "ProfileName": {
          "description": "The name of the profile for the model package.",
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "markdownDescription": "The name of the profile for the model package.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 63  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "TransformJobDefinition",
        "ProfileName"
      ],
      "markdownDescription": "Contains data, such as the inputs and targeted instance types that are used in the process of validating the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformJobDefinition": {
      "description": "Defines the input needed to run a transform job using the inference specification specified in the algorithm.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Environment": {
          "$ref": "#/definitions/Environment"
        },
        "BatchStrategy": {
          "description": "A string that determines the number of records included in a single mini-batch.",
          "type": "string",
          "enum": [
            "MultiRecord",
            "SingleRecord"
          ],
          "markdownDescription": "A string that determines the number of records included in a single mini-batch.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: MultiRecord | SingleRecord  \nUpdate requires: No interruption"
        },
        "MaxConcurrentTransforms": {
          "description": "The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.",
          "type": "integer",
          "minimum": 0,
          "markdownDescription": "The maximum number of parallel requests that can be sent to each instance in a transform job. The default value is 1.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "MaxPayloadInMB": {
          "description": "The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).",
          "type": "integer",
          "minimum": 0,
          "markdownDescription": "The maximum payload size allowed, in MB. A payload is the data portion of a record (without metadata).\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "TransformInput": {
          "$ref": "#/definitions/TransformInput"
        },
        "TransformOutput": {
          "$ref": "#/definitions/TransformOutput"
        },
        "TransformResources": {
          "$ref": "#/definitions/TransformResources"
        }
      },
      "required": [
        "TransformResources",
        "TransformOutput",
        "TransformInput"
      ],
      "markdownDescription": "Defines the input needed to run a transform job using the inference specification specified in the algorithm.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformInput": {
      "description": "Describes the input source of a transform job and the way the transform job consumes it.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "CompressionType": {
          "description": "If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.",
          "type": "string",
          "enum": [
            "None",
            "Gzip"
          ],
          "markdownDescription": "If your transform data is compressed, specify the compression type. Amazon SageMaker automatically decompresses the data for the transform job accordingly. The default value is None.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: None | Gzip  \nUpdate requires: No interruption"
        },
        "ContentType": {
          "description": "The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "The multipurpose internet mail extension (MIME) type of the data. Amazon SageMaker uses the MIME type with each http call to transfer data to the transform job.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "DataSource": {
          "$ref": "#/definitions/DataSource"
        },
        "SplitType": {
          "description": "The method to use to split the transform job's data files into smaller batches. ",
          "type": "string",
          "enum": [
            "None",
            "TFRecord",
            "Line",
            "RecordIO"
          ],
          "markdownDescription": "The method to use to split the transform job's data files into smaller batches. \n\n---\n\nRequired: No  \nType: String  \nAllowed Values: None | TFRecord | Line | RecordIO  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "DataSource"
      ],
      "markdownDescription": "Describes the input source of a transform job and the way the transform job consumes it.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "DataSource": {
      "description": "Describes the input source of a transform job and the way the transform job consumes it.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "S3DataSource": {
          "$ref": "#/definitions/S3DataSource"
        }
      },
      "required": [
        "S3DataSource"
      ],
      "markdownDescription": "Describes the input source of a transform job and the way the transform job consumes it.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "S3DataSource": {
      "description": "Describes the S3 data source.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "S3DataType": {
          "description": "The S3 Data Source Type",
          "type": "string",
          "enum": [
            "ManifestFile",
            "S3Prefix",
            "AugmentedManifestFile"
          ],
          "markdownDescription": "The S3 Data Source Type\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: ManifestFile | S3Prefix | AugmentedManifestFile  \nUpdate requires: No interruption"
        },
        "S3Uri": {
          "description": "Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "Depending on the value specified for the S3DataType, identifies either a key name prefix or a manifest.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3DataType",
        "S3Uri"
      ],
      "markdownDescription": "Describes the S3 data source.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformOutput": {
      "description": "Describes the results of a transform job.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Accept": {
          "description": "The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.",
          "type": "string",
          "maxLength": 256,
          "markdownDescription": "The MIME type used to specify the output data. Amazon SageMaker uses the MIME type with each http call to transfer data from the transform job.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "KmsKeyId": {
          "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nPattern: .*  \nUpdate requires: No interruption"
        },
        "S3OutputPath": {
          "description": "The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.",
          "type": "string",
          "maxLength": 1024,
          "markdownDescription": "The Amazon S3 path where you want Amazon SageMaker to store the results of the transform job.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nPattern: ^(https|s3)://([^/]+)/?(.*)$  \nUpdate requires: No interruption"
        },
        "AssembleWith": {
          "description": "Defines how to assemble the results of the transform job as a single S3 object.",
          "type": "string",
          "enum": [
            "None",
            "Line"
          ],
          "markdownDescription": "Defines how to assemble the results of the transform job as a single S3 object.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: None | Line  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "S3OutputPath"
      ],
      "markdownDescription": "Describes the results of a transform job.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TransformResources": {
      "description": "Describes the resources, including ML instance types and ML instance count, to use for transform job.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "InstanceCount": {
          "description": "The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.",
          "type": "integer",
          "minimum": 1,
          "markdownDescription": "The number of ML compute instances to use in the transform job. For distributed transform jobs, specify a value greater than 1. The default value is 1.\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "InstanceType": {
          "description": "The ML compute instance type for the transform job.",
          "type": "string",
          "markdownDescription": "The ML compute instance type for the transform job.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "VolumeKmsKeyId": {
          "description": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.",
          "type": "string",
          "maxLength": 2048,
          "markdownDescription": "The AWS Key Management Service (AWS KMS) key that Amazon SageMaker uses to encrypt model data on the storage volume attached to the ML compute instance(s) that run the batch transform job.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nPattern: .*  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "InstanceCount",
        "InstanceType"
      ],
      "markdownDescription": "Describes the resources, including ML instance types and ML instance count, to use for transform job.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelPackageArn": {
      "type": "string",
      "description": "The Amazon Resource Name (ARN) of the model package group.",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "The Amazon Resource Name (ARN) of the model package group.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:aws(-cn|-us-gov)?:sagemaker:[a-z0-9\\-]{9,16}:[0-9]{12}:model-package/[\\S]{1,2048}$  \nUpdate requires: No interruption"
    },
    "ApprovalDescription": {
      "description": "A description provided for the model approval.",
      "type": "string",
      "maxLength": 1024,
      "markdownDescription": "A description provided for the model approval.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: .*  \nUpdate requires: No interruption"
    },
    "CreatedBy": {
      "$ref": "#/definitions/UserContext"
    },
    "CreationTime": {
      "description": "The time at which the model package was created.",
      "type": "string",
      "markdownDescription": "The time at which the model package was created.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "UserContext": {
      "type": "object",
      "additionalProperties": false,
      "description": "Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.",
      "properties": {
        "DomainId": {
          "type": "string",
          "description": "The domain associated with the user.",
          "markdownDescription": "The domain associated with the user.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "UserProfileArn": {
          "type": "string",
          "description": "The Amazon Resource Name (ARN) of the user's profile.",
          "markdownDescription": "The Amazon Resource Name (ARN) of the user's profile.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "UserProfileName": {
          "type": "string",
          "description": "The name of the user's profile.",
          "markdownDescription": "The name of the user's profile.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        }
      },
      "markdownDescription": "Information about the user who created or modified an experiment, trial, trial component, lineage group, or project.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "LastModifiedBy": {
      "$ref": "#/definitions/UserContext"
    },
    "LastModifiedTime": {
      "description": "The time at which the model package was last modified.",
      "type": "string",
      "markdownDescription": "The time at which the model package was last modified.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "ModelPackageStatus": {
      "description": "The current status of the model package.",
      "type": "string",
      "enum": [
        "Pending",
        "Deleting",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "markdownDescription": "The current status of the model package.\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: Pending | Deleting | InProgress | Completed | Failed  \nUpdate requires: No interruption"
    },
    "ModelPackageStatusDetails": {
      "description": "Details about the current status of the model package.",
      "type": "object",
      "properties": {
        "ImageScanStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelPackageStatusItem"
          },
          "insertionOrder": true,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
        },
        "ValidationStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ModelPackageStatusItem"
          },
          "insertionOrder": true,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Array  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "ValidationStatuses"
      ],
      "additionalProperties": false,
      "markdownDescription": "Details about the current status of the model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelPackageStatusItem": {
      "description": "Represents the overall status of a model package.",
      "type": "object",
      "properties": {
        "FailureReason": {
          "description": "If the overall status is Failed, the reason for the failure.",
          "type": "string",
          "markdownDescription": "If the overall status is Failed, the reason for the failure.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "Name": {
          "description": "The name of the model package for which the overall status is being reported.",
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "markdownDescription": "The name of the model package for which the overall status is being reported.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 63  \nPattern: ^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}$  \nUpdate requires: No interruption"
        },
        "Status": {
          "description": "The current status.",
          "type": "string",
          "enum": [
            "NotStarted",
            "Failed",
            "InProgress",
            "Completed"
          ],
          "markdownDescription": "The current status.\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: NotStarted | Failed | InProgress | Completed  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Name",
        "Status"
      ],
      "additionalProperties": false,
      "markdownDescription": "Represents the overall status of a model package.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ModelPackageVersion": {
      "type": "integer",
      "description": "The version of the model package.",
      "minimum": 1,
      "markdownDescription": "The version of the model package.\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
    },
    "Task": {
      "description": "The machine learning task your model package accomplishes.",
      "type": "string",
      "markdownDescription": "The machine learning task your model package accomplishes.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Tags": {
      "type": "array",
      "maxItems": 50,
      "description": "An array of key-value pairs to apply to this resource.",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "AdditionalInferenceSpecifications": {
      "$ref": "#/definitions/AdditionalInferenceSpecifications"
    },
    "AdditionalInferenceSpecificationDefinition": {
      "$ref": "#/definitions/AdditionalInferenceSpecificationDefinition"
    },
    "CertifyForMarketplace": {
      "$ref": "#/definitions/CertifyForMarketplace"
    },
    "ClientToken": {
      "$ref": "#/definitions/ClientToken"
    },
    "CustomerMetadataProperties": {
      "$ref": "#/definitions/CustomerMetadataProperties"
    },
    "Domain": {
      "$ref": "#/definitions/Domain"
    },
    "DriftCheckBaselines": {
      "$ref": "#/definitions/DriftCheckBaselines"
    },
    "InferenceSpecification": {
      "$ref": "#/definitions/InferenceSpecification"
    },
    "MetadataProperties": {
      "$ref": "#/definitions/MetadataProperties"
    },
    "ModelApprovalStatus": {
      "$ref": "#/definitions/ModelApprovalStatus"
    },
    "ModelMetrics": {
      "$ref": "#/definitions/ModelMetrics"
    },
    "ModelPackageDescription": {
      "$ref": "#/definitions/ModelPackageDescription"
    },
    "ModelPackageGroupName": {
      "$ref": "#/definitions/ModelPackageGroupName"
    },
    "ModelPackageName": {
      "$ref": "#/definitions/ModelPackageName"
    },
    "SamplePayloadUrl": {
      "$ref": "#/definitions/SamplePayloadUrl"
    },
    "SourceAlgorithmSpecification": {
      "$ref": "#/definitions/SourceAlgorithmSpecification"
    },
    "Task": {
      "$ref": "#/definitions/Task"
    },
    "ValidationSpecification": {
      "$ref": "#/definitions/ValidationSpecification"
    },
    "ApprovalDescription": {
      "$ref": "#/definitions/ApprovalDescription"
    },
    "LastModifiedBy": {
      "$ref": "#/definitions/LastModifiedBy"
    },
    "LastModifiedTime": {
      "$ref": "#/definitions/LastModifiedTime"
    },
    "ModelPackageVersion": {
      "$ref": "#/definitions/ModelPackageVersion"
    },
    "AdditionalInferenceSpecificationsToAdd": {
      "$ref": "#/definitions/AdditionalInferenceSpecifications"
    },
    "ModelPackageStatusDetails": {
      "$ref": "#/definitions/ModelPackageStatusDetails"
    },
    "ModelPackageStatusItem": {
      "$ref": "#/definitions/ModelPackageStatusItem"
    },
    "CreatedBy": {
      "$ref": "#/definitions/CreatedBy"
    },
    "Environment": {
      "$ref": "#/definitions/Environment"
    }
  },
  "additionalProperties": false,
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "readOnlyProperties": [
    "/properties/ModelPackageArn",
    "/properties/CreationTime",
    "/properties/ModelPackageStatus"
  ],
  "createOnlyProperties": [
    "/properties/ModelPackageGroupName",
    "/properties/ModelPackageDescription",
    "/properties/InferenceSpecification",
    "/properties/ValidationSpecification",
    "/properties/SourceAlgorithmSpecification",
    "/properties/MetadataProperties",
    "/properties/ModelMetrics",
    "/properties/ClientToken",
    "/properties/DriftCheckBaselines",
    "/properties/Domain",
    "/properties/Task",
    "/properties/SamplePayloadUrl"
  ],
  "primaryIdentifier": [
    "/properties/ModelPackageArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "ecr:BatchGetImage",
        "ecr:DescribeImages",
        "ecr:StartImageScan",
        "ecr:DescribeImageScanFindings",
        "sagemaker:AddTags",
        "sagemaker:CreateModel",
        "sagemaker:CreateModelPackage",
        "sagemaker:CreateTrainingJob",
        "sagemaker:CreateTransformJob",
        "sagemaker:DescribeTransformJob",
        "iam:PassRole",
        "s3:GetObject"
      ]
    },
    "read": {
      "permissions": [
        "sagemaker:DescribeModelPackage",
        "sagemaker:ListTags"
      ]
    },
    "update": {
      "permissions": [
        "sagemaker:UpdateModelPackage",
        "sagemaker:DescribeModelPackage",
        "sagemaker:ListTags",
        "sagemaker:AddTags",
        "sagemaker:DeleteTags"
      ]
    },
    "delete": {
      "permissions": [
        "sagemaker:DeleteModelPackage",
        "sagemaker:DescribeModelPackage"
      ]
    },
    "list": {
      "permissions": [
        "sagemaker:ListModelPackages"
      ]
    }
  },
  "attributes": {
    "ModelPackageArn": {
      "$ref": "#/definitions/ModelPackageArn"
    },
    "CreationTime": {
      "$ref": "#/definitions/CreationTime"
    },
    "ModelPackageStatus": {
      "$ref": "#/definitions/ModelPackageStatus"
    }
  }
}