{
  "typeName": "AWS::IoT::SoftwarePackageVersion",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-iot",
  "description": "resource definition",
  "definitions": {
    "PackageVersionStatus": {
      "type": "string",
      "enum": [
        "DRAFT",
        "PUBLISHED",
        "DEPRECATED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DRAFT | PUBLISHED | DEPRECATED  \nUpdate requires: No interruption\n"
    },
    "PackageVersionArtifact": {
      "description": "The artifact location of the package version",
      "type": "object",
      "properties": {
        "S3Location": {
          "$ref": "#/definitions/S3Location"
        }
      },
      "required": [
        "S3Location"
      ],
      "additionalProperties": false,
      "markdownDescription": "The artifact location of the package version\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ResourceAttributes": {
      "type": "object",
      "patternProperties": {
        "^[a-zA-Z0-9:_-]+$": {
          "type": "string",
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nPattern: ^[^\\p{C}]+$  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. \n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "description": "The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. ",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "The value for the tag. You can specify a value that is 1 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. \n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A key-value pair to associate with a resource.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Sbom": {
      "description": "The sbom zip archive location of the package version",
      "type": "object",
      "properties": {
        "S3Location": {
          "$ref": "#/definitions/S3Location"
        }
      },
      "required": [
        "S3Location"
      ],
      "additionalProperties": false,
      "markdownDescription": "The sbom zip archive location of the package version\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "S3Location": {
      "description": "The Amazon S3 location",
      "type": "object",
      "properties": {
        "Bucket": {
          "type": "string",
          "description": "The S3 bucket",
          "minLength": 1,
          "markdownDescription": "The S3 bucket\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nUpdate requires: No interruption\n"
        },
        "Key": {
          "type": "string",
          "description": "The S3 key",
          "minLength": 1,
          "markdownDescription": "The S3 key\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nUpdate requires: No interruption\n"
        },
        "Version": {
          "type": "string",
          "description": "The S3 version",
          "markdownDescription": "The S3 version\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Bucket",
        "Key",
        "Version"
      ],
      "additionalProperties": false,
      "markdownDescription": "The Amazon S3 location\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "SbomValidationStatus": {
      "description": "The validation status of the Sbom file",
      "type": "string",
      "enum": [
        "IN_PROGRESS",
        "FAILED",
        "SUCCEEDED",
        ""
      ],
      "markdownDescription": "The validation status of the Sbom file\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: IN_PROGRESS | FAILED | SUCCEEDED |   \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Attributes": {
      "$ref": "#/definitions/ResourceAttributes"
    },
    "Artifact": {
      "$ref": "#/definitions/PackageVersionArtifact"
    },
    "Description": {
      "type": "string",
      "maxLength": 1024,
      "minLength": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^[^\\p{C}]+$  \nUpdate requires: No interruption\n"
    },
    "ErrorReason": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "PackageName": {
      "type": "string",
      "maxLength": 128,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9-_.]+$  \nUpdate requires: Replacement\n"
    },
    "PackageVersionArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:[!-~]+$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "Recipe": {
      "description": "The inline json job document associated with a software package version",
      "type": "string",
      "markdownDescription": "The inline json job document associated with a software package version\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "Sbom": {
      "$ref": "#/definitions/Sbom"
    },
    "SbomValidationStatus": {
      "$ref": "#/definitions/SbomValidationStatus"
    },
    "Status": {
      "$ref": "#/definitions/PackageVersionStatus"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "maxItems": 50,
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "An array of key-value pairs to apply to this resource.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "VersionName": {
      "type": "string",
      "maxLength": 64,
      "minLength": 1,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[a-zA-Z0-9-_.]+$  \nUpdate requires: Replacement\n"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "iot:TagResource",
      "iot:UntagResource",
      "iot:ListTagsForResource"
    ]
  },
  "required": [
    "PackageName"
  ],
  "readOnlyProperties": [
    "/properties/ErrorReason",
    "/properties/PackageVersionArn",
    "/properties/Status",
    "/properties/SbomValidationStatus"
  ],
  "createOnlyProperties": [
    "/properties/PackageName",
    "/properties/VersionName"
  ],
  "primaryIdentifier": [
    "/properties/PackageName",
    "/properties/VersionName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iot:CreatePackageVersion",
        "iot:GetPackageVersion",
        "iot:ListTagsForResource",
        "iot:TagResource",
        "iot:GetIndexingConfiguration",
        "s3:GetObjectVersion",
        "iot:AssociateSbomWithPackageVersion"
      ]
    },
    "read": {
      "permissions": [
        "iot:GetPackageVersion",
        "iot:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "iot:UpdatePackageVersion",
        "iot:GetPackageVersion",
        "iot:ListTagsForResource",
        "iot:TagResource",
        "iot:UntagResource",
        "iot:GetIndexingConfiguration",
        "s3:GetObjectVersion",
        "iot:AssociateSbomWithPackageVersion",
        "iot:DisassociateSbomFromPackageVersion"
      ]
    },
    "delete": {
      "permissions": [
        "iot:DeletePackageVersion",
        "iot:UpdatePackageVersion",
        "iot:GetPackageVersion",
        "iot:GetIndexingConfiguration"
      ]
    },
    "list": {
      "handlerSchema": {
        "properties": {
          "PackageName": {
            "$ref": "resource-schema.json#/properties/PackageName"
          }
        },
        "required": [
          "PackageName"
        ]
      },
      "permissions": [
        "iot:ListPackageVersions"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "ErrorReason": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "PackageVersionArn": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nPattern: ^arn:[!-~]+$  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "SbomValidationStatus": {
      "$ref": "#/definitions/SbomValidationStatus"
    },
    "Status": {
      "$ref": "#/definitions/PackageVersionStatus"
    }
  }
}