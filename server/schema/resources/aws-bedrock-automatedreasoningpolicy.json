{
  "typeName": "AWS::Bedrock::AutomatedReasoningPolicy",
  "description": "Definition of AWS::Bedrock::AutomatedReasoningPolicy Resource Type",
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/PolicyArn"
  ],
  "readOnlyProperties": [
    "/properties/Version",
    "/properties/PolicyId",
    "/properties/PolicyArn",
    "/properties/DefinitionHash",
    "/properties/CreatedAt",
    "/properties/UpdatedAt"
  ],
  "definitions": {
    "Name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 256,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nPattern: ^[0-9a-zA-Z-_ ]+$  \nUpdate requires: No interruption\n"
    },
    "Description": {
      "type": "string",
      "maxLength": 1024,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionRule": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "minLength": 12,
          "maxLength": 12,
          "description": "A unique id within the PolicyDefinition",
          "markdownDescription": "A unique id within the PolicyDefinition\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nPattern: ^[A-Z][0-9A-Z]{11}$  \nUpdate requires: No interruption\n"
        },
        "Expression": {
          "type": "string",
          "maxLength": 2048,
          "description": "The SMT expression for this rule",
          "markdownDescription": "The SMT expression for this rule\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 2048  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
        },
        "AlternateExpression": {
          "type": "string",
          "maxLength": 2048,
          "description": "An alternate expression for this rule",
          "markdownDescription": "An alternate expression for this rule\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Id",
        "Expression"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionRuleList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/PolicyDefinitionRule"
      },
      "maxItems": 500,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionTypeValue": {
      "type": "object",
      "properties": {
        "Value": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "description": "The value of the type value.",
          "markdownDescription": "The value of the type value.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[A-Za-z][A-Za-z0-9_]+$  \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "maxLength": 1024,
          "description": "A natural language description of the type's value.",
          "markdownDescription": "A natural language description of the type's value.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionTypeValueList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/PolicyDefinitionTypeValue"
      },
      "minItems": 1,
      "maxItems": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionType": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "description": "A name for this type.",
          "markdownDescription": "A name for this type.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[A-Za-z][A-Za-z0-9_]+$  \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "maxLength": 1024,
          "description": "A natural language description of this type.",
          "markdownDescription": "A natural language description of this type.\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1024  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
        },
        "Values": {
          "$ref": "#/definitions/PolicyDefinitionTypeValueList",
          "description": "A list of valid values for this type.",
          "markdownDescription": "A list of valid values for this type.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Name",
        "Values"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionTypeList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/PolicyDefinitionType"
      },
      "maxItems": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionVariable": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "description": "A name from this variable.",
          "markdownDescription": "A name from this variable.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[A-Za-z][A-Za-z0-9_]+$  \nUpdate requires: No interruption\n"
        },
        "Type": {
          "type": "string",
          "minLength": 1,
          "maxLength": 64,
          "description": "A type for this variable.",
          "markdownDescription": "A type for this variable.\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 64  \nPattern: ^[A-Za-z][A-Za-z0-9_]+$  \nUpdate requires: No interruption\n"
        },
        "Description": {
          "type": "string",
          "maxLength": 1024,
          "description": "A natural language description of this variable.",
          "markdownDescription": "A natural language description of this variable.\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 1024  \nPattern: ^[\\s\\S]+$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Name",
        "Type",
        "Description"
      ],
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinitionVariableList": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/PolicyDefinitionVariable"
      },
      "maxItems": 200,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "PolicyDefinition": {
      "type": "object",
      "properties": {
        "Version": {
          "type": "string",
          "description": "The policy format version.",
          "markdownDescription": "The policy format version.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Types": {
          "$ref": "#/definitions/PolicyDefinitionTypeList",
          "description": "The types definition block of an AutomatedReasoningPolicyDefinition.",
          "markdownDescription": "The types definition block of an AutomatedReasoningPolicyDefinition.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "Rules": {
          "$ref": "#/definitions/PolicyDefinitionRuleList",
          "description": "The rules definition block of an AutomatedReasoningPolicyDefinition.",
          "markdownDescription": "The rules definition block of an AutomatedReasoningPolicyDefinition.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        },
        "Variables": {
          "$ref": "#/definitions/PolicyDefinitionVariableList",
          "description": "The variables definition block of an AutomatedReasoningPolicyDefinition.",
          "markdownDescription": "The variables definition block of an AutomatedReasoningPolicyDefinition.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "PolicyArn": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^arn:aws(-[^:]+)?:bedrock:[a-z0-9-]{1,20}:[0-9]{12}:automated-reasoning-policy\\/[a-z0-9]{12}$  \nUpdate requires: No interruption\n"
    },
    "Version": {
      "type": "string",
      "description": "Version of the policy that was created. This will always be `DRAFT`",
      "markdownDescription": "Version of the policy that was created. This will always be `DRAFT`\n\n---\n\nRequired: No  \nType: String  \nPattern: ^(([1-9][0-9]{0,11})|(DRAFT))$  \nUpdate requires: No interruption\n"
    },
    "DefinitionHash": {
      "type": "string",
      "minLength": 128,
      "maxLength": 128,
      "description": "The hash for this version",
      "markdownDescription": "The hash for this version\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 128  \nMaximum Length: 128  \nPattern: ^[0-9a-z]{128}$  \nUpdate requires: No interruption\n"
    },
    "CreatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Time this policy was created",
      "markdownDescription": "Time this policy was created\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "UpdatedAt": {
      "type": "string",
      "format": "date-time",
      "description": "Time this policy was last updated",
      "markdownDescription": "Time this policy was last updated\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
    },
    "PolicyId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "description": "The id of the policy",
      "markdownDescription": "The id of the policy\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^[a-z0-9]{12}$  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "type": "object",
      "description": "Definition of the key/value pair for a tag",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 128,
          "minLength": 1,
          "description": "Tag Key",
          "markdownDescription": "Tag Key\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nPattern: ^[a-zA-Z0-9\\s._:/=+@-]*$  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "description": "Tag Value",
          "markdownDescription": "Tag Value\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nPattern: ^[a-zA-Z0-9\\s._:/=+@-]*$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "Definition of the key/value pair for a tag\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Tags": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Name": {
      "$ref": "#/definitions/Name"
    },
    "Description": {
      "$ref": "#/definitions/Description"
    },
    "PolicyDefinition": {
      "$ref": "#/definitions/PolicyDefinition"
    },
    "PolicyArn": {
      "$ref": "#/definitions/PolicyArn"
    },
    "Version": {
      "$ref": "#/definitions/Version"
    },
    "DefinitionHash": {
      "$ref": "#/definitions/DefinitionHash"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    },
    "PolicyId": {
      "$ref": "#/definitions/PolicyId"
    },
    "Tags": {
      "$ref": "#/definitions/Tags"
    }
  },
  "required": [
    "Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "bedrock:CreateAutomatedReasoningPolicy",
        "bedrock:GetAutomatedReasoningPolicy",
        "bedrock:ExportAutomatedReasoningPolicyVersion",
        "bedrock:TagResource",
        "bedrock:ListTagsForResource"
      ]
    },
    "read": {
      "permissions": [
        "bedrock:GetAutomatedReasoningPolicy",
        "bedrock:ExportAutomatedReasoningPolicyVersion",
        "bedrock:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "bedrock:UpdateAutomatedReasoningPolicy",
        "bedrock:GetAutomatedReasoningPolicy",
        "bedrock:ExportAutomatedReasoningPolicyVersion",
        "bedrock:ListTagsForResource",
        "bedrock:TagResource",
        "bedrock:UntagResource"
      ]
    },
    "delete": {
      "permissions": [
        "bedrock:DeleteAutomatedReasoningPolicy",
        "bedrock:GetAutomatedReasoningPolicy"
      ]
    },
    "list": {
      "permissions": [
        "bedrock:ListAutomatedReasoningPolicies"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "bedrock:TagResource",
      "bedrock:ListTagsForResource",
      "bedrock:UntagResource"
    ]
  },
  "attributes": {
    "PolicyArn": {
      "$ref": "#/definitions/PolicyArn"
    },
    "Version": {
      "$ref": "#/definitions/Version"
    },
    "DefinitionHash": {
      "$ref": "#/definitions/DefinitionHash"
    },
    "CreatedAt": {
      "$ref": "#/definitions/CreatedAt"
    },
    "UpdatedAt": {
      "$ref": "#/definitions/UpdatedAt"
    },
    "PolicyId": {
      "$ref": "#/definitions/PolicyId"
    }
  }
}