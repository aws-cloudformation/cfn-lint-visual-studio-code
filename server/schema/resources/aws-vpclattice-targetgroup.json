{
  "typeName": "AWS::VpcLattice::TargetGroup",
  "description": "A target group is a collection of targets, or compute resources, that run your application or service. A target group can only be used by a single service.",
  "additionalProperties": false,
  "definitions": {
    "HealthCheckConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Enabled": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: HTTP | HTTPS  \nUpdate requires: No interruption"
        },
        "ProtocolVersion": {
          "type": "string",
          "enum": [
            "HTTP1",
            "HTTP2"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: HTTP1 | HTTP2  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Path": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 2048  \nPattern: (^/[a-zA-Z0-9@:%_+.~#?&/=-]*$|(^$))  \nUpdate requires: No interruption"
        },
        "HealthCheckIntervalSeconds": {
          "type": "integer",
          "maximum": 300,
          "minimum": 5,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "HealthCheckTimeoutSeconds": {
          "type": "integer",
          "maximum": 120,
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "HealthyThresholdCount": {
          "type": "integer",
          "maximum": 10,
          "minimum": 2,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "UnhealthyThresholdCount": {
          "type": "integer",
          "maximum": 10,
          "minimum": 2,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Matcher": {
          "$ref": "#/definitions/Matcher"
        }
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Matcher": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "HttpCode": {
          "type": "string",
          "minLength": 3,
          "maxLength": 2000,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 3  \nMaximum Length: 2000  \nPattern: ^[0-9-,]+$  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "HttpCode"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "TargetGroupConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: Integer  \nUpdate requires: No interruption"
        },
        "Protocol": {
          "type": "string",
          "enum": [
            "HTTP",
            "HTTPS"
          ],
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: HTTP | HTTPS  \nUpdate requires: No interruption"
        },
        "ProtocolVersion": {
          "type": "string",
          "default": "HTTP1",
          "enum": [
            "HTTP1",
            "HTTP2",
            "GRPC"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: HTTP1 | HTTP2 | GRPC  \nUpdate requires: No interruption"
        },
        "IpAddressType": {
          "type": "string",
          "default": "IPV4",
          "enum": [
            "IPV4",
            "IPV6"
          ],
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: IPV4 | IPV6  \nUpdate requires: No interruption"
        },
        "VpcIdentifier": {
          "type": "string",
          "maxLength": 2048,
          "minLength": 5,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 5  \nMaximum Length: 2048  \nPattern: ^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$  \nUpdate requires: No interruption"
        },
        "HealthCheck": {
          "$ref": "#/definitions/HealthCheckConfig"
        }
      },
      "required": [
        "Port",
        "Protocol",
        "VpcIdentifier"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: Replacement"
    },
    "Target": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Id": {
          "type": "string",
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption"
        },
        "Port": {
          "type": "integer",
          "maximum": 65535,
          "minimum": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Id"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "Config": {
      "$ref": "#/definitions/TargetGroupConfig"
    },
    "Name": {
      "type": "string",
      "maxLength": 128,
      "minLength": 3,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 3  \nMaximum Length: 128  \nPattern: ^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$  \nUpdate requires: Replacement"
    },
    "Type": {
      "type": "string",
      "enum": [
        "IP",
        "LAMBDA",
        "INSTANCE",
        "ALB"
      ],
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nAllowed Values: IP | LAMBDA | INSTANCE | ALB  \nUpdate requires: Replacement"
    },
    "Targets": {
      "type": "array",
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 100,
      "default": [],
      "items": {
        "$ref": "#/definitions/Target"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "insertionOrder": false,
      "uniqueItems": true,
      "minItems": 0,
      "maxItems": 50,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "Type"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/CreatedAt",
    "/properties/Id",
    "/properties/LastUpdatedAt",
    "/properties/Status"
  ],
  "createOnlyProperties": [
    "/properties/Name",
    "/properties/Type",
    "/properties/Config/Port",
    "/properties/Config/IpAddressType",
    "/properties/Config/Protocol",
    "/properties/Config/ProtocolVersion",
    "/properties/Config/VpcIdentifier"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "additionalIdentifiers": [
    [
      "/properties/Id"
    ]
  ],
  "handlers": {
    "create": {
      "permissions": [
        "vpc-lattice:CreateTargetGroup",
        "vpc-lattice:GetTargetGroup",
        "vpc-lattice:RegisterTargets",
        "vpc-lattice:ListTargets",
        "vpc-lattice:ListTagsForResource",
        "vpc-lattice:TagResource",
        "vpc-lattice:UntagResource",
        "ec2:DescribeVpcs",
        "ec2:DescribeInstances",
        "ec2:DescribeSubnets",
        "ec2:DescribeAvailabilityZoneMappings",
        "lambda:Invoke",
        "lambda:AddPermission",
        "elasticloadbalancing:DescribeLoadBalancers"
      ]
    },
    "read": {
      "permissions": [
        "vpc-lattice:GetTargetGroup",
        "vpc-lattice:ListTargets",
        "vpc-lattice:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "vpc-lattice:UpdateTargetGroup",
        "vpc-lattice:GetTargetGroup",
        "vpc-lattice:ListTargets",
        "vpc-lattice:RegisterTargets",
        "vpc-lattice:DeregisterTargets",
        "ec2:DescribeInstances",
        "ec2:DescribeSubnets",
        "ec2:DescribeAvailabilityZoneMappings",
        "elasticloadbalancing:DescribeLoadBalancers",
        "lambda:Invoke",
        "lambda:RemovePermission",
        "lambda:AddPermission",
        "vpc-lattice:TagResource",
        "vpc-lattice:UntagResource",
        "vpc-lattice:ListTagsForResource"
      ]
    },
    "delete": {
      "permissions": [
        "vpc-lattice:DeleteTargetGroup",
        "vpc-lattice:GetTargetGroup",
        "vpc-lattice:DeregisterTargets",
        "lambda:RemovePermission"
      ]
    },
    "list": {
      "permissions": [
        "vpc-lattice:ListTargetGroups"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "attributes": {
    "Arn": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:[a-z0-9\\-]+:vpc-lattice:[a-zA-Z0-9\\-]+:\\d{12}:targetgroup/tg-[0-9a-z]{17}$  \nUpdate requires: No interruption"
    },
    "CreatedAt": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Id": {
      "type": "string",
      "maxLength": 20,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 20  \nPattern: ^tg-[0-9a-z]{17}$  \nUpdate requires: No interruption"
    },
    "LastUpdatedAt": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
    },
    "Status": {
      "type": "string",
      "enum": [
        "CREATE_IN_PROGRESS",
        "ACTIVE",
        "DELETE_IN_PROGRESS",
        "CREATE_FAILED",
        "DELETE_FAILED"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: CREATE_IN_PROGRESS | ACTIVE | DELETE_IN_PROGRESS | CREATE_FAILED | DELETE_FAILED  \nUpdate requires: No interruption"
    }
  }
}