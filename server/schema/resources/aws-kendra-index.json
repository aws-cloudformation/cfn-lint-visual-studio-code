{
  "typeName": "AWS::Kendra::Index",
  "description": "A Kendra index",
  "sourceUrl": "https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html",
  "definitions": {
    "ServerSideEncryptionConfiguration": {
      "type": "object",
      "properties": {
        "KmsKeyId": {
          "$ref": "#/definitions/KmsKeyId"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Description": {
      "type": "string",
      "maxLength": 1000,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1000  \nUpdate requires: No interruption\n"
    },
    "KmsKeyId": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nUpdate requires: No interruption\n"
    },
    "Tag": {
      "description": "A label for tagging Kendra resources",
      "type": "object",
      "properties": {
        "Key": {
          "description": "A string used to identify this tag",
          "type": "string",
          "minLength": 1,
          "maxLength": 128,
          "markdownDescription": "A string used to identify this tag\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 1  \nMaximum Length: 128  \nUpdate requires: No interruption\n"
        },
        "Value": {
          "description": "A string containing the value for the tag",
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "markdownDescription": "A string containing the value for the tag\n\n---\n\nRequired: Yes  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "markdownDescription": "A label for tagging Kendra resources\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "TagList": {
      "description": "List of tags",
      "type": "array",
      "insertionOrder": false,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "markdownDescription": "List of tags\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "Importance": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "Freshness": {
      "type": "boolean",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
    },
    "Duration": {
      "type": "string",
      "minLength": 1,
      "maxLength": 10,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 10  \nPattern: [0-9]+[s]  \nUpdate requires: No interruption\n"
    },
    "Order": {
      "type": "string",
      "enum": [
        "ASCENDING",
        "DESCENDING"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ASCENDING | DESCENDING  \nUpdate requires: No interruption\n"
    },
    "Relevance": {
      "type": "object",
      "properties": {
        "Freshness": {
          "$ref": "#/definitions/Freshness"
        },
        "Importance": {
          "$ref": "#/definitions/Importance"
        },
        "Duration": {
          "$ref": "#/definitions/Duration"
        },
        "RankOrder": {
          "$ref": "#/definitions/Order"
        },
        "ValueImportanceItems": {
          "$ref": "#/definitions/ValueImportanceItems"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ValueImportanceItems": {
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/ValueImportanceItem"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "ValueImportanceItem": {
      "type": "object",
      "properties": {
        "Key": {
          "$ref": "#/definitions/ValueImportanceItemKey"
        },
        "Value": {
          "$ref": "#/definitions/Importance"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "ValueImportanceItemKey": {
      "type": "string",
      "minLength": 1,
      "maxLength": 50,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 50  \nUpdate requires: No interruption\n"
    },
    "Search": {
      "type": "object",
      "properties": {
        "Facetable": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Searchable": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Displayable": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        },
        "Sortable": {
          "type": "boolean",
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: Boolean  \nUpdate requires: No interruption\n"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DocumentMetadataConfigurationName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 30,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 30  \nUpdate requires: No interruption\n"
    },
    "DocumentAttributeValueType": {
      "type": "string",
      "enum": [
        "STRING_VALUE",
        "STRING_LIST_VALUE",
        "LONG_VALUE",
        "DATE_VALUE"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: STRING_VALUE | STRING_LIST_VALUE | LONG_VALUE | DATE_VALUE  \nUpdate requires: No interruption\n"
    },
    "DocumentMetadataConfiguration": {
      "type": "object",
      "properties": {
        "Name": {
          "$ref": "#/definitions/DocumentMetadataConfigurationName"
        },
        "Type": {
          "$ref": "#/definitions/DocumentAttributeValueType"
        },
        "Relevance": {
          "$ref": "#/definitions/Relevance"
        },
        "Search": {
          "$ref": "#/definitions/Search"
        }
      },
      "additionalProperties": false,
      "required": [
        "Name",
        "Type"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "DocumentMetadataConfigurationList": {
      "type": "array",
      "insertionOrder": false,
      "maxItems": 500,
      "items": {
        "$ref": "#/definitions/DocumentMetadataConfiguration"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    },
    "StorageCapacityUnits": {
      "type": "integer",
      "minimum": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "QueryCapacityUnits": {
      "type": "integer",
      "minimum": 0,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Integer  \nUpdate requires: No interruption\n"
    },
    "CapacityUnitsConfiguration": {
      "type": "object",
      "properties": {
        "StorageCapacityUnits": {
          "$ref": "#/definitions/StorageCapacityUnits"
        },
        "QueryCapacityUnits": {
          "$ref": "#/definitions/QueryCapacityUnits"
        }
      },
      "additionalProperties": false,
      "required": [
        "StorageCapacityUnits",
        "QueryCapacityUnits"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "Edition": {
      "description": "Edition of index",
      "type": "string",
      "enum": [
        "DEVELOPER_EDITION",
        "ENTERPRISE_EDITION",
        "GEN_AI_ENTERPRISE_EDITION"
      ],
      "markdownDescription": "Edition of index\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: DEVELOPER_EDITION | ENTERPRISE_EDITION | GEN_AI_ENTERPRISE_EDITION  \nUpdate requires: No interruption\n"
    },
    "Name": {
      "description": "Name of index",
      "type": "string",
      "minLength": 1,
      "maxLength": 1000,
      "markdownDescription": "Name of index\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1000  \nUpdate requires: No interruption\n"
    },
    "RoleArn": {
      "description": "Role Arn",
      "type": "string",
      "minLength": 1,
      "maxLength": 1284,
      "markdownDescription": "Role Arn\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 1284  \nPattern: arn:[a-z0-9-\\.]{1,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[^/].{0,1023}  \nUpdate requires: No interruption\n"
    },
    "Id": {
      "description": "Unique ID of index",
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "markdownDescription": "Unique ID of index\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 36  \nMaximum Length: 36  \nUpdate requires: No interruption\n"
    },
    "Arn": {
      "type": "string",
      "maxLength": 1000,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 1000  \nUpdate requires: No interruption\n"
    },
    "UserContextPolicy": {
      "type": "string",
      "enum": [
        "ATTRIBUTE_FILTER",
        "USER_TOKEN"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: ATTRIBUTE_FILTER | USER_TOKEN  \nUpdate requires: No interruption\n"
    },
    "UserNameAttributeField": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nUpdate requires: No interruption\n"
    },
    "GroupAttributeField": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nUpdate requires: No interruption\n"
    },
    "KeyLocation": {
      "type": "string",
      "enum": [
        "URL",
        "SECRET_MANAGER"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nAllowed Values: URL | SECRET_MANAGER  \nUpdate requires: No interruption\n"
    },
    "Issuer": {
      "type": "string",
      "minLength": 1,
      "maxLength": 65,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 65  \nUpdate requires: No interruption\n"
    },
    "ClaimRegex": {
      "type": "string",
      "minLength": 1,
      "maxLength": 100,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 100  \nUpdate requires: No interruption\n"
    },
    "Url": {
      "type": "string",
      "minLength": 1,
      "maxLength": 2048,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 2048  \nPattern: ^(https?|ftp|file):\\/\\/([^\\s]*)  \nUpdate requires: No interruption\n"
    },
    "JsonTokenTypeConfiguration": {
      "type": "object",
      "properties": {
        "UserNameAttributeField": {
          "$ref": "#/definitions/UserNameAttributeField"
        },
        "GroupAttributeField": {
          "$ref": "#/definitions/GroupAttributeField"
        }
      },
      "additionalProperties": false,
      "required": [
        "UserNameAttributeField",
        "GroupAttributeField"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "JwtTokenTypeConfiguration": {
      "type": "object",
      "properties": {
        "KeyLocation": {
          "$ref": "#/definitions/KeyLocation"
        },
        "URL": {
          "$ref": "#/definitions/Url"
        },
        "SecretManagerArn": {
          "$ref": "#/definitions/RoleArn"
        },
        "UserNameAttributeField": {
          "$ref": "#/definitions/UserNameAttributeField"
        },
        "GroupAttributeField": {
          "$ref": "#/definitions/GroupAttributeField"
        },
        "Issuer": {
          "$ref": "#/definitions/Issuer"
        },
        "ClaimRegex": {
          "$ref": "#/definitions/ClaimRegex"
        }
      },
      "additionalProperties": false,
      "required": [
        "KeyLocation"
      ],
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "UserTokenConfiguration": {
      "type": "object",
      "properties": {
        "JwtTokenTypeConfiguration": {
          "$ref": "#/definitions/JwtTokenTypeConfiguration"
        },
        "JsonTokenTypeConfiguration": {
          "$ref": "#/definitions/JsonTokenTypeConfiguration"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    },
    "UserTokenConfigurationList": {
      "type": "array",
      "insertionOrder": false,
      "maxItems": 1,
      "items": {
        "$ref": "#/definitions/UserTokenConfiguration"
      },
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption\n"
    }
  },
  "properties": {
    "Id": {
      "$ref": "#/definitions/Id"
    },
    "Arn": {
      "$ref": "#/definitions/Arn"
    },
    "Description": {
      "description": "A description for the index",
      "$ref": "#/definitions/Description",
      "markdownDescription": "A description for the index\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "ServerSideEncryptionConfiguration": {
      "description": "Server side encryption configuration",
      "$ref": "#/definitions/ServerSideEncryptionConfiguration",
      "markdownDescription": "Server side encryption configuration\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement\n"
    },
    "Tags": {
      "description": "Tags for labeling the index",
      "$ref": "#/definitions/TagList",
      "markdownDescription": "Tags for labeling the index\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "Name": {
      "$ref": "#/definitions/Name"
    },
    "RoleArn": {
      "$ref": "#/definitions/RoleArn"
    },
    "Edition": {
      "$ref": "#/definitions/Edition"
    },
    "DocumentMetadataConfigurations": {
      "description": "Document metadata configurations",
      "$ref": "#/definitions/DocumentMetadataConfigurationList",
      "markdownDescription": "Document metadata configurations\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "CapacityUnits": {
      "description": "Capacity units",
      "$ref": "#/definitions/CapacityUnitsConfiguration",
      "markdownDescription": "Capacity units\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption\n"
    },
    "UserContextPolicy": {
      "$ref": "#/definitions/UserContextPolicy"
    },
    "UserTokenConfigurations": {
      "$ref": "#/definitions/UserTokenConfigurationList"
    }
  },
  "required": [
    "Name",
    "RoleArn",
    "Edition"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "kendra:CreateIndex",
        "kendra:DescribeIndex",
        "kendra:UpdateIndex",
        "kendra:ListTagsForResource",
        "iam:PassRole",
        "kendra:TagResource",
        "kms:DescribeKey",
        "kms:CreateGrant"
      ],
      "timeoutInMinutes": 240
    },
    "read": {
      "permissions": [
        "kendra:DescribeIndex",
        "kendra:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "kendra:DescribeIndex",
        "kendra:UpdateIndex",
        "kendra:ListTagsForResource",
        "kendra:TagResource",
        "kendra:UntagResource",
        "iam:PassRole"
      ],
      "timeoutInMinutes": 240
    },
    "delete": {
      "permissions": [
        "kendra:DescribeIndex",
        "kendra:DeleteIndex",
        "kms:RetireGrant"
      ],
      "timeoutInMinutes": 720
    },
    "list": {
      "permissions": [
        "kendra:ListIndices"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagUpdatable": true,
    "tagOnCreate": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags",
    "permissions": [
      "kendra:UntagResource",
      "kendra:TagResource",
      "kendra:ListTagsForResource"
    ]
  },
  "additionalProperties": false,
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "readOnlyProperties": [
    "/properties/Id",
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/Edition",
    "/properties/ServerSideEncryptionConfiguration"
  ],
  "attributes": {
    "Id": {
      "$ref": "#/definitions/Id"
    },
    "Arn": {
      "$ref": "#/definitions/Arn"
    }
  }
}