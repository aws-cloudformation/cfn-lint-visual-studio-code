{
  "typeName": "AWS::ControlTower::EnabledBaseline",
  "description": "Definition of AWS::ControlTower::EnabledBaseline Resource Type",
  "definitions": {
    "Parameter": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Value": {
          "$ref": "#/definitions/AnyType"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "type": "string",
          "maxLength": 256,
          "minLength": 1,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 256  \nUpdate requires: No interruption"
        },
        "Value": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMaximum Length: 256  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "AnyType": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "object"
        },
        {
          "type": "number"
        },
        {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "number"
              },
              {
                "type": "object"
              },
              {
                "type": "string"
              }
            ]
          },
          "insertionOrder": false
        },
        {
          "type": "boolean"
        }
      ]
    }
  },
  "properties": {
    "BaselineIdentifier": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:aws[0-9a-zA-Z_\\-:\\/]+$  \nUpdate requires: Replacement"
    },
    "BaselineVersion": {
      "type": "string",
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^\\d+(?:\\.\\d+){0,2}$  \nUpdate requires: No interruption"
    },
    "TargetIdentifier": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: Yes  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:aws[0-9a-zA-Z_\\-:\\/]+$  \nUpdate requires: Replacement"
    },
    "Parameters": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Parameter"
      },
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "insertionOrder": false,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    }
  },
  "required": [
    "BaselineIdentifier",
    "TargetIdentifier",
    "BaselineVersion"
  ],
  "readOnlyProperties": [
    "/properties/EnabledBaselineIdentifier"
  ],
  "createOnlyProperties": [
    "/properties/TargetIdentifier",
    "/properties/BaselineIdentifier"
  ],
  "primaryIdentifier": [
    "/properties/EnabledBaselineIdentifier"
  ],
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": true,
    "tagProperty": "/properties/Tags"
  },
  "handlers": {
    "create": {
      "permissions": [
        "controltower:EnableBaseline",
        "controltower:TagResource",
        "controltower:GetBaselineOperation",
        "controltower:GetEnabledBaseline",
        "controltower:ListTagsForResource",
        "organizations:CreateOrganizationalUnit",
        "organizations:CreateOrganization",
        "organizations:UpdatePolicy",
        "organizations:CreatePolicy",
        "organizations:AttachPolicy",
        "organizations:DetachPolicy",
        "organizations:DeletePolicy",
        "organizations:EnablePolicyType",
        "organizations:EnableAWSServiceAccess",
        "organizations:ListRoots",
        "servicecatalog:AssociatePrincipalWithPortfolio",
        "servicecatalog:AssociateProductWithPortfolio",
        "servicecatalog:CreatePortfolio",
        "servicecatalog:CreateProduct",
        "servicecatalog:CreateProvisioningArtifact",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:UpdatePortfolio",
        "servicecatalog:UpdateProvisioningArtifact",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:DeleteProvisioningArtifact"
      ]
    },
    "read": {
      "permissions": [
        "controltower:GetEnabledBaseline",
        "controltower:ListEnabledBaselines",
        "controltower:ListTagsForResource"
      ]
    },
    "update": {
      "permissions": [
        "controltower:UpdateEnabledBaseline",
        "controltower:GetBaselineOperation",
        "organizations:CreateOrganizationalUnit",
        "organizations:CreateOrganization",
        "organizations:UpdatePolicy",
        "organizations:CreatePolicy",
        "organizations:AttachPolicy",
        "organizations:DetachPolicy",
        "organizations:DeletePolicy",
        "organizations:EnablePolicyType",
        "organizations:EnableAWSServiceAccess",
        "organizations:ListRoots",
        "servicecatalog:AssociatePrincipalWithPortfolio",
        "servicecatalog:AssociateProductWithPortfolio",
        "servicecatalog:CreatePortfolio",
        "servicecatalog:CreateProduct",
        "servicecatalog:CreateProvisioningArtifact",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:UpdatePortfolio",
        "servicecatalog:UpdateProvisioningArtifact",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:DeleteProvisioningArtifact",
        "controltower:TagResource",
        "controltower:ListTagsForResource",
        "controltower:GetEnabledBaseline"
      ]
    },
    "delete": {
      "permissions": [
        "controltower:DisableBaseline",
        "controltower:GetBaselineOperation",
        "organizations:CreateOrganizationalUnit",
        "organizations:CreateOrganization",
        "organizations:UpdatePolicy",
        "organizations:CreatePolicy",
        "organizations:AttachPolicy",
        "organizations:DetachPolicy",
        "organizations:DeletePolicy",
        "organizations:EnablePolicyType",
        "organizations:EnableAWSServiceAccess",
        "organizations:ListRoots",
        "servicecatalog:AssociatePrincipalWithPortfolio",
        "servicecatalog:AssociateProductWithPortfolio",
        "servicecatalog:CreatePortfolio",
        "servicecatalog:CreateProduct",
        "servicecatalog:CreateProvisioningArtifact",
        "servicecatalog:ListPortfolios",
        "servicecatalog:ListProvisioningArtifacts",
        "servicecatalog:SearchProductsAsAdmin",
        "servicecatalog:UpdatePortfolio",
        "servicecatalog:UpdateProvisioningArtifact",
        "servicecatalog:ListPrincipalsForPortfolio",
        "servicecatalog:DeleteProvisioningArtifact"
      ]
    },
    "list": {
      "permissions": [
        "controltower:ListEnabledBaselines"
      ]
    }
  },
  "additionalProperties": false,
  "attributes": {
    "EnabledBaselineIdentifier": {
      "type": "string",
      "maxLength": 2048,
      "minLength": 20,
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 20  \nMaximum Length: 2048  \nPattern: ^arn:aws[0-9a-zA-Z_\\-:\\/]+$  \nUpdate requires: No interruption"
    }
  }
}