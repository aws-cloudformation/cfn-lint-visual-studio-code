{
  "additionalProperties": false,
  "definitions": {
    "OriginAccessControlConfig": {
      "additionalProperties": false,
      "properties": {
        "Description": {
          "type": "string",
          "description": "A description of the origin access control.",
          "markdownDescription": "A description of the origin access control.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\n"
        },
        "Name": {
          "type": "string",
          "description": "A name to identify the origin access control. You can specify up to 64 characters.",
          "markdownDescription": "A name to identify the origin access control. You can specify up to 64 characters.\n\n---\n\nRequired: Yes  \nType: String  \nUpdate requires: No interruption\n"
        },
        "OriginAccessControlOriginType": {
          "type": "string",
          "description": "The type of origin that this origin access control is for.",
          "markdownDescription": "The type of origin that this origin access control is for.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^(s3|mediastore|lambda|mediapackagev2)$  \nUpdate requires: No interruption\n"
        },
        "SigningBehavior": {
          "type": "string",
          "description": "Specifies which requests CloudFront signs (adds authentication information to). Specify ``always`` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide*.\n This field can have one of the following values:\n  +   ``always`` \u2013 CloudFront signs all origin requests, overwriting the ``Authorization`` header from the viewer request if one exists.\n  +   ``never`` \u2013 CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.\n  +   ``no-override`` \u2013 If the viewer request doesn't contain the ``Authorization`` header, then CloudFront signs the origin request. If the viewer request contains the ``Authorization`` header, then CloudFront doesn't sign the origin request and instead passes along the ``Authorization`` header from the viewer request. *WARNING: To pass along the Authorization header from the viewer request, you must add the Authorization header to a cache policy for all cache behaviors that use origins associated with this origin access control.*",
          "markdownDescription": "Specifies which requests CloudFront signs (adds authentication information to). Specify ``always`` for the most common use case. For more information, see [origin access control advanced settings](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#oac-advanced-settings) in the *Amazon CloudFront Developer Guide*.\n This field can have one of the following values:\n  +   ``always`` \u2013 CloudFront signs all origin requests, overwriting the ``Authorization`` header from the viewer request if one exists.\n  +   ``never`` \u2013 CloudFront doesn't sign any origin requests. This value turns off origin access control for all origins in all distributions that use this origin access control.\n  +   ``no-override`` \u2013 If the viewer request doesn't contain the ``Authorization`` header, then CloudFront signs the origin request. If the viewer request contains the ``Authorization`` header, then CloudFront doesn't sign the origin request and instead passes along the ``Authorization`` header from the viewer request. *WARNING: To pass along the Authorization header from the viewer request, you must add the Authorization header to a cache policy for all cache behaviors that use origins associated with this origin access control.*\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^(never|no-override|always)$  \nUpdate requires: No interruption\n"
        },
        "SigningProtocol": {
          "type": "string",
          "description": "The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests. The only valid value is ``sigv4``.",
          "markdownDescription": "The signing protocol of the origin access control, which determines how CloudFront signs (authenticates) requests. The only valid value is ``sigv4``.\n\n---\n\nRequired: Yes  \nType: String  \nPattern: ^(sigv4)$  \nUpdate requires: No interruption\n"
        }
      },
      "required": [
        "Name",
        "SigningProtocol",
        "SigningBehavior",
        "OriginAccessControlOriginType"
      ],
      "type": "object",
      "description": "Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.\n This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.\n For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.",
      "markdownDescription": "Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.\n This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.\n For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.\n\n---\n\nRequired: No  \nUpdate requires: No interruption\n"
    }
  },
  "description": "Creates a new origin access control in CloudFront. After you create an origin access control, you can add it to an origin in a CloudFront distribution so that CloudFront sends authenticated (signed) requests to the origin.\n This makes it possible to block public access to the origin, allowing viewers (users) to access the origin's content only through CloudFront.\n For more information about using a CloudFront origin access control, see [Restricting access to an origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-origin.html) in the *Amazon CloudFront Developer Guide*.",
  "handlers": {
    "create": {
      "permissions": [
        "cloudfront:CreateOriginAccessControl"
      ]
    },
    "delete": {
      "permissions": [
        "cloudfront:DeleteOriginAccessControl",
        "cloudfront:GetOriginAccessControl"
      ]
    },
    "list": {
      "permissions": [
        "cloudfront:ListOriginAccessControls"
      ]
    },
    "read": {
      "permissions": [
        "cloudfront:GetOriginAccessControl"
      ]
    },
    "update": {
      "permissions": [
        "cloudfront:UpdateOriginAccessControl",
        "cloudfront:GetOriginAccessControl"
      ]
    }
  },
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "properties": {
    "Id": {
      "type": "string",
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    },
    "OriginAccessControlConfig": {
      "$ref": "#/definitions/OriginAccessControlConfig",
      "description": "The origin access control.",
      "markdownDescription": "The origin access control.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: No interruption\n"
    }
  },
  "readOnlyProperties": [
    "/properties/Id"
  ],
  "required": [
    "OriginAccessControlConfig"
  ],
  "tagging": {
    "cloudFormationSystemTags": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "taggable": false
  },
  "typeName": "AWS::CloudFront::OriginAccessControl",
  "attributes": {
    "Id": {
      "type": "string",
      "description": "",
      "markdownDescription": "\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption\nRead only property: Yes"
    }
  }
}