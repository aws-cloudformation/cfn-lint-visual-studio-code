{
  "typeName": "AWS::LakeFormation::DataCellsFilter",
  "description": "A resource schema representing a Lake Formation Data Cells Filter.",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "CatalogIdString": {
      "description": "A string representing the Catalog Id.",
      "type": "string",
      "minLength": 12,
      "maxLength": 12,
      "markdownDescription": "A string representing the Catalog Id.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 12  \nMaximum Length: 12  \nUpdate requires: No interruption"
    },
    "NameString": {
      "description": "A string representing a resource's name.",
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "markdownDescription": "A string representing a resource's name.\n\n---\n\nRequired: No  \nType: String  \nMinimum Length: 1  \nMaximum Length: 255  \nUpdate requires: No interruption"
    },
    "RowFilter": {
      "description": "An object representing the Data Cells Filter's Row Filter. Either a Filter Expression or a Wildcard is required.",
      "type": "object",
      "properties": {
        "FilterExpression": {
          "description": "A PartiQL predicate.",
          "type": "string",
          "markdownDescription": "A PartiQL predicate.\n\n---\n\nRequired: No  \nType: String  \nUpdate requires: No interruption"
        },
        "AllRowsWildcard": {
          "description": "An empty object representing a row wildcard.",
          "type": "object",
          "additionalProperties": false,
          "markdownDescription": "An empty object representing a row wildcard.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An object representing the Data Cells Filter's Row Filter. Either a Filter Expression or a Wildcard is required.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    },
    "ColumnNames": {
      "description": "A list of column names.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/NameString"
      },
      "markdownDescription": "A list of column names.\n\n---\n\nRequired: No  \nType: Array  \nUpdate requires: No interruption"
    },
    "ColumnWildcard": {
      "description": "An object representing the Data Cells Filter's Columns. Either Column Names or a Wildcard is required.",
      "type": "object",
      "properties": {
        "ExcludedColumnNames": {
          "description": "A list of column names to be excluded from the Data Cells Filter.",
          "$ref": "#/definitions/ColumnNames",
          "markdownDescription": "A list of column names to be excluded from the Data Cells Filter.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: No interruption"
        }
      },
      "additionalProperties": false,
      "markdownDescription": "An object representing the Data Cells Filter's Columns. Either Column Names or a Wildcard is required.\n\n---\n\nRequired: No  \nUpdate requires: No interruption"
    }
  },
  "properties": {
    "TableCatalogId": {
      "description": "The Catalog Id of the Table on which to create a Data Cells Filter.",
      "$ref": "#/definitions/CatalogIdString",
      "markdownDescription": "The Catalog Id of the Table on which to create a Data Cells Filter.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "DatabaseName": {
      "description": "The name of the Database that the Table resides in.",
      "$ref": "#/definitions/NameString",
      "markdownDescription": "The name of the Database that the Table resides in.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "TableName": {
      "description": "The name of the Table to create a Data Cells Filter for.",
      "$ref": "#/definitions/NameString",
      "markdownDescription": "The name of the Table to create a Data Cells Filter for.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "Name": {
      "description": "The desired name of the Data Cells Filter.",
      "$ref": "#/definitions/NameString",
      "markdownDescription": "The desired name of the Data Cells Filter.\n\n---\n\nRequired: Yes  \nType:   \nUpdate requires: Replacement"
    },
    "RowFilter": {
      "description": "An object representing the Data Cells Filter's Row Filter. Either a Filter Expression or a Wildcard is required",
      "$ref": "#/definitions/RowFilter",
      "markdownDescription": "An object representing the Data Cells Filter's Row Filter. Either a Filter Expression or a Wildcard is required\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "ColumnNames": {
      "description": "A list of columns to be included in this Data Cells Filter.",
      "$ref": "#/definitions/ColumnNames",
      "markdownDescription": "A list of columns to be included in this Data Cells Filter.\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    },
    "ColumnWildcard": {
      "description": "An object representing the Data Cells Filter's Columns. Either Column Names or a Wildcard is required",
      "$ref": "#/definitions/ColumnWildcard",
      "markdownDescription": "An object representing the Data Cells Filter's Columns. Either Column Names or a Wildcard is required\n\n---\n\nRequired: No  \nType:   \nUpdate requires: Replacement"
    }
  },
  "additionalProperties": false,
  "required": [
    "TableCatalogId",
    "DatabaseName",
    "TableName",
    "Name"
  ],
  "createOnlyProperties": [
    "/properties/TableCatalogId",
    "/properties/DatabaseName",
    "/properties/TableName",
    "/properties/Name",
    "/properties/RowFilter",
    "/properties/ColumnNames",
    "/properties/ColumnWildcard"
  ],
  "replacementStrategy": "delete_then_create",
  "tagging": {
    "taggable": false
  },
  "primaryIdentifier": [
    "/properties/TableCatalogId",
    "/properties/DatabaseName",
    "/properties/TableName",
    "/properties/Name"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lakeformation:CreateDataCellsFilter",
        "glue:GetTable"
      ]
    },
    "delete": {
      "permissions": [
        "lakeformation:DeleteDataCellsFilter"
      ]
    },
    "read": {
      "permissions": [
        "lakeformation:ListDataCellsFilter"
      ]
    },
    "list": {
      "permissions": [
        "lakeformation:ListDataCellsFilter"
      ]
    }
  },
  "attributes": {}
}